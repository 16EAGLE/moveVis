% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_frames.R
\name{join_frames}
\alias{join_frames}
\title{Join multiple frames side-by-side}
\usage{
join_frames(
  frames_list,
  guides = "collect",
  design = NULL,
  render_all_legends = FALSE,
  ...,
  frames_lists = NULL,
  verbose = T
)
}
\arguments{
\item{frames_list}{list, a list of two or more \code{moveVis} frame objects that you want to combine into onw. Must be of equal lengths. Frames are being passed to \code{\link[patchwork]{wrap_plots}} and combined frame-by-frame.}

\item{guides}{character, controls how to treat the scales/legends of both frames. See \code{\link[patchwork]{wrap_plots}} for details. Defaults to 'collect'.}

\item{design}{character, controls how frames are arranged. See \code{\link[patchwork]{wrap_plots}} for details. By default, frames are joined sidy-by-side horizontally.}

\item{render_all_legends}{logical, whether legends should be preserved (\code{TRUE}) or only the legend of the first frames object should be rendered (\code{FALSE}, default).}

\item{...}{Further arguments, specifying the appearance of the joined \code{ggplot2} objects, passed to \code{\link[patchwork]{wrap_plots}}. See \code{\link[patchwork]{wrap_plots}} for further options.}

\item{frames_lists}{deprecated}

\item{verbose}{logical, if \code{TRUE}, messages and progress information are displayed on the console (default).}
}
\value{
A frames object of class \code{moveVis}.
}
\description{
This function joins two or more \code{moveVis} frames of equal lengths side-by-side into a single plot per frame using \code{\link[patchwork]{wrap_plots}}. This is useful if you want to side-by-side combine spatial frames returned by \code{\link{frames_spatial}} with graph frames returned by \code{\link{frames_graph}}.
}
\examples{
library(moveVis)
library(move2)
library(terra)

data("move_data", package = "moveVis")
r <- readRDS(example_data(file = "basemap_data.rds"))

# align movement
m <- align_move(move_data, res = units::set_units(4, "min"))

# create spatial frames 
frames_sp <- frames_spatial(m, r, r_type = "gradient", fade_raster = TRUE) \%>\% 
  add_colourscale(
    type = "gradient", colours = c("orange", "white", "darkgreen"),
    legend_title = "NDVI"
  )

# create graph frames
frames_flow <- frames_graph(m, r, path_legend = FALSE, graph_type = "flow")
frames_hist <- frames_graph(m, r, path_legend = FALSE, graph_type = "hist")

# check lengths (must be equal)
sapply(list(frames_sp, frames_flow, frames_hist), length)

# define a patchwork design (see ?wrap_plots)
design <- "
AAB
AAC
"

# create joined frames
frames_joined <- join_frames(
  list(frames_sp, frames_flow, frames_hist), design = design
)
frames_joined[[100]]

# adjust width and height to suite your joined frames
\dontrun{
out_file <- tempfile(fileext = ".gif")
animate_frames(
  frames_joined, out_file = out_file, fps = 25, width = 900, height = 500, 
  res = 90, display = TRUE, overwrite = TRUE
)
}
}
\seealso{
\code{\link{frames_spatial}} \code{\link{frames_graph}} \code{\link{animate_frames}}
}
