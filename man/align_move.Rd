% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align_move.R
\name{align_move}
\alias{align_move}
\title{Align movement data}
\usage{
align_move(
  m,
  res = "minimum",
  start_end_time = NULL,
  fill_na_values = TRUE,
  ...,
  verbose = TRUE
)
}
\arguments{
\item{m}{\code{move2} object, which is allowed to contain irregular timestamps and diverging temporal resolutions.}

\item{res}{either  a \code{units} object representing the temporal resolution \code{m} should be aligned to, or a character being one of 'minimum', 'maximum', 'mean' or 'median' to indicate how the target resolution should be derived from \code{m}.}

\item{start_end_time}{\code{NULL} (default) or a vector of two POSIXct times (one start time and one end time for alignment). If \code{NULL}, the start and end time are retrieved from \code{m} and used for alignment.
\itemize{
  \item \code{"minimum"} to use the smallest temporal resolution of \code{m} (default)
  \item \code{"maximum"} to use the largest temporal resolution of \code{m}
  \item \code{"mean"} to use the rounded average temporal resolution of \code{m}
  \item \code{"median"} to use the rounded median temporal resolution of \code{m}
}}

\item{fill_na_values}{logical, whether to fill empty (\code{NA}) values of columns of \code{m} at interpolated locations (defaults to \code{TRUE}). Column values at interpolated locations are filled with the value of the temporally closest location.}

\item{...}{deprecated arguments, including \code{digit}, \code{unit} and \code{spaceMethod}.}

\item{verbose}{logical, if \code{TRUE}, messages and progress information are displayed on the console (default).}
}
\value{
\code{move2} object, with aligned positions at uniform temporal scale computed from \code{m}, ready to be used by \code{\link{frames_spatial}}.
}
\description{
This function aligns movement data to a uniform time scale with a uniform temporal resolution throughout the complete movement sequence. 
This prepares the provided movement data to be usable by \code{\link{frames_spatial}}, which requires a uniform time scale and
a consistent, unique temporal resolution for all supplied trajectories.
}
\examples{
library(moveVis)
library(move2)
library(lubridate)

# example data
data("move_data")

# the tracks in move_data have irregular timestamps and sampling rates.
# print unique timestamps and time lags
unique(mt_time(move_data))
unique(mt_time_lags(move_data, units = "s"))

# use align_move to interpolate move_data to a uniform time scale and lag.
# e.g. setting a resolution of 4 minutes:
m <- align_move(m = move_data, res = units::set_units(4, "min"))
# check the result: records with attribute interpolate == TRUE have been added
# all trajectories are now aligend to a uniform 4-minute resolution:
unique(mt_time_lags(m, units = "min"))

# same with resolution of 1 hour:
m <- align_move(move_data, res = units::set_units(1, "hour"))
unique(mt_time_lags(m, units = "hour"))

# resolution of 15 seconds:
m <- align_move(move_data, res = units::set_units(15, "sec"))
unique(mt_time_lags(m, units = "sec"))

# you can set the start/end times if needed:
# first, let us retrieve the start and end times
start_end_time <- range(mt_time(m))
start_end_time

# I want the start time to be at 00 minutes and 00 seconds for the first track:
start_end_time <- round.POSIXt(start_end_time, units = "hours")

m <- align_move(
  move_data, res = units::set_units(4, "min"), 
  start_end_time = start_end_time
)
mt_time(m)
}
\seealso{
\code{\link{frames_spatial}} \code{\link{frames_graph}}
}
\author{
Jakob Schwalb-Willmann
}
