[{"path":"https://movevis.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakob Schwalb-Willmann. Author, maintainer. Annika Ludwig. Author, contributor.","code":""},{"path":"https://movevis.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schwalb-Willmann, J.; Remelgado, R.; Safi, K.; Wegmann, M. (2020). moveVis: Animating movement trajectories synchronicity static temporally dynamic environmental data R. Methods Ecol Evol. 2020; 11: 664–669. https://doi.org/10.1111/2041-210X.13374","code":"@Article{,   author = {Jakob Schwalb-Willmann and Ruben Remelgado and Kamran Safi and Martin Wegmann},   title = {moveVis: Animating movement trajectories in synchronicity with static or temporally dynamic environmental data in R},   journal = {Methods in Ecology and Evolution},   number = {11},   pages = {664-669},   year = {2020},   doi = {10.1111/2041-210X.13374}, }"},{"path":"https://movevis.org/index.html","id":"movevis-","dir":"","previous_headings":"","what":"Movement Data Visualization","title":"Movement Data Visualization","text":"Note: moveVis currently updated support move2 representing trajectory data terra representing raster data. package version currently hosted GitHub provided “”. work progress subject changes. Unit tests partially non-functioning, documentation may yet --date, bugs yet fixed.","code":""},{"path":"https://movevis.org/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Movement Data Visualization","text":"moveVis provides tools visualize movement data (e.g. GPS tracking) temporal changes environmental data (e.g. remote sensing) creating video animations. works move raster class inputs turns ggplot2 frames can customized. moveVis uses gifski (wrapping gifski cargo crate) av (binding FFmpeg) render frames animated GIF video files. peer-reviewed open-access paper accompanying moveVis published Methods Ecology Evolution.  Figure 1: Example movement tracks nearby Lake Constance top OSM watercolor mapbox satellite base map  Figure 2: Example movement tracks nearby Lake Constance gradient base layer faded time","code":""},{"path":"https://movevis.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Movement Data Visualization","text":"Install latest stable relasae moveVis CRAN: Install latest development version moveVis GitHub:","code":"install.packages(\"moveVis\") devtools::install_github(\"16EAGLE/moveVis\")"},{"path":"https://movevis.org/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"Movement Data Visualization","text":"following example shows make simple animation using default basemap first aligning movement data uniform time scale, creating frames can viewed modified using ggplot2 add*() functions turning frames animated GIF:","code":"library(moveVis) library(move2)  data(\"move_data\", package = \"moveVis\") # move2 class object  # align move_data to a uniform time scale m <- align_move(move_data, res = units::set_units(4, \"min\"))  # create spatial frames with an OpenStreetMap basemap frames <- frames_spatial(   m, path_colours = c(\"blue\", \"cyan\", \"purple\"),   map_service = \"osm\", map_type = \"topographic\", alpha = 0.5) %>%    add_labels(x = \"Longitude\", y = \"Latitude\") %>% # add some customizations, such as axis labels   add_northarrow() %>%    add_scalebar() %>%    add_timestamps(type = \"label\") %>%    add_progress()  frames[[100]] # preview one of the frames, e.g. the 100th frame  # animate frames animate_frames(frames, out_file = \"moveVis.gif\")"},{"path":"https://movevis.org/index.html","id":"function-overview","dir":"","previous_headings":"","what":"Function overview","title":"Movement Data Visualization","text":"moveVis includes following functions, sorted order applied create animation movement environmental data:","code":""},{"path":"https://movevis.org/index.html","id":"preparing-movement-tracks","dir":"","previous_headings":"Function overview","what":"Preparing movement tracks","title":"Movement Data Visualization","text":"align_move() aligns single multi-individual movement data uniform time scale uniform temporal resolution needed creating animation . Use function prepare movement data animation depending temporal resolution suits data.","code":""},{"path":"https://movevis.org/index.html","id":"creating-frames","dir":"","previous_headings":"Function overview","what":"Creating frames","title":"Movement Data Visualization","text":"get_maptypes() returns character vector available map types can used frames_spatial(). moveVis supports OpenStreetMap Mapbox basemap imagery. Alternatively, can provide custom imagery frames_spatial(). frames_spatial() creates moveVis frames spatio-temporally displaying movement. Frames can individually plotted using ggplot2, modified individually whole using add*() functions, animated using animate_frames(). frames_graph() creates moveVis frames displaying movement-environment interaction graphs. Frames can individually plotted using ggplot2, modified individually whole using add*() functions, animated using animate_frames().","code":""},{"path":"https://movevis.org/index.html","id":"adapting-frames","dir":"","previous_headings":"Function overview","what":"Adapting frames","title":"Movement Data Visualization","text":"add_gg() adds ggplot2 functions (e.g. add layers points, polygons, lines, change scales etc.) animation frames created frames_spatial() frames_graph(). Instead creating ggplot2 functions, can use one moveVis `add_``functions: add_labels() adds character labels title axis labels animation frames created frames_spatial() frames_graph(). add_scalebar() adds scalebar animation frames created frames_spatial() frames_graph(). add_northarrow() adds north arrow animation frames created frames_spatial() frames_graph(). add_progress() adds progress bar animation frames created frames_spatial() frames_graph(). add_timestamps() adds timestamps animation frames created frames_spatial() frames_graph(). add_text() adds static dynamically changing text animation frames created frames_spatial() frames_graph(). add_colourscale() adjusts colour scales animation frames created frames_spatial() custom map imagery using r_list argument. join_frames() side--side joins two moveVis frame sequences equal lengths single plot per frame using cowplot::plot_grid. useful want side--side combine spatial frames returned frames_spatial() graph frames returned frames_graph(). get_frametimes() extracts timestamps associated frame moveVis object created using frames_spatial() frames_graph() returns vector.","code":""},{"path":"https://movevis.org/index.html","id":"animating-frames-as-gif-or-video","dir":"","previous_headings":"Function overview","what":"Animating frames (as GIF or video)","title":"Movement Data Visualization","text":"suggest_formats() returns selection suggested file formats can used out_file animate_frames() system. animate_frames() creates animation moveVis frames computed frames_spatial(), frames_graph() join_frames().","code":""},{"path":"https://movevis.org/index.html","id":"viewing-movement-tracks","dir":"","previous_headings":"Function overview","what":"Viewing movement tracks","title":"Movement Data Visualization","text":"render_frame() renders individual frame. yields result individual frame extracted using default subsetting [[. view_spatial() displays movement tracks interactive mapview leaflet map.","code":""},{"path":"https://movevis.org/index.html","id":"methods","dir":"","previous_headings":"Function overview","what":"Methods","title":"Movement Data Visualization","text":"[ extracts individual frames sequence frames moveVis frames object. [[ renders individual frame. c combines multiple moveVis frames objects. tail() head() return n last first frames moveVis frames object. length() return length moveVis frames, .e. number frames. print() shows basic information moveVis frames object, .e. number frames, extent . rev() reverses order moveVis frames object.","code":""},{"path":"https://movevis.org/index.html","id":"processing-settings","dir":"","previous_headings":"Function overview","what":"Processing settings","title":"Movement Data Visualization","text":"use_multicore() enables multi-core usage computational expensive processing steps. use_disk() enables usage disk space creating frames, can prevent memory overload creating frames large animations.","code":""},{"path":"https://movevis.org/index.html","id":"example-data","dir":"","previous_headings":"Function overview","what":"Example data","title":"Movement Data Visualization","text":"data(\"move_data\") returns move2 object representing coordinates acquisition times three simulated movement tracks, covering location nearby Lake Constance, Germany. data(\"whitestork_data\") returns data.frame move2 object, representing coordinates acquisition times 15 White Storks, migrating Lake Constance, SW Germany, Africa. readRDS(example_data(file = \"basemap_data.rds\")) returns SpatRasterDataset, representing simulated NDVI images covering Lake Constance area, well invented dates times simulate acquisition times.","code":""},{"path":"https://movevis.org/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Movement Data Visualization","text":"can find code examples use moveVis : Example 1: Creating simple movement animation Example 2: Customizing frames Example 3: Using mapbox satellite base map Example 4: View movement tracks Real-data example using White Storks (Ciconia ciconia) migration movement data [.docx]","code":""},{"path":"https://movevis.org/index.html","id":"code-snippets","dir":"","previous_headings":"","what":"Code snippets","title":"Movement Data Visualization","text":"commented moveVis code snippets, addressing specific issues questions, also helpful : hold last frame animation defined time make look good using path_fade display full traces path using trace_show trace_colour frames_spatial() colour paths based continuous variable assign multiple path colours per individual, e.g. indicate behavioral segments adapt path legend frames created frames_spatial() create data.frame containing track coordinate per frame overlay frames additional transparent rasters changing time (hacky, optimal solution)","code":""},{"path":"https://movevis.org/index.html","id":"further-resources","dir":"","previous_headings":"","what":"Further resources","title":"Movement Data Visualization","text":"Detailed code examples explaining use specific functions provided function help pages. User contributions code examples tutorials welcome linked soon spotted somewhere web: Animating animal tracks multiple years common year moveVis: example Blue Whale Argos tracks Movebank Daniel M. Palacios, Marine Mammal Institute, Oregon State University Reproducible example combine animal tracking data, tidal water height data heightmap visualize animal movement moveVis Henk-Jan van der Kolk, Netherlands Institute Ecology (NIOO-KNAW) build animated tracking maps using tracking data Movebank environmental covariates track raster annotations EnvDATA moveVis Sarah C. Davidson, Data Curator Movebank","code":""},{"path":"https://movevis.org/index.html","id":"mentions","dir":"","previous_headings":"","what":"Mentions","title":"Movement Data Visualization","text":"Blog post: Featured article Issue 11.5: May issue now online! Methods Ecology Evolution","code":""},{"path":"https://movevis.org/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related packages","title":"Movement Data Visualization","text":"R packages might interest : basemaps, package download cache spatial basemaps open sources OpenStreetMap, Stamen, Thunderforest, Carto, Mapbox others, getSpatialData, package query, preview download satellite data, RStoolbox, package providing wide range tools every-day remote sensing processing needs,","code":""},{"path":"https://movevis.org/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Movement Data Visualization","text":"initiative part Opt4Environment project funded German Aerospace Center (DLR) behalf Federal Ministry Economic Affairs Energy (BMWi) research grant 50 EE 1403.","code":"<a href=\"https://www.geographie.uni-wuerzburg.de/en/fernerkundung/startseite/\"><img width=\"29%\" src=\"https://www.uni-wuerzburg.de/typo3conf/ext/uw_sitepackage/Resources/Public/Images/uni-wuerzburg-logo.svg\"><\/a> <a href=\"http://www.dlr.de/eoc/en/\"><img width=\"16%\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/DLR_Logo.svg/744px-DLR_Logo.svg.png\"><\/a>  <a href=\"https://www.bmu.de/en/\"><img width=\"29%\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Logo_Bundesministerium_f%C3%BCr_Umwelt_Naturschutz_und_nukleare_Sicherheit.png\"><\/a> <a href=\"https://www.ab.mpg.de/\"><img width=\"16%\" src=\"https://www.ab.mpg.de/assets/og-logo-281c44f14f2114ed3fe50e666618ff96341055a2f8ce31aa0fd70471a30ca9ed.jpg\"><\/a>"},{"path":"https://movevis.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Movement Data Visualization","text":"open-access paper accompanying moveVis R package peer-reviewed published ‘Methods Ecology Evolution’ (see https://doi.org/10.1111/2041-210X.13374). Please cite moveVis, e.g. use publications presentations, using output citation(\"moveVis\") follows: Schwalb-Willmann, J.; Remelgado, R.; Safi, K.; Wegmann, M. (2020). moveVis: Animating movement trajectories synchronicity static temporally dynamic environmental data R. Methods Ecol Evol. 2020; 11: 664–669. https://doi.org/10.1111/2041-210X.13374","code":""},{"path":"https://movevis.org/reference/Extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract moveVis frames — [.moveVis","title":"Extract moveVis frames — [.moveVis","text":"Method extracting individual frames sequence frames moveVis frames object.","code":""},{"path":"https://movevis.org/reference/Extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract moveVis frames — [.moveVis","text":"","code":"# S3 method for class 'moveVis' x[i, ...]"},{"path":"https://movevis.org/reference/Extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract moveVis frames — [.moveVis","text":"x object class moveVis. numeric, index number sequence index numbers frame(s) extracted. ... arguments passed methods.","code":""},{"path":"https://movevis.org/reference/Extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract moveVis frames — [.moveVis","text":"moveVis frames object.","code":""},{"path":"https://movevis.org/reference/add_colourscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scale to frames — add_colourscale","title":"Add scale to frames — add_colourscale","text":"function adjusts colour scales frames created frames_spatial custom map imagery using ggplot2.","code":""},{"path":"https://movevis.org/reference/add_colourscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scale to frames — add_colourscale","text":"","code":"add_colourscale(   frames,   type,   colours,   labels = waiver(),   na.colour = \"grey50\",   na.show = TRUE,   legend_title = NULL,   verbose = TRUE )"},{"path":"https://movevis.org/reference/add_colourscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scale to frames — add_colourscale","text":"frames object class moveVis created frames_spatial. type character, either \"gradient\" \"discrete\". Must equal definition argument r_type frames created (see frames_spatial). colours character, vector colours. type = \"discrete\", number colours must equal number classes contained raster imagery frames created. Optionally, vector can named associate map values colours define scale limits, e.g. c(\"-1\" = \"red\", \"0\" = \"blue\", \"1\" = \"green\") labels character, vector labels length colours. Ignored, type = \"gradient\". na.colour character, colour use missing values. na.show logical, whether display NA values discrete scaling. Ignored, type = \"gradient\". legend_title character, legend title. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_colourscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add scale to frames — add_colourscale","text":"frames object class moveVis.","code":""},{"path":"https://movevis.org/reference/add_colourscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add scale to frames — add_colourscale","text":"Instead using function, can use add_gg apply ggplot2 moveVis frames .","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_colourscale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add scale to frames — add_colourscale","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_colourscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add scale to frames — add_colourscale","text":"","code":"library(moveVis) library(move2) library(terra) #> terra 1.8.60  data(\"move_data\", package = \"moveVis\") r <- readRDS(example_data(file = \"basemap_data.rds\"))  # align movement m <- align_move(move_data, res = units::set_units(4, \"min\")) #> Temporal resolution of 4 [min] is used to align trajectories.  if (FALSE) { # \\dontrun{ # create spatial frames with frames_spatial: frames <- frames_spatial(   m, r, r_type = \"gradient\", fade_raster = TRUE ) frames[[100]] # take a look at one of the frames  # change the colour scale of all frames frames <- add_colourscale(   frames, type = \"gradient\", colours = c(\"orange\", \"white\", \"darkgreen\"),   legend_title = \"NDVI\" ) frames[[100]]  r <- terra::sds(lapply(r, function(x){   y <- x terra::values(y) <- round(terra::values(y)*10)   return(y) }))  # turn fade_raster to FALSE, since it makes no sense to temporally interpolate discrete classes frames <- frames_spatial(   m, r, r_type = \"discrete\",   fade_raster = FALSE ) frames[[100]] # now, let's assign a colour per class value to frames colFUN <- colorRampPalette(c(\"orange\", \"lightgreen\", \"darkgreen\")) cols <- colFUN(10) frames <- add_colourscale(   frames, type = \"discrete\", colours = cols, legend_title = \"Classes\" ) frames[[100]] } # }"},{"path":"https://movevis.org/reference/add_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ggplot2 function to frames — add_gg","title":"Add ggplot2 function to frames — add_gg","text":"function applies ggplot2 functions (e.g. add layers, change scales etc.) frames created frames_spatial frames_graph.","code":""},{"path":"https://movevis.org/reference/add_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ggplot2 function to frames — add_gg","text":"","code":"add_gg(frames, gg, data = NULL, ..., verbose = T)"},{"path":"https://movevis.org/reference/add_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ggplot2 function to frames — add_gg","text":"frames object class moveVis created frames_spatial. gg ggplot2 expressions (see details), either expression one list ggplot2 functions added every frame, list length frames add different ggplot2 expressions per frame data optional data used gg (see details), either object class, e.g. data.frame, used gg added frames, list, e.g. multiple data.frames, length frames add different data frame. ... additional (non-iterated) objects visible gg. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_gg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ggplot2 function to frames — add_gg","text":"frames object class moveVis.","code":""},{"path":"https://movevis.org/reference/add_gg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add ggplot2 function to frames — add_gg","text":"Argument gg expects ggplot2 functions handed expressions (see expr) avoid evaluation called correct frame. Simply wrap ggplot2 function expr supply gg. add multiple ggplot2 functions applied every frame, supply expression containing list ggplot2 functions (e.g. expr(list(geom_label(...), geom_text(...)))). expression added frames. add specific ggplot2 functions per frame, supply list expressions length frames. expression may contain list ggplot2 functions, want add multiple functions per frame. data used, ggplot2 expressions supplied gg can use object name data plotting. data list, must length frames. list iterated, functions gg access individual objects within list name data per frame. data want display change frames may character vector similiar, may need data, can supply needed values within expression supplied gg. supply gg list expressions frame data list objects (e.g. data.frames) frame, frame manipulated corresponding ggplot2 function corresponding data.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_gg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add ggplot2 function to frames — add_gg","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ggplot2 function to frames — add_gg","text":"","code":"library(moveVis) library(move2) library(terra) library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE library(ggplot2)  data(\"move_data\", package = \"moveVis\") r <- readRDS(example_data(file = \"basemap_data.rds\"))  # align movement m <- align_move(move_data, res = units::set_units(4, \"min\")) #> Temporal resolution of 4 [min] is used to align trajectories.  # let's create a data.frame containing corner coordinates data <- cbind(   x = c(8.96, 8.955, 8.959, 8.963, 8.968, 8.963, 8.96),   y = c(47.725, 47.728, 47.729, 47.728, 47.725, 47.723, 47.725) )  # make an sf object projected to Pseudo Mercator to match basemap crs data <- list(data) %>%    st_polygon() %>%    st_geometry() %>%    st_as_sf(crs = st_crs(4326)) %>%    st_transform(crs = st_crs(3857))  # add the polygon to all frames  if (FALSE) { # \\dontrun{ # create frames with add_gg additions frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5) %>%    # add polygon   add_gg(gg = expr(geom_sf(     data = data, colour = \"black\", fill = \"transparent\",      linetype = \"dashed\", lwd = 1)   ), data = data) %>%    # add coordinate system   add_gg(gg = expr(     coord_sf(datum = st_crs(3857), expand = F)   ), data = data)  # take alook frames[[100]] } # } # add_gg can also be used iteratively to manipulate each frame differently. # let's create unique polygons per frame:  # create data.frame containing corner coordinates data <- cbind(   x = c(8.96, 8.955, 8.959, 8.963, 8.968, 8.963, 8.96),   y = c(47.725, 47.728, 47.729, 47.728, 47.725, 47.723, 47.725) ) # make a list from it by replicating it by the length of frames data <- rep(list(data), length.out = length(frames)) #> Error: object 'frames' not found  # let's alter the corner coordinates so that each polygon is different data <- lapply(data, function(x){   y <- rnorm(nrow(x)-1, mean = 0.00001, sd = 0.0001)    x + c(y, y[1]) })  #' # make sf object from the data list contents and project to pseudo mercator data <- lapply(data, function(x){   list(x) %>%      st_polygon() %>%      st_geometry() %>%      st_as_sf(crs = st_crs(4326)) %>%      st_transform( crs = st_crs(3857)) }) #> Error in FUN(X[[i]], ...): is.matrix(x) is not TRUE  if (FALSE) { # \\dontrun{ # apply add_gg frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5) %>%    # add polygons   add_gg(gg = expr(geom_sf(     data = data,     colour = \"black\",      fill = \"transparent\",     linetype = \"dashed\",     lwd = 1)   ), data = data) %>%    # add coordinate system   add_gg(gg = expr(coord_sf(     datum = st_crs(3857), expand = F)   ), data = data)  frames[[100]]  # animate frames to see how the polygons \"flip\" animate_frames(frames, out_file = tempfile(fileext = \".mov\")) } # } # you can use add_gg on any list of ggplot2 objects, # also on frames made using frames_graph frames <- frames_graph(   m, r, r_type = \"gradient\",   fade_raster = TRUE, graph_type = \"hist\", val_by = 0.01 ) #> Processing input data... #> Approximated animation duration: ≈ 7.52s at 25 fps using 188 frames #> Extracting raster values per frame... frames[[100]]   # manipulate the labels, since they are very dense: # just replace the current scale frames <- add_gg(frames, expr(scale_x_continuous(   breaks=seq(0,1,0.1),   labels=seq(0,1,0.1), expand = c(0,0))) ) frames[[100]]"},{"path":"https://movevis.org/reference/add_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels to frames — add_labels","title":"Add labels to frames — add_labels","text":"function adds character labels titles axis labels frames created frames_spatial.","code":""},{"path":"https://movevis.org/reference/add_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels to frames — add_labels","text":"","code":"add_labels(   frames,   title = waiver(),   subtitle = waiver(),   caption = waiver(),   tag = waiver(),   x = waiver(),   y = waiver(),   verbose = TRUE )"},{"path":"https://movevis.org/reference/add_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels to frames — add_labels","text":"frames object class moveVis created frames_spatial. title character, frame title. NULL, existing title frames removed. waiver() (default, see waiver), existing title frames kept. subtitle character, frame subtitle. NULL, existing title frames removed. waiver() (default, see waiver), existing title frames kept. caption character, frame caption. NULL, existing title frames removed. waiver() (default, see waiver), existing title frames kept. tag character, frame tag. NULL, existing title frames removed. waiver() (default, see waiver), existing title frames kept. x character, label x axis. NULL, existing title frames removed. waiver() (default, see waiver), existing title frames kept. y character, label y axis. NULL, existing title frames removed. waiver() (default, see waiver), existing title frames kept. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add labels to frames — add_labels","text":"frames object class moveVis.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add labels to frames — add_labels","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add labels to frames — add_labels","text":"","code":"library(moveVis) library(move2)  data(\"move_data\", package = \"moveVis\") r <- readRDS(example_data(file = \"basemap_data.rds\"))  # align movement m <- align_move(move_data, res = units::set_units(4, \"min\")) #> Temporal resolution of 4 [min] is used to align trajectories.  # create frames and add labels frames <- frames_spatial(   m, r, r_type = \"gradient\", fade_raster = TRUE ) #> Processing input data... #> Approximated animation duration: ≈ 7.52s at 25 fps using 188 frames #> CRS (geodetic): 'WGS 84' #> Assigning raster maps to frames...  # add labels frames <- add_labels(   frames,   title = \"Example animation using moveVis::add_labels()\",    subtitle = \"Adding a subtitle to frames created using frames_spatial()\",   caption = \"Projection: Geographical, WGS84. Sources: moveVis examples.\",   x = \"Longitude\", y = \"Latitude\" )  # have a look at one frame frames[[100]]"},{"path":"https://movevis.org/reference/add_northarrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Add north arrow to frames — add_northarrow","title":"Add north arrow to frames — add_northarrow","text":"function adds north arrow frames created frames_spatial.","code":""},{"path":"https://movevis.org/reference/add_northarrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add north arrow to frames — add_northarrow","text":"","code":"add_northarrow(   frames,   height = 0.05,   position = \"bottomright\",   x = NULL,   y = NULL,   colour = \"black\",   size = 1,   label_text = \"N\",   label_margin = 0.4,   label_size = 5,   verbose = TRUE )"},{"path":"https://movevis.org/reference/add_northarrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add north arrow to frames — add_northarrow","text":"frames object class moveVis created frames_spatial. height numeric, height north arrow range 0 1 proportion overall height frame map. position character, position north arrow map. Either \"bottomleft\", \"upperleft\", \"upperright\", \"bottomright\". Ignored, x y set. x numeric, position bottom left corner north arrow x axis. set, position used calculate position north arrow. y numeric, position bottom left corner north arrow y axis. set, position used calculate position north arrow. colour character, colour. size numeric, arrow size. label_text character, text north arrow. label_margin numeric, margin label north arrow proportion size north arrow. label_size numeric, label font size. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_northarrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add north arrow to frames — add_northarrow","text":"frames object class moveVis.","code":""},{"path":"https://movevis.org/reference/add_northarrow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add north arrow to frames — add_northarrow","text":"adding sophisticated map features, recommend ggspatial.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_northarrow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add north arrow to frames — add_northarrow","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_northarrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add north arrow to frames — add_northarrow","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"move_data\", \"basemap_data\") #> Warning: data set ‘basemap_data’ not found m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  # create spatial frames using a custom NDVI base layer r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                          fade_raster = TRUE)  # add a north arrow to frames: frames.a <- add_northarrow(frames) frames.a[[100]]  # or in white at another position frames.b <- add_northarrow(frames, colour = \"white\", position = \"bottomleft\") frames.b[[100]] } # }"},{"path":"https://movevis.org/reference/add_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Add progress bar to frames — add_progress","title":"Add progress bar to frames — add_progress","text":"function adds progress bar frames created frames_spatial.","code":""},{"path":"https://movevis.org/reference/add_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add progress bar to frames — add_progress","text":"","code":"add_progress(frames, colour = \"grey\", size = 1.8, y_nudge = 0, verbose = TRUE)"},{"path":"https://movevis.org/reference/add_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add progress bar to frames — add_progress","text":"frames object class moveVis created frames_spatial. colour character, progress bar colour. size numeric, progress bar line size (line width). y_nudge numeric, amount vertical distance move progress bar (default: top plot area). verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add progress bar to frames — add_progress","text":"frames object class moveVis.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_progress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add progress bar to frames — add_progress","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add progress bar to frames — add_progress","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"move_data\", \"basemap_data\") #> Warning: data set ‘basemap_data’ not found m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  # create spatial frames using a custom NDVI base layer r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                          fade_raster = TRUE)  # add a progress bar: frames.a <- add_progress(frames) frames.a[[100]]  # or in red and larger frames.b <- add_progress(frames, colour = \"red\", size = 2.5) frames.b[[100]] } # }"},{"path":"https://movevis.org/reference/add_scalebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scalebar to frames — add_scalebar","title":"Add scalebar to frames — add_scalebar","text":"function adds scalebar frames created frames_spatial.","code":""},{"path":"https://movevis.org/reference/add_scalebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scalebar to frames — add_scalebar","text":"","code":"add_scalebar(   frames,   distance = NULL,   height = 0.015,   position = \"bottomleft\",   x = NULL,   y = NULL,   colour = \"black\",   label_margin = 1.2,   units = \"km\",   verbose = TRUE )"},{"path":"https://movevis.org/reference/add_scalebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scalebar to frames — add_scalebar","text":"frames object class moveVis created frames_spatial. distance numeric, optional. Distance displayed scalebar (either km miles defined argument units) default, displayed distance calculated automatically. height numeric, height scalebar range 0 1 proportion overall height frame map. Default 0.015. position character, position scalebar map. Either \"bottomleft\", \"upperleft\", \"upperright\", \"bottomright\". Ignored, x y set. x numeric, position bottom left corner scalebar x axis. set, position used calculate position scalebar. y numeric, position bottom left corner scalebar y axis. set, position used calculate position scalebar. colour character, colour distance labels. Default \"black\". label_margin numeric, distance labels scalebar proportion height scalebar (e.g. set 2, labels positioned distance scalebar twice scalebar height). units character, either \"km\" kilometers \"miles\" miles. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_scalebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add scalebar to frames — add_scalebar","text":"frames object class moveVis.","code":""},{"path":"https://movevis.org/reference/add_scalebar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add scalebar to frames — add_scalebar","text":"adding sophisticated map features, recommend using ggspatial.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_scalebar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add scalebar to frames — add_scalebar","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_scalebar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add scalebar to frames — add_scalebar","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"move_data\", \"basemap_data\") #> Warning: data set ‘basemap_data’ not found m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  # create spatial frames using a custom NDVI base layer r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                          fade_raster = TRUE)  # add a scale bar to frames: frames.a <- add_scalebar(frames) frames.a[[100]]  # or in white at another position frames.b <- add_scalebar(frames, colour = \"white\", position = \"bottomright\") frames.b[[100]]  # or with another height frames.c <- add_scalebar(frames, colour = \"white\", position = \"bottomright\", height = 0.025) frames.c[[100]] } # }"},{"path":"https://movevis.org/reference/add_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add text to frames — add_text","title":"Add text to frames — add_text","text":"function adds text frames created frames_spatial.","code":""},{"path":"https://movevis.org/reference/add_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add text to frames — add_text","text":"","code":"add_text(   frames,   labels,   x,   y,   colour = \"black\",   size = 3,   type = \"text\",   verbose = TRUE )"},{"path":"https://movevis.org/reference/add_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add text to frames — add_text","text":"frames object class moveVis created frames_spatial. labels character, text added frames. Either single character value character vector length frames. x numeric, position text x scale. Either single numeric value numeric vector length frames. y numeric, position text y scale. Either single numeric value numeric vector length frames. colour character, text colour(s). Either single character value character vector length frames. size numeric, text size(s). Either single numeric value numeric vector length frames. type character, either \"text\" draw text \"label\" draw text inside box. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add text to frames — add_text","text":"frames object class moveVis.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_text.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add text to frames — add_text","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add text to frames — add_text","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"move_data\", \"basemap_data\") #> Warning: data set ‘basemap_data’ not found m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  # create spatial frames using a custom NDVI base layer r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                          fade_raster = TRUE)  # add text somewhere to all frames: frames.a <- add_text(frames, \"Water area\", x = 8.959, y = 47.7305,                      colour = \"white\", size = 3) frames.a[[100]]  # or use the ggplot2 \"label\" type: frames.b <- add_text(frames, \"Water area\", x = 8.959, y = 47.7305,                      colour = \"black\", size = 3, type = \"label\") frames.b[[100]] } # }"},{"path":"https://movevis.org/reference/add_timestamps.html","id":null,"dir":"Reference","previous_headings":"","what":"Add timestamps to frames — add_timestamps","title":"Add timestamps to frames — add_timestamps","text":"function adds timestamps frames created frames_spatial.","code":""},{"path":"https://movevis.org/reference/add_timestamps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add timestamps to frames — add_timestamps","text":"","code":"add_timestamps(   frames,   x = NULL,   y = NULL,   format = \"%Y-%m-%d %H:%M:%S\",   ...,   verbose = TRUE )"},{"path":"https://movevis.org/reference/add_timestamps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add timestamps to frames — add_timestamps","text":"frames object class moveVis created frames_spatial. x numeric, optional, position timestamps x scale. default, timestamps displayed top center. y numeric, optional, position timestamps y scale. format character, optional, format timestamps displayed , passed strftime). ... optional, arguments passed add_text, colour, size, type. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/add_timestamps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add timestamps to frames — add_timestamps","text":"frames object class moveVis.","code":""},{"path":[]},{"path":"https://movevis.org/reference/add_timestamps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add timestamps to frames — add_timestamps","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/add_timestamps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add timestamps to frames — add_timestamps","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"move_data\", \"basemap_data\") #> Warning: data set ‘basemap_data’ not found m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  # create spatial frames using a custom NDVI base layer r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                          fade_raster = TRUE)  # add timestamps as text frames.a <- add_timestamps(frames, type = \"text\") frames.a[[100]]  # or use the ggplot2 \"label\" type: frames.b <- add_timestamps(frames, type = \"label\") frames.b[[100]] } # }"},{"path":"https://movevis.org/reference/align_move.html","id":null,"dir":"Reference","previous_headings":"","what":"Align movement data — align_move","title":"Align movement data — align_move","text":"function aligns movement data uniform time scale uniform temporal resolution throughout complete movement sequence. prepares provided movement data usable frames_spatial, requires uniform time scale consistent, unique temporal resolution supplied trajectories.","code":""},{"path":"https://movevis.org/reference/align_move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align movement data — align_move","text":"","code":"align_move(m, res = \"minimum\", start_end_time = NULL, ..., verbose = TRUE)"},{"path":"https://movevis.org/reference/align_move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align movement data — align_move","text":"m move2 object, allowed contain irregular timestamps diverging temporal resolutions. res either  units object representing temporal resolution m aligned , character one 'min', 'max', 'mean' 'median' indicate target resolution derived m. start_end_time NULL (default) vector two POSIXct times (one start time one end time alignment). NULL, start end time retrieved m used alignment. \"minimum\" use smallest temporal resolution m (default) \"maximum\" use largest temporal resolution m \"mean\" use rounded average temporal resolution m \"median\" use rounded median temporal resolution m ... deprecated arguments, including digit, unit spaceMethod. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/align_move.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align movement data — align_move","text":"move2 object, aligned positions uniform temporal scale computed m, ready used frames_spatial.","code":""},{"path":[]},{"path":"https://movevis.org/reference/align_move.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Align movement data — align_move","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/align_move.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align movement data — align_move","text":"","code":"library(moveVis) library(move2) library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:terra’: #>  #>     intersect, union #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union data(\"move_data\")  # the tracks in move_data have irregular timestamps and sampling rates. # print unique timestamps and time lags unique(mt_time(move_data)) #>   [1] \"2018-05-15 09:59:59 UTC\" \"2018-05-15 10:04:01 UTC\" #>   [3] \"2018-05-15 10:08:02 UTC\" \"2018-05-15 10:12:04 UTC\" #>   [5] \"2018-05-15 10:16:05 UTC\" \"2018-05-15 10:20:06 UTC\" #>   [7] \"2018-05-15 10:24:07 UTC\" \"2018-05-15 10:28:07 UTC\" #>   [9] \"2018-05-15 10:32:10 UTC\" \"2018-05-15 10:36:12 UTC\" #>  [11] \"2018-05-15 10:40:11 UTC\" \"2018-05-15 10:44:14 UTC\" #>  [13] \"2018-05-15 10:48:13 UTC\" \"2018-05-15 10:52:16 UTC\" #>  [15] \"2018-05-15 10:56:17 UTC\" \"2018-05-15 11:00:18 UTC\" #>  [17] \"2018-05-15 11:04:20 UTC\" \"2018-05-15 11:08:20 UTC\" #>  [19] \"2018-05-15 11:12:21 UTC\" \"2018-05-15 11:16:22 UTC\" #>  [21] \"2018-05-15 11:20:24 UTC\" \"2018-05-15 11:24:26 UTC\" #>  [23] \"2018-05-15 11:28:25 UTC\" \"2018-05-15 11:32:29 UTC\" #>  [25] \"2018-05-15 11:36:30 UTC\" \"2018-05-15 11:40:31 UTC\" #>  [27] \"2018-05-15 11:44:31 UTC\" \"2018-05-15 11:48:34 UTC\" #>  [29] \"2018-05-15 11:52:35 UTC\" \"2018-05-15 11:56:39 UTC\" #>  [31] \"2018-05-15 12:00:38 UTC\" \"2018-05-15 12:04:38 UTC\" #>  [33] \"2018-05-15 12:08:41 UTC\" \"2018-05-15 12:12:43 UTC\" #>  [35] \"2018-05-15 12:16:43 UTC\" \"2018-05-15 12:20:44 UTC\" #>  [37] \"2018-05-15 12:24:45 UTC\" \"2018-05-15 12:28:44 UTC\" #>  [39] \"2018-05-15 12:32:48 UTC\" \"2018-05-15 12:36:48 UTC\" #>  [41] \"2018-05-15 12:40:50 UTC\" \"2018-05-15 12:44:51 UTC\" #>  [43] \"2018-05-15 12:48:53 UTC\" \"2018-05-15 12:52:53 UTC\" #>  [45] \"2018-05-15 12:56:55 UTC\" \"2018-05-15 13:00:56 UTC\" #>  [47] \"2018-05-15 13:04:58 UTC\" \"2018-05-15 13:08:59 UTC\" #>  [49] \"2018-05-15 13:13:00 UTC\" \"2018-05-15 13:17:01 UTC\" #>  [51] \"2018-05-15 13:21:03 UTC\" \"2018-05-15 13:25:02 UTC\" #>  [53] \"2018-05-15 13:29:03 UTC\" \"2018-05-15 13:33:05 UTC\" #>  [55] \"2018-05-15 13:37:07 UTC\" \"2018-05-15 13:41:07 UTC\" #>  [57] \"2018-05-15 13:45:11 UTC\" \"2018-05-15 13:49:12 UTC\" #>  [59] \"2018-05-15 13:53:13 UTC\" \"2018-05-15 13:57:15 UTC\" #>  [61] \"2018-05-15 14:01:15 UTC\" \"2018-05-15 14:05:17 UTC\" #>  [63] \"2018-05-15 14:09:18 UTC\" \"2018-05-15 14:13:19 UTC\" #>  [65] \"2018-05-15 14:17:19 UTC\" \"2018-05-15 14:21:21 UTC\" #>  [67] \"2018-05-15 14:25:22 UTC\" \"2018-05-15 14:29:25 UTC\" #>  [69] \"2018-05-15 14:33:26 UTC\" \"2018-05-15 14:37:25 UTC\" #>  [71] \"2018-05-15 14:41:27 UTC\" \"2018-05-15 14:45:29 UTC\" #>  [73] \"2018-05-15 14:49:30 UTC\" \"2018-05-15 14:53:31 UTC\" #>  [75] \"2018-05-15 14:57:32 UTC\" \"2018-05-15 15:01:33 UTC\" #>  [77] \"2018-05-15 15:05:35 UTC\" \"2018-05-15 15:09:38 UTC\" #>  [79] \"2018-05-15 15:13:36 UTC\" \"2018-05-15 15:17:37 UTC\" #>  [81] \"2018-05-15 15:21:39 UTC\" \"2018-05-15 15:25:42 UTC\" #>  [83] \"2018-05-15 15:29:43 UTC\" \"2018-05-15 15:33:46 UTC\" #>  [85] \"2018-05-15 15:37:46 UTC\" \"2018-05-15 15:41:47 UTC\" #>  [87] \"2018-05-15 15:45:48 UTC\" \"2018-05-15 15:49:49 UTC\" #>  [89] \"2018-05-15 15:53:52 UTC\" \"2018-05-15 15:57:51 UTC\" #>  [91] \"2018-05-15 16:01:54 UTC\" \"2018-05-15 16:05:52 UTC\" #>  [93] \"2018-05-15 16:09:55 UTC\" \"2018-05-15 16:13:56 UTC\" #>  [95] \"2018-05-15 16:17:57 UTC\" \"2018-05-15 16:21:58 UTC\" #>  [97] \"2018-05-15 16:26:02 UTC\" \"2018-05-15 16:30:02 UTC\" #>  [99] \"2018-05-15 16:34:03 UTC\" \"2018-05-15 16:38:03 UTC\" #> [101] \"2018-05-15 16:42:06 UTC\" \"2018-05-15 16:46:06 UTC\" #> [103] \"2018-05-15 16:50:08 UTC\" \"2018-05-15 16:54:11 UTC\" #> [105] \"2018-05-15 16:58:10 UTC\" \"2018-05-15 17:02:11 UTC\" #> [107] \"2018-05-15 17:06:13 UTC\" \"2018-05-15 17:10:13 UTC\" #> [109] \"2018-05-15 17:14:17 UTC\" \"2018-05-15 17:18:17 UTC\" #> [111] \"2018-05-15 17:22:18 UTC\" \"2018-05-15 17:26:18 UTC\" #> [113] \"2018-05-15 17:30:20 UTC\" \"2018-05-15 17:34:22 UTC\" #> [115] \"2018-05-15 17:38:24 UTC\" \"2018-05-15 17:42:25 UTC\" #> [117] \"2018-05-15 17:46:27 UTC\" \"2018-05-15 17:50:27 UTC\" #> [119] \"2018-05-15 17:54:27 UTC\" \"2018-05-15 17:58:30 UTC\" #> [121] \"2018-05-15 18:02:30 UTC\" \"2018-05-15 18:06:32 UTC\" #> [123] \"2018-05-15 18:10:34 UTC\" \"2018-05-15 18:14:36 UTC\" #> [125] \"2018-05-15 18:18:36 UTC\" \"2018-05-15 18:22:37 UTC\" #> [127] \"2018-05-15 18:26:36 UTC\" \"2018-05-15 18:30:40 UTC\" #> [129] \"2018-05-15 18:34:41 UTC\" \"2018-05-15 18:38:42 UTC\" #> [131] \"2018-05-15 18:42:44 UTC\" \"2018-05-15 18:46:46 UTC\" #> [133] \"2018-05-15 18:50:45 UTC\" \"2018-05-15 18:54:47 UTC\" #> [135] \"2018-05-15 18:58:48 UTC\" \"2018-05-15 19:02:49 UTC\" #> [137] \"2018-05-15 19:06:51 UTC\" \"2018-05-15 19:10:52 UTC\" #> [139] \"2018-05-15 19:14:53 UTC\" \"2018-05-15 19:18:55 UTC\" #> [141] \"2018-05-15 19:22:55 UTC\" \"2018-05-15 19:26:57 UTC\" #> [143] \"2018-05-15 19:30:57 UTC\" \"2018-05-15 19:34:59 UTC\" #> [145] \"2018-05-15 08:00:00 UTC\" \"2018-05-15 08:04:00 UTC\" #> [147] \"2018-05-15 08:08:02 UTC\" \"2018-05-15 08:12:01 UTC\" #> [149] \"2018-05-15 08:16:03 UTC\" \"2018-05-15 08:20:07 UTC\" #> [151] \"2018-05-15 08:24:11 UTC\" \"2018-05-15 08:28:10 UTC\" #> [153] \"2018-05-15 08:32:11 UTC\" \"2018-05-15 08:36:12 UTC\" #> [155] \"2018-05-15 08:40:14 UTC\" \"2018-05-15 08:44:14 UTC\" #> [157] \"2018-05-15 08:48:19 UTC\" \"2018-05-15 08:52:19 UTC\" #> [159] \"2018-05-15 08:56:21 UTC\" \"2018-05-15 09:00:23 UTC\" #> [161] \"2018-05-15 09:04:26 UTC\" \"2018-05-15 09:08:25 UTC\" #> [163] \"2018-05-15 09:12:28 UTC\" \"2018-05-15 09:16:28 UTC\" #> [165] \"2018-05-15 09:20:31 UTC\" \"2018-05-15 09:24:31 UTC\" #> [167] \"2018-05-15 09:28:32 UTC\" \"2018-05-15 09:32:33 UTC\" #> [169] \"2018-05-15 09:36:34 UTC\" \"2018-05-15 09:40:37 UTC\" #> [171] \"2018-05-15 09:44:42 UTC\" \"2018-05-15 09:48:41 UTC\" #> [173] \"2018-05-15 09:52:41 UTC\" \"2018-05-15 09:56:44 UTC\" #> [175] \"2018-05-15 10:00:45 UTC\" \"2018-05-15 10:04:46 UTC\" #> [177] \"2018-05-15 10:08:48 UTC\" \"2018-05-15 10:12:49 UTC\" #> [179] \"2018-05-15 10:16:53 UTC\" \"2018-05-15 10:20:53 UTC\" #> [181] \"2018-05-15 10:24:53 UTC\" \"2018-05-15 10:28:56 UTC\" #> [183] \"2018-05-15 10:32:57 UTC\" \"2018-05-15 10:36:58 UTC\" #> [185] \"2018-05-15 10:41:00 UTC\" \"2018-05-15 10:45:03 UTC\" #> [187] \"2018-05-15 10:49:02 UTC\" \"2018-05-15 10:53:05 UTC\" #> [189] \"2018-05-15 10:57:07 UTC\" \"2018-05-15 11:01:08 UTC\" #> [191] \"2018-05-15 11:05:07 UTC\" \"2018-05-15 11:09:11 UTC\" #> [193] \"2018-05-15 11:13:12 UTC\" \"2018-05-15 11:17:15 UTC\" #> [195] \"2018-05-15 11:21:16 UTC\" \"2018-05-15 11:25:15 UTC\" #> [197] \"2018-05-15 11:29:16 UTC\" \"2018-05-15 11:33:20 UTC\" #> [199] \"2018-05-15 11:37:22 UTC\" \"2018-05-15 11:41:22 UTC\" #> [201] \"2018-05-15 11:45:25 UTC\" \"2018-05-15 11:49:24 UTC\" #> [203] \"2018-05-15 11:53:27 UTC\" \"2018-05-15 11:57:28 UTC\" #> [205] \"2018-05-15 12:01:29 UTC\" \"2018-05-15 12:05:30 UTC\" #> [207] \"2018-05-15 12:09:34 UTC\" \"2018-05-15 12:13:33 UTC\" #> [209] \"2018-05-15 12:17:36 UTC\" \"2018-05-15 12:21:36 UTC\" #> [211] \"2018-05-15 12:25:40 UTC\" \"2018-05-15 12:29:40 UTC\" #> [213] \"2018-05-15 12:33:42 UTC\" \"2018-05-15 12:37:44 UTC\" #> [215] \"2018-05-15 12:41:46 UTC\" \"2018-05-15 12:45:48 UTC\" #> [217] \"2018-05-15 12:49:48 UTC\" \"2018-05-15 12:53:48 UTC\" #> [219] \"2018-05-15 12:57:51 UTC\" \"2018-05-15 13:01:52 UTC\" #> [221] \"2018-05-15 13:05:53 UTC\" \"2018-05-15 13:09:55 UTC\" #> [223] \"2018-05-15 13:13:57 UTC\" \"2018-05-15 13:18:00 UTC\" #> [225] \"2018-05-15 13:22:00 UTC\" \"2018-05-15 13:26:03 UTC\" #> [227] \"2018-05-15 13:30:04 UTC\" \"2018-05-15 13:34:07 UTC\" #> [229] \"2018-05-15 13:38:04 UTC\" \"2018-05-15 13:42:08 UTC\" #> [231] \"2018-05-15 13:46:10 UTC\" \"2018-05-15 13:50:11 UTC\" #> [233] \"2018-05-15 13:54:11 UTC\" \"2018-05-15 13:58:15 UTC\" #> [235] \"2018-05-15 14:02:15 UTC\" \"2018-05-15 14:06:16 UTC\" #> [237] \"2018-05-15 14:10:17 UTC\" \"2018-05-15 14:14:21 UTC\" #> [239] \"2018-05-15 14:18:19 UTC\" \"2018-05-15 14:22:24 UTC\" #> [241] \"2018-05-15 14:26:23 UTC\" \"2018-05-15 14:30:27 UTC\" #> [243] \"2018-05-15 14:34:28 UTC\" \"2018-05-15 14:38:29 UTC\" #> [245] \"2018-05-15 14:42:29 UTC\" \"2018-05-15 14:46:30 UTC\" #> [247] \"2018-05-15 14:50:34 UTC\" \"2018-05-15 14:54:35 UTC\" #> [249] \"2018-05-15 14:58:35 UTC\" \"2018-05-15 15:02:38 UTC\" #> [251] \"2018-05-15 15:06:38 UTC\" \"2018-05-15 15:10:42 UTC\" #> [253] \"2018-05-15 15:14:41 UTC\" \"2018-05-15 15:18:44 UTC\" #> [255] \"2018-05-15 15:22:44 UTC\" \"2018-05-15 15:26:48 UTC\" #> [257] \"2018-05-15 15:30:49 UTC\" \"2018-05-15 15:34:51 UTC\" #> [259] \"2018-05-15 15:38:52 UTC\" \"2018-05-15 15:42:54 UTC\" #> [261] \"2018-05-15 15:46:54 UTC\" \"2018-05-15 15:50:55 UTC\" #> [263] \"2018-05-15 15:54:59 UTC\" \"2018-05-15 15:59:00 UTC\" #> [265] \"2018-05-15 16:03:00 UTC\" \"2018-05-15 16:07:01 UTC\" #> [267] \"2018-05-15 16:11:04 UTC\" \"2018-05-15 16:15:04 UTC\" #> [269] \"2018-05-15 16:19:06 UTC\" \"2018-05-15 16:23:09 UTC\" #> [271] \"2018-05-15 16:27:11 UTC\" \"2018-05-15 16:31:11 UTC\" #> [273] \"2018-05-15 16:35:12 UTC\" \"2018-05-15 16:39:14 UTC\" #> [275] \"2018-05-15 16:43:17 UTC\" \"2018-05-15 16:47:16 UTC\" #> [277] \"2018-05-15 16:51:20 UTC\" \"2018-05-15 16:55:20 UTC\" #> [279] \"2018-05-15 16:59:23 UTC\" \"2018-05-15 17:03:24 UTC\" #> [281] \"2018-05-15 17:07:26 UTC\" \"2018-05-15 17:11:26 UTC\" #> [283] \"2018-05-15 17:15:29 UTC\" \"2018-05-15 17:19:27 UTC\" #> [285] \"2018-05-15 17:23:32 UTC\" \"2018-05-15 17:27:33 UTC\" #> [287] \"2018-05-15 17:31:34 UTC\" \"2018-05-15 17:35:35 UTC\" #> [289] \"2018-05-15 17:39:36 UTC\" \"2018-05-15 17:43:37 UTC\" #> [291] \"2018-05-15 17:47:39 UTC\" \"2018-05-15 17:51:42 UTC\" #> [293] \"2018-05-15 17:55:42 UTC\" \"2018-05-15 17:59:46 UTC\" #> [295] \"2018-05-15 18:03:48 UTC\" \"2018-05-15 18:07:46 UTC\" #> [297] \"2018-05-15 18:11:48 UTC\" \"2018-05-15 18:15:50 UTC\" #> [299] \"2018-05-15 18:19:52 UTC\" \"2018-05-15 18:23:54 UTC\" #> [301] \"2018-05-15 18:27:55 UTC\" \"2018-05-15 18:31:57 UTC\" #> [303] \"2018-05-15 18:35:58 UTC\" \"2018-05-15 18:40:00 UTC\" #> [305] \"2018-05-15 06:59:59 UTC\" \"2018-05-15 07:04:00 UTC\" #> [307] \"2018-05-15 07:08:04 UTC\" \"2018-05-15 07:12:02 UTC\" #> [309] \"2018-05-15 07:16:05 UTC\" \"2018-05-15 07:20:05 UTC\" #> [311] \"2018-05-15 07:24:06 UTC\" \"2018-05-15 07:28:06 UTC\" #> [313] \"2018-05-15 07:32:09 UTC\" \"2018-05-15 07:36:10 UTC\" #> [315] \"2018-05-15 07:40:10 UTC\" \"2018-05-15 07:44:13 UTC\" #> [317] \"2018-05-15 07:48:14 UTC\" \"2018-05-15 07:52:17 UTC\" #> [319] \"2018-05-15 07:56:17 UTC\" \"2018-05-15 08:00:18 UTC\" #> [321] \"2018-05-15 08:04:19 UTC\" \"2018-05-15 08:08:18 UTC\" #> [323] \"2018-05-15 08:12:20 UTC\" \"2018-05-15 08:16:20 UTC\" #> [325] \"2018-05-15 08:20:25 UTC\" \"2018-05-15 08:24:24 UTC\" #> [327] \"2018-05-15 08:28:23 UTC\" \"2018-05-15 08:32:26 UTC\" #> [329] \"2018-05-15 08:36:28 UTC\" \"2018-05-15 08:40:30 UTC\" #> [331] \"2018-05-15 08:44:31 UTC\" \"2018-05-15 08:48:32 UTC\" #> [333] \"2018-05-15 08:52:33 UTC\" \"2018-05-15 08:56:34 UTC\" #> [335] \"2018-05-15 09:00:35 UTC\" \"2018-05-15 09:04:36 UTC\" #> [337] \"2018-05-15 09:08:37 UTC\" \"2018-05-15 09:12:40 UTC\" #> [339] \"2018-05-15 09:16:40 UTC\" \"2018-05-15 09:20:40 UTC\" #> [341] \"2018-05-15 09:24:43 UTC\" \"2018-05-15 09:28:43 UTC\" #> [343] \"2018-05-15 09:32:43 UTC\" \"2018-05-15 09:36:45 UTC\" #> [345] \"2018-05-15 09:40:47 UTC\" \"2018-05-15 09:44:47 UTC\" #> [347] \"2018-05-15 09:48:49 UTC\" \"2018-05-15 09:52:50 UTC\" #> [349] \"2018-05-15 09:56:50 UTC\" \"2018-05-15 10:00:53 UTC\" #> [351] \"2018-05-15 10:04:55 UTC\" \"2018-05-15 10:08:54 UTC\" #> [353] \"2018-05-15 10:12:56 UTC\" \"2018-05-15 10:16:58 UTC\" #> [355] \"2018-05-15 10:20:57 UTC\" \"2018-05-15 10:25:01 UTC\" #> [357] \"2018-05-15 10:29:00 UTC\" \"2018-05-15 10:33:02 UTC\" #> [359] \"2018-05-15 10:37:04 UTC\" \"2018-05-15 10:41:04 UTC\" #> [361] \"2018-05-15 10:45:06 UTC\" \"2018-05-15 10:49:06 UTC\" #> [363] \"2018-05-15 10:53:08 UTC\" \"2018-05-15 10:57:08 UTC\" #> [365] \"2018-05-15 11:01:10 UTC\" \"2018-05-15 11:05:11 UTC\" #> [367] \"2018-05-15 11:09:13 UTC\" \"2018-05-15 11:13:13 UTC\" #> [369] \"2018-05-15 11:17:14 UTC\" \"2018-05-15 11:21:16 UTC\" #> [371] \"2018-05-15 11:25:20 UTC\" \"2018-05-15 11:29:17 UTC\" #> [373] \"2018-05-15 11:33:21 UTC\" \"2018-05-15 11:37:20 UTC\" #> [375] \"2018-05-15 11:41:22 UTC\" \"2018-05-15 11:45:20 UTC\" #> [377] \"2018-05-15 11:49:25 UTC\" \"2018-05-15 11:53:24 UTC\" #> [379] \"2018-05-15 11:57:26 UTC\" \"2018-05-15 12:01:27 UTC\" #> [381] \"2018-05-15 12:05:30 UTC\" \"2018-05-15 12:09:30 UTC\" #> [383] \"2018-05-15 12:13:30 UTC\" \"2018-05-15 12:17:31 UTC\" #> [385] \"2018-05-15 12:21:34 UTC\" \"2018-05-15 12:25:36 UTC\" #> [387] \"2018-05-15 12:29:36 UTC\" \"2018-05-15 12:33:37 UTC\" #> [389] \"2018-05-15 12:37:38 UTC\" \"2018-05-15 12:41:40 UTC\" #> [391] \"2018-05-15 12:45:42 UTC\" \"2018-05-15 12:49:42 UTC\" #> [393] \"2018-05-15 12:53:44 UTC\" \"2018-05-15 12:57:44 UTC\" #> [395] \"2018-05-15 13:01:46 UTC\" \"2018-05-15 13:05:45 UTC\" #> [397] \"2018-05-15 13:09:49 UTC\" \"2018-05-15 13:13:48 UTC\" #> [399] \"2018-05-15 13:17:50 UTC\" \"2018-05-15 13:21:50 UTC\" #> [401] \"2018-05-15 13:25:51 UTC\" \"2018-05-15 13:29:54 UTC\" #> [403] \"2018-05-15 13:33:55 UTC\" \"2018-05-15 13:37:55 UTC\" #> [405] \"2018-05-15 13:41:56 UTC\" \"2018-05-15 13:45:58 UTC\" #> [407] \"2018-05-15 13:50:00 UTC\" \"2018-05-15 13:54:01 UTC\" #> [409] \"2018-05-15 13:58:02 UTC\" \"2018-05-15 14:02:05 UTC\" #> [411] \"2018-05-15 14:06:04 UTC\" \"2018-05-15 14:10:06 UTC\" #> [413] \"2018-05-15 14:14:08 UTC\" \"2018-05-15 14:18:07 UTC\" #> [415] \"2018-05-15 14:22:09 UTC\" \"2018-05-15 14:26:08 UTC\" #> [417] \"2018-05-15 14:30:11 UTC\" \"2018-05-15 14:34:13 UTC\" #> [419] \"2018-05-15 14:38:13 UTC\" \"2018-05-15 14:42:13 UTC\" #> [421] \"2018-05-15 14:46:15 UTC\" \"2018-05-15 14:50:18 UTC\" #> [423] \"2018-05-15 14:54:17 UTC\" \"2018-05-15 14:58:18 UTC\" #> [425] \"2018-05-15 15:02:19 UTC\" \"2018-05-15 15:06:21 UTC\" #> [427] \"2018-05-15 15:10:23 UTC\" \"2018-05-15 15:14:24 UTC\" #> [429] \"2018-05-15 15:18:26 UTC\" \"2018-05-15 15:22:25 UTC\" #> [431] \"2018-05-15 15:26:28 UTC\" \"2018-05-15 15:30:29 UTC\" #> [433] \"2018-05-15 15:34:31 UTC\" \"2018-05-15 15:38:33 UTC\" #> [435] \"2018-05-15 15:42:33 UTC\" \"2018-05-15 15:46:35 UTC\" #> [437] \"2018-05-15 15:50:37 UTC\" \"2018-05-15 15:54:37 UTC\" #> [439] \"2018-05-15 15:58:38 UTC\" \"2018-05-15 16:02:38 UTC\" #> [441] \"2018-05-15 16:06:41 UTC\" \"2018-05-15 16:10:40 UTC\" #> [443] \"2018-05-15 16:14:41 UTC\" \"2018-05-15 16:18:45 UTC\" #> [445] \"2018-05-15 16:22:45 UTC\" \"2018-05-15 16:26:45 UTC\" #> [447] \"2018-05-15 16:30:47 UTC\" \"2018-05-15 16:34:47 UTC\" #> [449] \"2018-05-15 16:38:50 UTC\" \"2018-05-15 16:42:49 UTC\" #> [451] \"2018-05-15 16:46:51 UTC\" \"2018-05-15 16:50:54 UTC\" #> [453] \"2018-05-15 16:54:53 UTC\" \"2018-05-15 16:58:56 UTC\" #> [455] \"2018-05-15 17:02:56 UTC\" \"2018-05-15 17:06:56 UTC\" #> [457] \"2018-05-15 17:11:00 UTC\" \"2018-05-15 17:15:00 UTC\" unique(mt_time_lags(move_data, units = \"s\")) #> Units: [s] #>   [1] 241.6083 241.2145 242.0282 241.1976 241.0800 240.5189 240.0864 242.6678 #>   [9] 242.2705 238.7727 242.9916 239.6901 243.0046 240.7830 240.3434 242.4782 #>  [17] 240.3580 240.8113 241.0018 241.7700 241.6667 239.4957 244.1606 240.6535 #>  [25] 241.1765 240.0880 242.5980 241.0853 244.1392 239.1328 240.2226 242.4814 #>  [33] 242.0443 239.6373 241.0358 241.2882 238.8239 244.0303 240.1596 241.8291 #>  [41] 241.3348 241.3921 240.8604 241.7494 241.1791 241.2913 241.1070 240.9777 #>  [49] 241.6984 241.5453 239.4714 241.0169 241.2283 242.1130 240.7176 243.8555 #>  [57] 240.2207 241.7677 241.4961 240.2522 242.0899 240.6328 241.2259 239.7097 #>  [65] 242.7299 240.4443 242.8381 241.0431 238.8728 241.9052 242.6477 240.3644 #>  [73] 241.0568 241.0865 241.1863 242.5088 242.2024 238.5473 241.2349 241.7509 #>  [81] 242.6181 241.3337 242.5799 240.4383 240.5052 241.0815 241.1311 243.6101 #>  [89] 239.0590 242.6740 238.2350 242.6652 240.8537 241.0975 240.7945 243.9699 #>  [97] 240.0049 240.7602 240.2584 243.1325 239.9895 242.3360 242.5562 239.5827 #> [105] 240.6223 241.9335 240.3939 243.1982 240.6255 241.1742 239.7726 242.1873 #> [113] 241.6624 241.6780 241.0878 242.3536 239.4923 240.2693 242.7713 240.7574 #> [121] 241.8579 241.2966 242.7186 240.1026 240.8366 238.6687 244.3361 240.3348 #> [129] 241.5254 241.9341 242.1811 238.5849 242.1992 240.7525 241.7235 241.7701 #> [137] 240.4626 240.9701 242.1671 240.3428 241.9302 239.6675 242.3009       NA #> [145] 240.3284 241.7160 239.2920 242.0145 243.4952 244.1881 239.2910 241.2374 #> [153] 241.1230 241.7256 240.1026 244.2577 240.4923 241.7806 242.0237 242.7323 #> [161] 239.0670 243.0420 240.7175 242.7525 239.7340 240.7774 241.0071 241.5131 #> [169] 243.0937 244.2688 238.9673 240.7559 242.7426 240.6813 241.4997 241.9495 #> [177] 240.9063 243.5133 240.0627 240.5854 242.6872 240.9535 241.1872 241.6497 #> [185] 243.6831 238.7990 242.7737 241.5594 241.3162 239.5207 244.1235 240.6063 #> [193] 242.4657 241.4270 239.0707 241.4340 243.9848 241.4697 240.1422 243.3299 #> [201] 238.8353 242.4275 241.4527 241.2048 240.4635 244.2366 238.8262 243.0244 #> [209] 240.3073 243.8340 239.5003 242.7649 241.4716 242.0583 241.7236 240.6574 #> [217] 240.2322 242.7952 240.3016 241.2116 242.3906 241.8397 243.1165 240.3743 #> [225] 242.5443 240.5542 242.9370 237.8217 243.8437 241.7842 241.1153 239.7881 #> [233] 244.4294 240.1573 240.4429 240.8028 244.4266 237.4220 245.1558 239.4410 #> [241] 243.7862 241.3033 240.6132 240.4161 241.0621 244.1778 240.9851 239.1208 #> [249] 243.2708 239.7995 244.2150 239.2414 243.0662 240.2131 243.2093 241.6665 #> [257] 241.5501 241.2945 241.6370 240.4948 240.4259 244.3213 240.5839 240.1962 #> [265] 241.7041 242.1898 240.7271 241.3300 243.6073 241.6794 239.6966 241.1461 #> [273] 241.9004 243.4793 239.1218 243.5077 239.8575 242.8818 241.0846 242.5338 #> [281] 240.0215 242.3985 238.8235 244.0283 241.3453 241.4702 240.4271 241.4800 #> [289] 240.2739 242.9010 242.2551 239.9529 243.9245 242.6878 237.8560 241.9667 #> [297] 242.3514 241.8261 241.5315 241.1998 242.0510 241.1308 241.4077 240.4810 #> [305] 244.6335 237.8834 242.7556 239.9794 241.5448 240.0715 242.8206 240.5081 #> [313] 240.6471 242.8339 240.4542 242.8255 240.0429 240.9245 241.4166 238.7439 #> [321] 242.4522 239.7140 244.6859 239.4570 238.7810 243.2053 241.6590 242.0458 #> [329] 241.3231 240.7171 240.8494 241.8200 240.4360 241.1338 240.6458 243.3808 #> [337] 239.6746 240.2793 242.5811 240.6202 239.7726 242.3185 242.1974 239.9539 #> [345] 241.9238 240.9650 239.3941 243.0409 241.8621 239.0461 242.3036 242.4996 #> [353] 239.0054 243.3176 239.1111 242.2014 241.9988 240.0427 241.7212 240.4545 #> [361] 241.7256 240.2928 241.8852 241.2832 242.0152 239.6331 241.2769 241.5694 #> [369] 243.7453 237.4964 243.4669 239.6761 241.6981 238.4339 244.6769 239.1094 #> [377] 242.0774 240.8941 242.5137 240.1021 239.9684 241.4454 242.4545 242.7366 #> [385] 239.7685 240.8254 241.1121 241.6384 242.5626 240.0111 241.4732 240.1269 #> [393] 242.0252 238.6574 244.6887 238.6961 241.9646 239.8409 240.8040 243.3231 #> [401] 240.7964 240.5082 240.2386 242.8502 241.7415 241.0378 241.1028 242.4221 #> [409] 238.8342 242.3693 241.7228 239.5492 242.2003 238.8348 242.6354 242.3375 #> [417] 240.1639 239.6775 242.4836 242.4547 239.2575 241.0679 241.0640 241.7842 #> [425] 242.0069 240.8657 242.2152 238.6945 243.3354 240.6193 242.4493 242.1146 #> [433] 239.7830 241.3433 242.1991 239.7966 241.1279 240.0602 243.7447 238.5376 #> [441] 241.2397 243.4801 240.1120 239.9102 242.2425 240.0775 242.8596 238.9809 #> [449] 241.8319 242.8781 239.7313 242.6297 239.8637 240.3315 243.3408 240.9463  # use align_move to interpolate move_data to a uniform time scale and lag. # e.g. setting a resolution of 4 minutes: m <- align_move(m = move_data, res = units::set_units(4, \"min\")) #> Temporal resolution of 4 [min] is used to align trajectories. # check the result: records with attribute interpolate == TRUE have been added # all trajectories are now aligend to a uniform 4-minute resolution: unique(mt_time_lags(m, units = \"min\")) #> Units: [min] #> [1]  4 NA  # same with resolution of 1 hour: m <- align_move(move_data, res = units::set_units(1, \"hour\")) #> Temporal resolution of 1 [h] is used to align trajectories. unique(mt_time_lags(m, units = \"hour\")) #> Units: [h] #> [1]  1 NA  # resolution of 15 seconds: m <- align_move(move_data, res = units::set_units(15, \"sec\")) #> Temporal resolution of 15 [s] is used to align trajectories. unique(mt_time_lags(m, units = \"sec\")) #> Units: [s] #> [1] 15 NA  # you can set the start/end times if needed: # first, let us retrieve the start and end time per track: start_end_time <- lapply(split(move_data, mt_track_id(move_data)), function(m){    range(mt_time(m), na.rm = T) }) start_end_time #> $T246a #> [1] \"2018-05-15 09:59:59 UTC\" \"2018-05-15 19:34:59 UTC\" #>  #> $T342g #> [1] \"2018-05-15 08:00:00 UTC\" \"2018-05-15 18:40:00 UTC\" #>  #> $T932u #> [1] \"2018-05-15 06:59:59 UTC\" \"2018-05-15 17:15:00 UTC\" #>  # I want the start time to be at 00 minutes and 00 seconds for the first track: start_end_time[[1]] <- round(start_end_time[[1]])  m <- align_move(    move_data, res = units::set_units(4, \"min\"),     start_end_time = start_end_time ) #> Temporal resolution of 4 [min] is used to align trajectories. #> Error: Argument 'start_end_time' must consist of two POSIXct times (one start time and one end time for alignment), if defined. mt_time(m[m$track == unique(mt_track_id(m))[1],]) #>    [1] \"2018-05-15 10:00:14 UTC\" \"2018-05-15 10:00:29 UTC\" #>    [3] \"2018-05-15 10:00:44 UTC\" \"2018-05-15 10:00:59 UTC\" #>    [5] \"2018-05-15 10:01:14 UTC\" \"2018-05-15 10:01:29 UTC\" #>    [7] \"2018-05-15 10:01:44 UTC\" \"2018-05-15 10:01:59 UTC\" #>    [9] \"2018-05-15 10:02:14 UTC\" \"2018-05-15 10:02:29 UTC\" #>   [11] \"2018-05-15 10:02:44 UTC\" \"2018-05-15 10:02:59 UTC\" #>   [13] \"2018-05-15 10:03:14 UTC\" \"2018-05-15 10:03:29 UTC\" #>   [15] \"2018-05-15 10:03:44 UTC\" \"2018-05-15 10:03:59 UTC\" #>   [17] \"2018-05-15 10:04:14 UTC\" \"2018-05-15 10:04:29 UTC\" #>   [19] \"2018-05-15 10:04:44 UTC\" \"2018-05-15 10:04:59 UTC\" #>   [21] \"2018-05-15 10:05:14 UTC\" \"2018-05-15 10:05:29 UTC\" #>   [23] \"2018-05-15 10:05:44 UTC\" \"2018-05-15 10:05:59 UTC\" #>   [25] \"2018-05-15 10:06:14 UTC\" \"2018-05-15 10:06:29 UTC\" #>   [27] \"2018-05-15 10:06:44 UTC\" \"2018-05-15 10:06:59 UTC\" #>   [29] \"2018-05-15 10:07:14 UTC\" \"2018-05-15 10:07:29 UTC\" #>   [31] \"2018-05-15 10:07:44 UTC\" \"2018-05-15 10:07:59 UTC\" #>   [33] \"2018-05-15 10:08:14 UTC\" \"2018-05-15 10:08:29 UTC\" #>   [35] \"2018-05-15 10:08:44 UTC\" \"2018-05-15 10:08:59 UTC\" #>   [37] \"2018-05-15 10:09:14 UTC\" \"2018-05-15 10:09:29 UTC\" #>   [39] \"2018-05-15 10:09:44 UTC\" \"2018-05-15 10:09:59 UTC\" #>   [41] \"2018-05-15 10:10:14 UTC\" \"2018-05-15 10:10:29 UTC\" #>   [43] \"2018-05-15 10:10:44 UTC\" \"2018-05-15 10:10:59 UTC\" #>   [45] \"2018-05-15 10:11:14 UTC\" \"2018-05-15 10:11:29 UTC\" #>   [47] \"2018-05-15 10:11:44 UTC\" \"2018-05-15 10:11:59 UTC\" #>   [49] \"2018-05-15 10:12:14 UTC\" \"2018-05-15 10:12:29 UTC\" #>   [51] \"2018-05-15 10:12:44 UTC\" \"2018-05-15 10:12:59 UTC\" #>   [53] \"2018-05-15 10:13:14 UTC\" \"2018-05-15 10:13:29 UTC\" #>   [55] \"2018-05-15 10:13:44 UTC\" \"2018-05-15 10:13:59 UTC\" #>   [57] \"2018-05-15 10:14:14 UTC\" \"2018-05-15 10:14:29 UTC\" #>   [59] \"2018-05-15 10:14:44 UTC\" \"2018-05-15 10:14:59 UTC\" #>   [61] \"2018-05-15 10:15:14 UTC\" \"2018-05-15 10:15:29 UTC\" #>   [63] \"2018-05-15 10:15:44 UTC\" \"2018-05-15 10:15:59 UTC\" #>   [65] \"2018-05-15 10:16:14 UTC\" \"2018-05-15 10:16:29 UTC\" #>   [67] \"2018-05-15 10:16:44 UTC\" \"2018-05-15 10:16:59 UTC\" #>   [69] \"2018-05-15 10:17:14 UTC\" \"2018-05-15 10:17:29 UTC\" #>   [71] \"2018-05-15 10:17:44 UTC\" \"2018-05-15 10:17:59 UTC\" #>   [73] \"2018-05-15 10:18:14 UTC\" \"2018-05-15 10:18:29 UTC\" #>   [75] \"2018-05-15 10:18:44 UTC\" \"2018-05-15 10:18:59 UTC\" #>   [77] \"2018-05-15 10:19:14 UTC\" \"2018-05-15 10:19:29 UTC\" #>   [79] \"2018-05-15 10:19:44 UTC\" \"2018-05-15 10:19:59 UTC\" #>   [81] \"2018-05-15 10:20:14 UTC\" \"2018-05-15 10:20:29 UTC\" #>   [83] \"2018-05-15 10:20:44 UTC\" \"2018-05-15 10:20:59 UTC\" #>   [85] \"2018-05-15 10:21:14 UTC\" \"2018-05-15 10:21:29 UTC\" #>   [87] \"2018-05-15 10:21:44 UTC\" \"2018-05-15 10:21:59 UTC\" #>   [89] \"2018-05-15 10:22:14 UTC\" \"2018-05-15 10:22:29 UTC\" #>   [91] \"2018-05-15 10:22:44 UTC\" \"2018-05-15 10:22:59 UTC\" #>   [93] \"2018-05-15 10:23:14 UTC\" \"2018-05-15 10:23:29 UTC\" #>   [95] \"2018-05-15 10:23:44 UTC\" \"2018-05-15 10:23:59 UTC\" #>   [97] \"2018-05-15 10:24:14 UTC\" \"2018-05-15 10:24:29 UTC\" #>   [99] \"2018-05-15 10:24:44 UTC\" \"2018-05-15 10:24:59 UTC\" #>  [101] \"2018-05-15 10:25:14 UTC\" \"2018-05-15 10:25:29 UTC\" #>  [103] \"2018-05-15 10:25:44 UTC\" \"2018-05-15 10:25:59 UTC\" #>  [105] \"2018-05-15 10:26:14 UTC\" \"2018-05-15 10:26:29 UTC\" #>  [107] \"2018-05-15 10:26:44 UTC\" \"2018-05-15 10:26:59 UTC\" #>  [109] \"2018-05-15 10:27:14 UTC\" \"2018-05-15 10:27:29 UTC\" #>  [111] \"2018-05-15 10:27:44 UTC\" \"2018-05-15 10:27:59 UTC\" #>  [113] \"2018-05-15 10:28:14 UTC\" \"2018-05-15 10:28:29 UTC\" #>  [115] \"2018-05-15 10:28:44 UTC\" \"2018-05-15 10:28:59 UTC\" #>  [117] \"2018-05-15 10:29:14 UTC\" \"2018-05-15 10:29:29 UTC\" #>  [119] \"2018-05-15 10:29:44 UTC\" \"2018-05-15 10:29:59 UTC\" #>  [121] \"2018-05-15 10:30:14 UTC\" \"2018-05-15 10:30:29 UTC\" #>  [123] \"2018-05-15 10:30:44 UTC\" \"2018-05-15 10:30:59 UTC\" #>  [125] \"2018-05-15 10:31:14 UTC\" \"2018-05-15 10:31:29 UTC\" #>  [127] \"2018-05-15 10:31:44 UTC\" \"2018-05-15 10:31:59 UTC\" #>  [129] \"2018-05-15 10:32:14 UTC\" \"2018-05-15 10:32:29 UTC\" #>  [131] \"2018-05-15 10:32:44 UTC\" \"2018-05-15 10:32:59 UTC\" #>  [133] \"2018-05-15 10:33:14 UTC\" \"2018-05-15 10:33:29 UTC\" #>  [135] \"2018-05-15 10:33:44 UTC\" \"2018-05-15 10:33:59 UTC\" #>  [137] \"2018-05-15 10:34:14 UTC\" \"2018-05-15 10:34:29 UTC\" #>  [139] \"2018-05-15 10:34:44 UTC\" \"2018-05-15 10:34:59 UTC\" #>  [141] \"2018-05-15 10:35:14 UTC\" \"2018-05-15 10:35:29 UTC\" #>  [143] \"2018-05-15 10:35:44 UTC\" \"2018-05-15 10:35:59 UTC\" #>  [145] \"2018-05-15 10:36:14 UTC\" \"2018-05-15 10:36:29 UTC\" #>  [147] \"2018-05-15 10:36:44 UTC\" \"2018-05-15 10:36:59 UTC\" #>  [149] \"2018-05-15 10:37:14 UTC\" \"2018-05-15 10:37:29 UTC\" #>  [151] \"2018-05-15 10:37:44 UTC\" \"2018-05-15 10:37:59 UTC\" #>  [153] \"2018-05-15 10:38:14 UTC\" \"2018-05-15 10:38:29 UTC\" #>  [155] \"2018-05-15 10:38:44 UTC\" \"2018-05-15 10:38:59 UTC\" #>  [157] \"2018-05-15 10:39:14 UTC\" \"2018-05-15 10:39:29 UTC\" #>  [159] \"2018-05-15 10:39:44 UTC\" \"2018-05-15 10:39:59 UTC\" #>  [161] \"2018-05-15 10:40:14 UTC\" \"2018-05-15 10:40:29 UTC\" #>  [163] \"2018-05-15 10:40:44 UTC\" \"2018-05-15 10:40:59 UTC\" #>  [165] \"2018-05-15 10:41:14 UTC\" \"2018-05-15 10:41:29 UTC\" #>  [167] \"2018-05-15 10:41:44 UTC\" \"2018-05-15 10:41:59 UTC\" #>  [169] \"2018-05-15 10:42:14 UTC\" \"2018-05-15 10:42:29 UTC\" #>  [171] \"2018-05-15 10:42:44 UTC\" \"2018-05-15 10:42:59 UTC\" #>  [173] \"2018-05-15 10:43:14 UTC\" \"2018-05-15 10:43:29 UTC\" #>  [175] \"2018-05-15 10:43:44 UTC\" \"2018-05-15 10:43:59 UTC\" #>  [177] \"2018-05-15 10:44:14 UTC\" \"2018-05-15 10:44:29 UTC\" #>  [179] \"2018-05-15 10:44:44 UTC\" \"2018-05-15 10:44:59 UTC\" #>  [181] \"2018-05-15 10:45:14 UTC\" \"2018-05-15 10:45:29 UTC\" #>  [183] \"2018-05-15 10:45:44 UTC\" \"2018-05-15 10:45:59 UTC\" #>  [185] \"2018-05-15 10:46:14 UTC\" \"2018-05-15 10:46:29 UTC\" #>  [187] \"2018-05-15 10:46:44 UTC\" \"2018-05-15 10:46:59 UTC\" #>  [189] \"2018-05-15 10:47:14 UTC\" \"2018-05-15 10:47:29 UTC\" #>  [191] \"2018-05-15 10:47:44 UTC\" \"2018-05-15 10:47:59 UTC\" #>  [193] \"2018-05-15 10:48:14 UTC\" \"2018-05-15 10:48:29 UTC\" #>  [195] \"2018-05-15 10:48:44 UTC\" \"2018-05-15 10:48:59 UTC\" #>  [197] \"2018-05-15 10:49:14 UTC\" \"2018-05-15 10:49:29 UTC\" #>  [199] \"2018-05-15 10:49:44 UTC\" \"2018-05-15 10:49:59 UTC\" #>  [201] \"2018-05-15 10:50:14 UTC\" \"2018-05-15 10:50:29 UTC\" #>  [203] \"2018-05-15 10:50:44 UTC\" \"2018-05-15 10:50:59 UTC\" #>  [205] \"2018-05-15 10:51:14 UTC\" \"2018-05-15 10:51:29 UTC\" #>  [207] \"2018-05-15 10:51:44 UTC\" \"2018-05-15 10:51:59 UTC\" #>  [209] \"2018-05-15 10:52:14 UTC\" \"2018-05-15 10:52:29 UTC\" #>  [211] \"2018-05-15 10:52:44 UTC\" \"2018-05-15 10:52:59 UTC\" #>  [213] \"2018-05-15 10:53:14 UTC\" \"2018-05-15 10:53:29 UTC\" #>  [215] \"2018-05-15 10:53:44 UTC\" \"2018-05-15 10:53:59 UTC\" #>  [217] \"2018-05-15 10:54:14 UTC\" \"2018-05-15 10:54:29 UTC\" #>  [219] \"2018-05-15 10:54:44 UTC\" \"2018-05-15 10:54:59 UTC\" #>  [221] \"2018-05-15 10:55:14 UTC\" \"2018-05-15 10:55:29 UTC\" #>  [223] \"2018-05-15 10:55:44 UTC\" \"2018-05-15 10:55:59 UTC\" #>  [225] \"2018-05-15 10:56:14 UTC\" \"2018-05-15 10:56:29 UTC\" #>  [227] \"2018-05-15 10:56:44 UTC\" \"2018-05-15 10:56:59 UTC\" #>  [229] \"2018-05-15 10:57:14 UTC\" \"2018-05-15 10:57:29 UTC\" #>  [231] \"2018-05-15 10:57:44 UTC\" \"2018-05-15 10:57:59 UTC\" #>  [233] \"2018-05-15 10:58:14 UTC\" \"2018-05-15 10:58:29 UTC\" #>  [235] \"2018-05-15 10:58:44 UTC\" \"2018-05-15 10:58:59 UTC\" #>  [237] \"2018-05-15 10:59:14 UTC\" \"2018-05-15 10:59:29 UTC\" #>  [239] \"2018-05-15 10:59:44 UTC\" \"2018-05-15 10:59:59 UTC\" #>  [241] \"2018-05-15 11:00:14 UTC\" \"2018-05-15 11:00:29 UTC\" #>  [243] \"2018-05-15 11:00:44 UTC\" \"2018-05-15 11:00:59 UTC\" #>  [245] \"2018-05-15 11:01:14 UTC\" \"2018-05-15 11:01:29 UTC\" #>  [247] \"2018-05-15 11:01:44 UTC\" \"2018-05-15 11:01:59 UTC\" #>  [249] \"2018-05-15 11:02:14 UTC\" \"2018-05-15 11:02:29 UTC\" #>  [251] \"2018-05-15 11:02:44 UTC\" \"2018-05-15 11:02:59 UTC\" #>  [253] \"2018-05-15 11:03:14 UTC\" \"2018-05-15 11:03:29 UTC\" #>  [255] \"2018-05-15 11:03:44 UTC\" \"2018-05-15 11:03:59 UTC\" #>  [257] \"2018-05-15 11:04:14 UTC\" \"2018-05-15 11:04:29 UTC\" #>  [259] \"2018-05-15 11:04:44 UTC\" \"2018-05-15 11:04:59 UTC\" #>  [261] \"2018-05-15 11:05:14 UTC\" \"2018-05-15 11:05:29 UTC\" #>  [263] \"2018-05-15 11:05:44 UTC\" \"2018-05-15 11:05:59 UTC\" #>  [265] \"2018-05-15 11:06:14 UTC\" \"2018-05-15 11:06:29 UTC\" #>  [267] \"2018-05-15 11:06:44 UTC\" \"2018-05-15 11:06:59 UTC\" #>  [269] \"2018-05-15 11:07:14 UTC\" \"2018-05-15 11:07:29 UTC\" #>  [271] \"2018-05-15 11:07:44 UTC\" \"2018-05-15 11:07:59 UTC\" #>  [273] \"2018-05-15 11:08:14 UTC\" \"2018-05-15 11:08:29 UTC\" #>  [275] \"2018-05-15 11:08:44 UTC\" \"2018-05-15 11:08:59 UTC\" #>  [277] \"2018-05-15 11:09:14 UTC\" \"2018-05-15 11:09:29 UTC\" #>  [279] \"2018-05-15 11:09:44 UTC\" \"2018-05-15 11:09:59 UTC\" #>  [281] \"2018-05-15 11:10:14 UTC\" \"2018-05-15 11:10:29 UTC\" #>  [283] \"2018-05-15 11:10:44 UTC\" \"2018-05-15 11:10:59 UTC\" #>  [285] \"2018-05-15 11:11:14 UTC\" \"2018-05-15 11:11:29 UTC\" #>  [287] \"2018-05-15 11:11:44 UTC\" \"2018-05-15 11:11:59 UTC\" #>  [289] \"2018-05-15 11:12:14 UTC\" \"2018-05-15 11:12:29 UTC\" #>  [291] \"2018-05-15 11:12:44 UTC\" \"2018-05-15 11:12:59 UTC\" #>  [293] \"2018-05-15 11:13:14 UTC\" \"2018-05-15 11:13:29 UTC\" #>  [295] \"2018-05-15 11:13:44 UTC\" \"2018-05-15 11:13:59 UTC\" #>  [297] \"2018-05-15 11:14:14 UTC\" \"2018-05-15 11:14:29 UTC\" #>  [299] \"2018-05-15 11:14:44 UTC\" \"2018-05-15 11:14:59 UTC\" #>  [301] \"2018-05-15 11:15:14 UTC\" \"2018-05-15 11:15:29 UTC\" #>  [303] \"2018-05-15 11:15:44 UTC\" \"2018-05-15 11:15:59 UTC\" #>  [305] \"2018-05-15 11:16:14 UTC\" \"2018-05-15 11:16:29 UTC\" #>  [307] \"2018-05-15 11:16:44 UTC\" \"2018-05-15 11:16:59 UTC\" #>  [309] \"2018-05-15 11:17:14 UTC\" \"2018-05-15 11:17:29 UTC\" #>  [311] \"2018-05-15 11:17:44 UTC\" \"2018-05-15 11:17:59 UTC\" #>  [313] \"2018-05-15 11:18:14 UTC\" \"2018-05-15 11:18:29 UTC\" #>  [315] \"2018-05-15 11:18:44 UTC\" \"2018-05-15 11:18:59 UTC\" #>  [317] \"2018-05-15 11:19:14 UTC\" \"2018-05-15 11:19:29 UTC\" #>  [319] \"2018-05-15 11:19:44 UTC\" \"2018-05-15 11:19:59 UTC\" #>  [321] \"2018-05-15 11:20:14 UTC\" \"2018-05-15 11:20:29 UTC\" #>  [323] \"2018-05-15 11:20:44 UTC\" \"2018-05-15 11:20:59 UTC\" #>  [325] \"2018-05-15 11:21:14 UTC\" \"2018-05-15 11:21:29 UTC\" #>  [327] \"2018-05-15 11:21:44 UTC\" \"2018-05-15 11:21:59 UTC\" #>  [329] \"2018-05-15 11:22:14 UTC\" \"2018-05-15 11:22:29 UTC\" #>  [331] \"2018-05-15 11:22:44 UTC\" \"2018-05-15 11:22:59 UTC\" #>  [333] \"2018-05-15 11:23:14 UTC\" \"2018-05-15 11:23:29 UTC\" #>  [335] \"2018-05-15 11:23:44 UTC\" \"2018-05-15 11:23:59 UTC\" #>  [337] \"2018-05-15 11:24:14 UTC\" \"2018-05-15 11:24:29 UTC\" #>  [339] \"2018-05-15 11:24:44 UTC\" \"2018-05-15 11:24:59 UTC\" #>  [341] \"2018-05-15 11:25:14 UTC\" \"2018-05-15 11:25:29 UTC\" #>  [343] \"2018-05-15 11:25:44 UTC\" \"2018-05-15 11:25:59 UTC\" #>  [345] \"2018-05-15 11:26:14 UTC\" \"2018-05-15 11:26:29 UTC\" #>  [347] \"2018-05-15 11:26:44 UTC\" \"2018-05-15 11:26:59 UTC\" #>  [349] \"2018-05-15 11:27:14 UTC\" \"2018-05-15 11:27:29 UTC\" #>  [351] \"2018-05-15 11:27:44 UTC\" \"2018-05-15 11:27:59 UTC\" #>  [353] \"2018-05-15 11:28:14 UTC\" \"2018-05-15 11:28:29 UTC\" #>  [355] \"2018-05-15 11:28:44 UTC\" \"2018-05-15 11:28:59 UTC\" #>  [357] \"2018-05-15 11:29:14 UTC\" \"2018-05-15 11:29:29 UTC\" #>  [359] \"2018-05-15 11:29:44 UTC\" \"2018-05-15 11:29:59 UTC\" #>  [361] \"2018-05-15 11:30:14 UTC\" \"2018-05-15 11:30:29 UTC\" #>  [363] \"2018-05-15 11:30:44 UTC\" \"2018-05-15 11:30:59 UTC\" #>  [365] \"2018-05-15 11:31:14 UTC\" \"2018-05-15 11:31:29 UTC\" #>  [367] \"2018-05-15 11:31:44 UTC\" \"2018-05-15 11:31:59 UTC\" #>  [369] \"2018-05-15 11:32:14 UTC\" \"2018-05-15 11:32:29 UTC\" #>  [371] \"2018-05-15 11:32:44 UTC\" \"2018-05-15 11:32:59 UTC\" #>  [373] \"2018-05-15 11:33:14 UTC\" \"2018-05-15 11:33:29 UTC\" #>  [375] \"2018-05-15 11:33:44 UTC\" \"2018-05-15 11:33:59 UTC\" #>  [377] \"2018-05-15 11:34:14 UTC\" \"2018-05-15 11:34:29 UTC\" #>  [379] \"2018-05-15 11:34:44 UTC\" \"2018-05-15 11:34:59 UTC\" #>  [381] \"2018-05-15 11:35:14 UTC\" \"2018-05-15 11:35:29 UTC\" #>  [383] \"2018-05-15 11:35:44 UTC\" \"2018-05-15 11:35:59 UTC\" #>  [385] \"2018-05-15 11:36:14 UTC\" \"2018-05-15 11:36:29 UTC\" #>  [387] \"2018-05-15 11:36:44 UTC\" \"2018-05-15 11:36:59 UTC\" #>  [389] \"2018-05-15 11:37:14 UTC\" \"2018-05-15 11:37:29 UTC\" #>  [391] \"2018-05-15 11:37:44 UTC\" \"2018-05-15 11:37:59 UTC\" #>  [393] \"2018-05-15 11:38:14 UTC\" \"2018-05-15 11:38:29 UTC\" #>  [395] \"2018-05-15 11:38:44 UTC\" \"2018-05-15 11:38:59 UTC\" #>  [397] \"2018-05-15 11:39:14 UTC\" \"2018-05-15 11:39:29 UTC\" #>  [399] \"2018-05-15 11:39:44 UTC\" \"2018-05-15 11:39:59 UTC\" #>  [401] \"2018-05-15 11:40:14 UTC\" \"2018-05-15 11:40:29 UTC\" #>  [403] \"2018-05-15 11:40:44 UTC\" \"2018-05-15 11:40:59 UTC\" #>  [405] \"2018-05-15 11:41:14 UTC\" \"2018-05-15 11:41:29 UTC\" #>  [407] \"2018-05-15 11:41:44 UTC\" \"2018-05-15 11:41:59 UTC\" #>  [409] \"2018-05-15 11:42:14 UTC\" \"2018-05-15 11:42:29 UTC\" #>  [411] \"2018-05-15 11:42:44 UTC\" \"2018-05-15 11:42:59 UTC\" #>  [413] \"2018-05-15 11:43:14 UTC\" \"2018-05-15 11:43:29 UTC\" #>  [415] \"2018-05-15 11:43:44 UTC\" \"2018-05-15 11:43:59 UTC\" #>  [417] \"2018-05-15 11:44:14 UTC\" \"2018-05-15 11:44:29 UTC\" #>  [419] \"2018-05-15 11:44:44 UTC\" \"2018-05-15 11:44:59 UTC\" #>  [421] \"2018-05-15 11:45:14 UTC\" \"2018-05-15 11:45:29 UTC\" #>  [423] \"2018-05-15 11:45:44 UTC\" \"2018-05-15 11:45:59 UTC\" #>  [425] \"2018-05-15 11:46:14 UTC\" \"2018-05-15 11:46:29 UTC\" #>  [427] \"2018-05-15 11:46:44 UTC\" \"2018-05-15 11:46:59 UTC\" #>  [429] \"2018-05-15 11:47:14 UTC\" \"2018-05-15 11:47:29 UTC\" #>  [431] \"2018-05-15 11:47:44 UTC\" \"2018-05-15 11:47:59 UTC\" #>  [433] \"2018-05-15 11:48:14 UTC\" \"2018-05-15 11:48:29 UTC\" #>  [435] \"2018-05-15 11:48:44 UTC\" \"2018-05-15 11:48:59 UTC\" #>  [437] \"2018-05-15 11:49:14 UTC\" \"2018-05-15 11:49:29 UTC\" #>  [439] \"2018-05-15 11:49:44 UTC\" \"2018-05-15 11:49:59 UTC\" #>  [441] \"2018-05-15 11:50:14 UTC\" \"2018-05-15 11:50:29 UTC\" #>  [443] \"2018-05-15 11:50:44 UTC\" \"2018-05-15 11:50:59 UTC\" #>  [445] \"2018-05-15 11:51:14 UTC\" \"2018-05-15 11:51:29 UTC\" #>  [447] \"2018-05-15 11:51:44 UTC\" \"2018-05-15 11:51:59 UTC\" #>  [449] \"2018-05-15 11:52:14 UTC\" \"2018-05-15 11:52:29 UTC\" #>  [451] \"2018-05-15 11:52:44 UTC\" \"2018-05-15 11:52:59 UTC\" #>  [453] \"2018-05-15 11:53:14 UTC\" \"2018-05-15 11:53:29 UTC\" #>  [455] \"2018-05-15 11:53:44 UTC\" \"2018-05-15 11:53:59 UTC\" #>  [457] \"2018-05-15 11:54:14 UTC\" \"2018-05-15 11:54:29 UTC\" #>  [459] \"2018-05-15 11:54:44 UTC\" \"2018-05-15 11:54:59 UTC\" #>  [461] \"2018-05-15 11:55:14 UTC\" \"2018-05-15 11:55:29 UTC\" #>  [463] \"2018-05-15 11:55:44 UTC\" \"2018-05-15 11:55:59 UTC\" #>  [465] \"2018-05-15 11:56:14 UTC\" \"2018-05-15 11:56:29 UTC\" #>  [467] \"2018-05-15 11:56:44 UTC\" \"2018-05-15 11:56:59 UTC\" #>  [469] \"2018-05-15 11:57:14 UTC\" \"2018-05-15 11:57:29 UTC\" #>  [471] \"2018-05-15 11:57:44 UTC\" \"2018-05-15 11:57:59 UTC\" #>  [473] \"2018-05-15 11:58:14 UTC\" \"2018-05-15 11:58:29 UTC\" #>  [475] \"2018-05-15 11:58:44 UTC\" \"2018-05-15 11:58:59 UTC\" #>  [477] \"2018-05-15 11:59:14 UTC\" \"2018-05-15 11:59:29 UTC\" #>  [479] \"2018-05-15 11:59:44 UTC\" \"2018-05-15 11:59:59 UTC\" #>  [481] \"2018-05-15 12:00:14 UTC\" \"2018-05-15 12:00:29 UTC\" #>  [483] \"2018-05-15 12:00:44 UTC\" \"2018-05-15 12:00:59 UTC\" #>  [485] \"2018-05-15 12:01:14 UTC\" \"2018-05-15 12:01:29 UTC\" #>  [487] \"2018-05-15 12:01:44 UTC\" \"2018-05-15 12:01:59 UTC\" #>  [489] \"2018-05-15 12:02:14 UTC\" \"2018-05-15 12:02:29 UTC\" #>  [491] \"2018-05-15 12:02:44 UTC\" \"2018-05-15 12:02:59 UTC\" #>  [493] \"2018-05-15 12:03:14 UTC\" \"2018-05-15 12:03:29 UTC\" #>  [495] \"2018-05-15 12:03:44 UTC\" \"2018-05-15 12:03:59 UTC\" #>  [497] \"2018-05-15 12:04:14 UTC\" \"2018-05-15 12:04:29 UTC\" #>  [499] \"2018-05-15 12:04:44 UTC\" \"2018-05-15 12:04:59 UTC\" #>  [501] \"2018-05-15 12:05:14 UTC\" \"2018-05-15 12:05:29 UTC\" #>  [503] \"2018-05-15 12:05:44 UTC\" \"2018-05-15 12:05:59 UTC\" #>  [505] \"2018-05-15 12:06:14 UTC\" \"2018-05-15 12:06:29 UTC\" #>  [507] \"2018-05-15 12:06:44 UTC\" \"2018-05-15 12:06:59 UTC\" #>  [509] \"2018-05-15 12:07:14 UTC\" \"2018-05-15 12:07:29 UTC\" #>  [511] \"2018-05-15 12:07:44 UTC\" \"2018-05-15 12:07:59 UTC\" #>  [513] \"2018-05-15 12:08:14 UTC\" \"2018-05-15 12:08:29 UTC\" #>  [515] \"2018-05-15 12:08:44 UTC\" \"2018-05-15 12:08:59 UTC\" #>  [517] \"2018-05-15 12:09:14 UTC\" \"2018-05-15 12:09:29 UTC\" #>  [519] \"2018-05-15 12:09:44 UTC\" \"2018-05-15 12:09:59 UTC\" #>  [521] \"2018-05-15 12:10:14 UTC\" \"2018-05-15 12:10:29 UTC\" #>  [523] \"2018-05-15 12:10:44 UTC\" \"2018-05-15 12:10:59 UTC\" #>  [525] \"2018-05-15 12:11:14 UTC\" \"2018-05-15 12:11:29 UTC\" #>  [527] \"2018-05-15 12:11:44 UTC\" \"2018-05-15 12:11:59 UTC\" #>  [529] \"2018-05-15 12:12:14 UTC\" \"2018-05-15 12:12:29 UTC\" #>  [531] \"2018-05-15 12:12:44 UTC\" \"2018-05-15 12:12:59 UTC\" #>  [533] \"2018-05-15 12:13:14 UTC\" \"2018-05-15 12:13:29 UTC\" #>  [535] \"2018-05-15 12:13:44 UTC\" \"2018-05-15 12:13:59 UTC\" #>  [537] \"2018-05-15 12:14:14 UTC\" \"2018-05-15 12:14:29 UTC\" #>  [539] \"2018-05-15 12:14:44 UTC\" \"2018-05-15 12:14:59 UTC\" #>  [541] \"2018-05-15 12:15:14 UTC\" \"2018-05-15 12:15:29 UTC\" #>  [543] \"2018-05-15 12:15:44 UTC\" \"2018-05-15 12:15:59 UTC\" #>  [545] \"2018-05-15 12:16:14 UTC\" \"2018-05-15 12:16:29 UTC\" #>  [547] \"2018-05-15 12:16:44 UTC\" \"2018-05-15 12:16:59 UTC\" #>  [549] \"2018-05-15 12:17:14 UTC\" \"2018-05-15 12:17:29 UTC\" #>  [551] \"2018-05-15 12:17:44 UTC\" \"2018-05-15 12:17:59 UTC\" #>  [553] \"2018-05-15 12:18:14 UTC\" \"2018-05-15 12:18:29 UTC\" #>  [555] \"2018-05-15 12:18:44 UTC\" \"2018-05-15 12:18:59 UTC\" #>  [557] \"2018-05-15 12:19:14 UTC\" \"2018-05-15 12:19:29 UTC\" #>  [559] \"2018-05-15 12:19:44 UTC\" \"2018-05-15 12:19:59 UTC\" #>  [561] \"2018-05-15 12:20:14 UTC\" \"2018-05-15 12:20:29 UTC\" #>  [563] \"2018-05-15 12:20:44 UTC\" \"2018-05-15 12:20:59 UTC\" #>  [565] \"2018-05-15 12:21:14 UTC\" \"2018-05-15 12:21:29 UTC\" #>  [567] \"2018-05-15 12:21:44 UTC\" \"2018-05-15 12:21:59 UTC\" #>  [569] \"2018-05-15 12:22:14 UTC\" \"2018-05-15 12:22:29 UTC\" #>  [571] \"2018-05-15 12:22:44 UTC\" \"2018-05-15 12:22:59 UTC\" #>  [573] \"2018-05-15 12:23:14 UTC\" \"2018-05-15 12:23:29 UTC\" #>  [575] \"2018-05-15 12:23:44 UTC\" \"2018-05-15 12:23:59 UTC\" #>  [577] \"2018-05-15 12:24:14 UTC\" \"2018-05-15 12:24:29 UTC\" #>  [579] \"2018-05-15 12:24:44 UTC\" \"2018-05-15 12:24:59 UTC\" #>  [581] \"2018-05-15 12:25:14 UTC\" \"2018-05-15 12:25:29 UTC\" #>  [583] \"2018-05-15 12:25:44 UTC\" \"2018-05-15 12:25:59 UTC\" #>  [585] \"2018-05-15 12:26:14 UTC\" \"2018-05-15 12:26:29 UTC\" #>  [587] \"2018-05-15 12:26:44 UTC\" \"2018-05-15 12:26:59 UTC\" #>  [589] \"2018-05-15 12:27:14 UTC\" \"2018-05-15 12:27:29 UTC\" #>  [591] \"2018-05-15 12:27:44 UTC\" \"2018-05-15 12:27:59 UTC\" #>  [593] \"2018-05-15 12:28:14 UTC\" \"2018-05-15 12:28:29 UTC\" #>  [595] \"2018-05-15 12:28:44 UTC\" \"2018-05-15 12:28:59 UTC\" #>  [597] \"2018-05-15 12:29:14 UTC\" \"2018-05-15 12:29:29 UTC\" #>  [599] \"2018-05-15 12:29:44 UTC\" \"2018-05-15 12:29:59 UTC\" #>  [601] \"2018-05-15 12:30:14 UTC\" \"2018-05-15 12:30:29 UTC\" #>  [603] \"2018-05-15 12:30:44 UTC\" \"2018-05-15 12:30:59 UTC\" #>  [605] \"2018-05-15 12:31:14 UTC\" \"2018-05-15 12:31:29 UTC\" #>  [607] \"2018-05-15 12:31:44 UTC\" \"2018-05-15 12:31:59 UTC\" #>  [609] \"2018-05-15 12:32:14 UTC\" \"2018-05-15 12:32:29 UTC\" #>  [611] \"2018-05-15 12:32:44 UTC\" \"2018-05-15 12:32:59 UTC\" #>  [613] \"2018-05-15 12:33:14 UTC\" \"2018-05-15 12:33:29 UTC\" #>  [615] \"2018-05-15 12:33:44 UTC\" \"2018-05-15 12:33:59 UTC\" #>  [617] \"2018-05-15 12:34:14 UTC\" \"2018-05-15 12:34:29 UTC\" #>  [619] \"2018-05-15 12:34:44 UTC\" \"2018-05-15 12:34:59 UTC\" #>  [621] \"2018-05-15 12:35:14 UTC\" \"2018-05-15 12:35:29 UTC\" #>  [623] \"2018-05-15 12:35:44 UTC\" \"2018-05-15 12:35:59 UTC\" #>  [625] \"2018-05-15 12:36:14 UTC\" \"2018-05-15 12:36:29 UTC\" #>  [627] \"2018-05-15 12:36:44 UTC\" \"2018-05-15 12:36:59 UTC\" #>  [629] \"2018-05-15 12:37:14 UTC\" \"2018-05-15 12:37:29 UTC\" #>  [631] \"2018-05-15 12:37:44 UTC\" \"2018-05-15 12:37:59 UTC\" #>  [633] \"2018-05-15 12:38:14 UTC\" \"2018-05-15 12:38:29 UTC\" #>  [635] \"2018-05-15 12:38:44 UTC\" \"2018-05-15 12:38:59 UTC\" #>  [637] \"2018-05-15 12:39:14 UTC\" \"2018-05-15 12:39:29 UTC\" #>  [639] \"2018-05-15 12:39:44 UTC\" \"2018-05-15 12:39:59 UTC\" #>  [641] \"2018-05-15 12:40:14 UTC\" \"2018-05-15 12:40:29 UTC\" #>  [643] \"2018-05-15 12:40:44 UTC\" \"2018-05-15 12:40:59 UTC\" #>  [645] \"2018-05-15 12:41:14 UTC\" \"2018-05-15 12:41:29 UTC\" #>  [647] \"2018-05-15 12:41:44 UTC\" \"2018-05-15 12:41:59 UTC\" #>  [649] \"2018-05-15 12:42:14 UTC\" \"2018-05-15 12:42:29 UTC\" #>  [651] \"2018-05-15 12:42:44 UTC\" \"2018-05-15 12:42:59 UTC\" #>  [653] \"2018-05-15 12:43:14 UTC\" \"2018-05-15 12:43:29 UTC\" #>  [655] \"2018-05-15 12:43:44 UTC\" \"2018-05-15 12:43:59 UTC\" #>  [657] \"2018-05-15 12:44:14 UTC\" \"2018-05-15 12:44:29 UTC\" #>  [659] \"2018-05-15 12:44:44 UTC\" \"2018-05-15 12:44:59 UTC\" #>  [661] \"2018-05-15 12:45:14 UTC\" \"2018-05-15 12:45:29 UTC\" #>  [663] \"2018-05-15 12:45:44 UTC\" \"2018-05-15 12:45:59 UTC\" #>  [665] \"2018-05-15 12:46:14 UTC\" \"2018-05-15 12:46:29 UTC\" #>  [667] \"2018-05-15 12:46:44 UTC\" \"2018-05-15 12:46:59 UTC\" #>  [669] \"2018-05-15 12:47:14 UTC\" \"2018-05-15 12:47:29 UTC\" #>  [671] \"2018-05-15 12:47:44 UTC\" \"2018-05-15 12:47:59 UTC\" #>  [673] \"2018-05-15 12:48:14 UTC\" \"2018-05-15 12:48:29 UTC\" #>  [675] \"2018-05-15 12:48:44 UTC\" \"2018-05-15 12:48:59 UTC\" #>  [677] \"2018-05-15 12:49:14 UTC\" \"2018-05-15 12:49:29 UTC\" #>  [679] \"2018-05-15 12:49:44 UTC\" \"2018-05-15 12:49:59 UTC\" #>  [681] \"2018-05-15 12:50:14 UTC\" \"2018-05-15 12:50:29 UTC\" #>  [683] \"2018-05-15 12:50:44 UTC\" \"2018-05-15 12:50:59 UTC\" #>  [685] \"2018-05-15 12:51:14 UTC\" \"2018-05-15 12:51:29 UTC\" #>  [687] \"2018-05-15 12:51:44 UTC\" \"2018-05-15 12:51:59 UTC\" #>  [689] \"2018-05-15 12:52:14 UTC\" \"2018-05-15 12:52:29 UTC\" #>  [691] \"2018-05-15 12:52:44 UTC\" \"2018-05-15 12:52:59 UTC\" #>  [693] \"2018-05-15 12:53:14 UTC\" \"2018-05-15 12:53:29 UTC\" #>  [695] \"2018-05-15 12:53:44 UTC\" \"2018-05-15 12:53:59 UTC\" #>  [697] \"2018-05-15 12:54:14 UTC\" \"2018-05-15 12:54:29 UTC\" #>  [699] \"2018-05-15 12:54:44 UTC\" \"2018-05-15 12:54:59 UTC\" #>  [701] \"2018-05-15 12:55:14 UTC\" \"2018-05-15 12:55:29 UTC\" #>  [703] \"2018-05-15 12:55:44 UTC\" \"2018-05-15 12:55:59 UTC\" #>  [705] \"2018-05-15 12:56:14 UTC\" \"2018-05-15 12:56:29 UTC\" #>  [707] \"2018-05-15 12:56:44 UTC\" \"2018-05-15 12:56:59 UTC\" #>  [709] \"2018-05-15 12:57:14 UTC\" \"2018-05-15 12:57:29 UTC\" #>  [711] \"2018-05-15 12:57:44 UTC\" \"2018-05-15 12:57:59 UTC\" #>  [713] \"2018-05-15 12:58:14 UTC\" \"2018-05-15 12:58:29 UTC\" #>  [715] \"2018-05-15 12:58:44 UTC\" \"2018-05-15 12:58:59 UTC\" #>  [717] \"2018-05-15 12:59:14 UTC\" \"2018-05-15 12:59:29 UTC\" #>  [719] \"2018-05-15 12:59:44 UTC\" \"2018-05-15 12:59:59 UTC\" #>  [721] \"2018-05-15 13:00:14 UTC\" \"2018-05-15 13:00:29 UTC\" #>  [723] \"2018-05-15 13:00:44 UTC\" \"2018-05-15 13:00:59 UTC\" #>  [725] \"2018-05-15 13:01:14 UTC\" \"2018-05-15 13:01:29 UTC\" #>  [727] \"2018-05-15 13:01:44 UTC\" \"2018-05-15 13:01:59 UTC\" #>  [729] \"2018-05-15 13:02:14 UTC\" \"2018-05-15 13:02:29 UTC\" #>  [731] \"2018-05-15 13:02:44 UTC\" \"2018-05-15 13:02:59 UTC\" #>  [733] \"2018-05-15 13:03:14 UTC\" \"2018-05-15 13:03:29 UTC\" #>  [735] \"2018-05-15 13:03:44 UTC\" \"2018-05-15 13:03:59 UTC\" #>  [737] \"2018-05-15 13:04:14 UTC\" \"2018-05-15 13:04:29 UTC\" #>  [739] \"2018-05-15 13:04:44 UTC\" \"2018-05-15 13:04:59 UTC\" #>  [741] \"2018-05-15 13:05:14 UTC\" \"2018-05-15 13:05:29 UTC\" #>  [743] \"2018-05-15 13:05:44 UTC\" \"2018-05-15 13:05:59 UTC\" #>  [745] \"2018-05-15 13:06:14 UTC\" \"2018-05-15 13:06:29 UTC\" #>  [747] \"2018-05-15 13:06:44 UTC\" \"2018-05-15 13:06:59 UTC\" #>  [749] \"2018-05-15 13:07:14 UTC\" \"2018-05-15 13:07:29 UTC\" #>  [751] \"2018-05-15 13:07:44 UTC\" \"2018-05-15 13:07:59 UTC\" #>  [753] \"2018-05-15 13:08:14 UTC\" \"2018-05-15 13:08:29 UTC\" #>  [755] \"2018-05-15 13:08:44 UTC\" \"2018-05-15 13:08:59 UTC\" #>  [757] \"2018-05-15 13:09:14 UTC\" \"2018-05-15 13:09:29 UTC\" #>  [759] \"2018-05-15 13:09:44 UTC\" \"2018-05-15 13:09:59 UTC\" #>  [761] \"2018-05-15 13:10:14 UTC\" \"2018-05-15 13:10:29 UTC\" #>  [763] \"2018-05-15 13:10:44 UTC\" \"2018-05-15 13:10:59 UTC\" #>  [765] \"2018-05-15 13:11:14 UTC\" \"2018-05-15 13:11:29 UTC\" #>  [767] \"2018-05-15 13:11:44 UTC\" \"2018-05-15 13:11:59 UTC\" #>  [769] \"2018-05-15 13:12:14 UTC\" \"2018-05-15 13:12:29 UTC\" #>  [771] \"2018-05-15 13:12:44 UTC\" \"2018-05-15 13:12:59 UTC\" #>  [773] \"2018-05-15 13:13:14 UTC\" \"2018-05-15 13:13:29 UTC\" #>  [775] \"2018-05-15 13:13:44 UTC\" \"2018-05-15 13:13:59 UTC\" #>  [777] \"2018-05-15 13:14:14 UTC\" \"2018-05-15 13:14:29 UTC\" #>  [779] \"2018-05-15 13:14:44 UTC\" \"2018-05-15 13:14:59 UTC\" #>  [781] \"2018-05-15 13:15:14 UTC\" \"2018-05-15 13:15:29 UTC\" #>  [783] \"2018-05-15 13:15:44 UTC\" \"2018-05-15 13:15:59 UTC\" #>  [785] \"2018-05-15 13:16:14 UTC\" \"2018-05-15 13:16:29 UTC\" #>  [787] \"2018-05-15 13:16:44 UTC\" \"2018-05-15 13:16:59 UTC\" #>  [789] \"2018-05-15 13:17:14 UTC\" \"2018-05-15 13:17:29 UTC\" #>  [791] \"2018-05-15 13:17:44 UTC\" \"2018-05-15 13:17:59 UTC\" #>  [793] \"2018-05-15 13:18:14 UTC\" \"2018-05-15 13:18:29 UTC\" #>  [795] \"2018-05-15 13:18:44 UTC\" \"2018-05-15 13:18:59 UTC\" #>  [797] \"2018-05-15 13:19:14 UTC\" \"2018-05-15 13:19:29 UTC\" #>  [799] \"2018-05-15 13:19:44 UTC\" \"2018-05-15 13:19:59 UTC\" #>  [801] \"2018-05-15 13:20:14 UTC\" \"2018-05-15 13:20:29 UTC\" #>  [803] \"2018-05-15 13:20:44 UTC\" \"2018-05-15 13:20:59 UTC\" #>  [805] \"2018-05-15 13:21:14 UTC\" \"2018-05-15 13:21:29 UTC\" #>  [807] \"2018-05-15 13:21:44 UTC\" \"2018-05-15 13:21:59 UTC\" #>  [809] \"2018-05-15 13:22:14 UTC\" \"2018-05-15 13:22:29 UTC\" #>  [811] \"2018-05-15 13:22:44 UTC\" \"2018-05-15 13:22:59 UTC\" #>  [813] \"2018-05-15 13:23:14 UTC\" \"2018-05-15 13:23:29 UTC\" #>  [815] \"2018-05-15 13:23:44 UTC\" \"2018-05-15 13:23:59 UTC\" #>  [817] \"2018-05-15 13:24:14 UTC\" \"2018-05-15 13:24:29 UTC\" #>  [819] \"2018-05-15 13:24:44 UTC\" \"2018-05-15 13:24:59 UTC\" #>  [821] \"2018-05-15 13:25:14 UTC\" \"2018-05-15 13:25:29 UTC\" #>  [823] \"2018-05-15 13:25:44 UTC\" \"2018-05-15 13:25:59 UTC\" #>  [825] \"2018-05-15 13:26:14 UTC\" \"2018-05-15 13:26:29 UTC\" #>  [827] \"2018-05-15 13:26:44 UTC\" \"2018-05-15 13:26:59 UTC\" #>  [829] \"2018-05-15 13:27:14 UTC\" \"2018-05-15 13:27:29 UTC\" #>  [831] \"2018-05-15 13:27:44 UTC\" \"2018-05-15 13:27:59 UTC\" #>  [833] \"2018-05-15 13:28:14 UTC\" \"2018-05-15 13:28:29 UTC\" #>  [835] \"2018-05-15 13:28:44 UTC\" \"2018-05-15 13:28:59 UTC\" #>  [837] \"2018-05-15 13:29:14 UTC\" \"2018-05-15 13:29:29 UTC\" #>  [839] \"2018-05-15 13:29:44 UTC\" \"2018-05-15 13:29:59 UTC\" #>  [841] \"2018-05-15 13:30:14 UTC\" \"2018-05-15 13:30:29 UTC\" #>  [843] \"2018-05-15 13:30:44 UTC\" \"2018-05-15 13:30:59 UTC\" #>  [845] \"2018-05-15 13:31:14 UTC\" \"2018-05-15 13:31:29 UTC\" #>  [847] \"2018-05-15 13:31:44 UTC\" \"2018-05-15 13:31:59 UTC\" #>  [849] \"2018-05-15 13:32:14 UTC\" \"2018-05-15 13:32:29 UTC\" #>  [851] \"2018-05-15 13:32:44 UTC\" \"2018-05-15 13:32:59 UTC\" #>  [853] \"2018-05-15 13:33:14 UTC\" \"2018-05-15 13:33:29 UTC\" #>  [855] \"2018-05-15 13:33:44 UTC\" \"2018-05-15 13:33:59 UTC\" #>  [857] \"2018-05-15 13:34:14 UTC\" \"2018-05-15 13:34:29 UTC\" #>  [859] \"2018-05-15 13:34:44 UTC\" \"2018-05-15 13:34:59 UTC\" #>  [861] \"2018-05-15 13:35:14 UTC\" \"2018-05-15 13:35:29 UTC\" #>  [863] \"2018-05-15 13:35:44 UTC\" \"2018-05-15 13:35:59 UTC\" #>  [865] \"2018-05-15 13:36:14 UTC\" \"2018-05-15 13:36:29 UTC\" #>  [867] \"2018-05-15 13:36:44 UTC\" \"2018-05-15 13:36:59 UTC\" #>  [869] \"2018-05-15 13:37:14 UTC\" \"2018-05-15 13:37:29 UTC\" #>  [871] \"2018-05-15 13:37:44 UTC\" \"2018-05-15 13:37:59 UTC\" #>  [873] \"2018-05-15 13:38:14 UTC\" \"2018-05-15 13:38:29 UTC\" #>  [875] \"2018-05-15 13:38:44 UTC\" \"2018-05-15 13:38:59 UTC\" #>  [877] \"2018-05-15 13:39:14 UTC\" \"2018-05-15 13:39:29 UTC\" #>  [879] \"2018-05-15 13:39:44 UTC\" \"2018-05-15 13:39:59 UTC\" #>  [881] \"2018-05-15 13:40:14 UTC\" \"2018-05-15 13:40:29 UTC\" #>  [883] \"2018-05-15 13:40:44 UTC\" \"2018-05-15 13:40:59 UTC\" #>  [885] \"2018-05-15 13:41:14 UTC\" \"2018-05-15 13:41:29 UTC\" #>  [887] \"2018-05-15 13:41:44 UTC\" \"2018-05-15 13:41:59 UTC\" #>  [889] \"2018-05-15 13:42:14 UTC\" \"2018-05-15 13:42:29 UTC\" #>  [891] \"2018-05-15 13:42:44 UTC\" \"2018-05-15 13:42:59 UTC\" #>  [893] \"2018-05-15 13:43:14 UTC\" \"2018-05-15 13:43:29 UTC\" #>  [895] \"2018-05-15 13:43:44 UTC\" \"2018-05-15 13:43:59 UTC\" #>  [897] \"2018-05-15 13:44:14 UTC\" \"2018-05-15 13:44:29 UTC\" #>  [899] \"2018-05-15 13:44:44 UTC\" \"2018-05-15 13:44:59 UTC\" #>  [901] \"2018-05-15 13:45:14 UTC\" \"2018-05-15 13:45:29 UTC\" #>  [903] \"2018-05-15 13:45:44 UTC\" \"2018-05-15 13:45:59 UTC\" #>  [905] \"2018-05-15 13:46:14 UTC\" \"2018-05-15 13:46:29 UTC\" #>  [907] \"2018-05-15 13:46:44 UTC\" \"2018-05-15 13:46:59 UTC\" #>  [909] \"2018-05-15 13:47:14 UTC\" \"2018-05-15 13:47:29 UTC\" #>  [911] \"2018-05-15 13:47:44 UTC\" \"2018-05-15 13:47:59 UTC\" #>  [913] \"2018-05-15 13:48:14 UTC\" \"2018-05-15 13:48:29 UTC\" #>  [915] \"2018-05-15 13:48:44 UTC\" \"2018-05-15 13:48:59 UTC\" #>  [917] \"2018-05-15 13:49:14 UTC\" \"2018-05-15 13:49:29 UTC\" #>  [919] \"2018-05-15 13:49:44 UTC\" \"2018-05-15 13:49:59 UTC\" #>  [921] \"2018-05-15 13:50:14 UTC\" \"2018-05-15 13:50:29 UTC\" #>  [923] \"2018-05-15 13:50:44 UTC\" \"2018-05-15 13:50:59 UTC\" #>  [925] \"2018-05-15 13:51:14 UTC\" \"2018-05-15 13:51:29 UTC\" #>  [927] \"2018-05-15 13:51:44 UTC\" \"2018-05-15 13:51:59 UTC\" #>  [929] \"2018-05-15 13:52:14 UTC\" \"2018-05-15 13:52:29 UTC\" #>  [931] \"2018-05-15 13:52:44 UTC\" \"2018-05-15 13:52:59 UTC\" #>  [933] \"2018-05-15 13:53:14 UTC\" \"2018-05-15 13:53:29 UTC\" #>  [935] \"2018-05-15 13:53:44 UTC\" \"2018-05-15 13:53:59 UTC\" #>  [937] \"2018-05-15 13:54:14 UTC\" \"2018-05-15 13:54:29 UTC\" #>  [939] \"2018-05-15 13:54:44 UTC\" \"2018-05-15 13:54:59 UTC\" #>  [941] \"2018-05-15 13:55:14 UTC\" \"2018-05-15 13:55:29 UTC\" #>  [943] \"2018-05-15 13:55:44 UTC\" \"2018-05-15 13:55:59 UTC\" #>  [945] \"2018-05-15 13:56:14 UTC\" \"2018-05-15 13:56:29 UTC\" #>  [947] \"2018-05-15 13:56:44 UTC\" \"2018-05-15 13:56:59 UTC\" #>  [949] \"2018-05-15 13:57:14 UTC\" \"2018-05-15 13:57:29 UTC\" #>  [951] \"2018-05-15 13:57:44 UTC\" \"2018-05-15 13:57:59 UTC\" #>  [953] \"2018-05-15 13:58:14 UTC\" \"2018-05-15 13:58:29 UTC\" #>  [955] \"2018-05-15 13:58:44 UTC\" \"2018-05-15 13:58:59 UTC\" #>  [957] \"2018-05-15 13:59:14 UTC\" \"2018-05-15 13:59:29 UTC\" #>  [959] \"2018-05-15 13:59:44 UTC\" \"2018-05-15 13:59:59 UTC\" #>  [961] \"2018-05-15 14:00:14 UTC\" \"2018-05-15 14:00:29 UTC\" #>  [963] \"2018-05-15 14:00:44 UTC\" \"2018-05-15 14:00:59 UTC\" #>  [965] \"2018-05-15 14:01:14 UTC\" \"2018-05-15 14:01:29 UTC\" #>  [967] \"2018-05-15 14:01:44 UTC\" \"2018-05-15 14:01:59 UTC\" #>  [969] \"2018-05-15 14:02:14 UTC\" \"2018-05-15 14:02:29 UTC\" #>  [971] \"2018-05-15 14:02:44 UTC\" \"2018-05-15 14:02:59 UTC\" #>  [973] \"2018-05-15 14:03:14 UTC\" \"2018-05-15 14:03:29 UTC\" #>  [975] \"2018-05-15 14:03:44 UTC\" \"2018-05-15 14:03:59 UTC\" #>  [977] \"2018-05-15 14:04:14 UTC\" \"2018-05-15 14:04:29 UTC\" #>  [979] \"2018-05-15 14:04:44 UTC\" \"2018-05-15 14:04:59 UTC\" #>  [981] \"2018-05-15 14:05:14 UTC\" \"2018-05-15 14:05:29 UTC\" #>  [983] \"2018-05-15 14:05:44 UTC\" \"2018-05-15 14:05:59 UTC\" #>  [985] \"2018-05-15 14:06:14 UTC\" \"2018-05-15 14:06:29 UTC\" #>  [987] \"2018-05-15 14:06:44 UTC\" \"2018-05-15 14:06:59 UTC\" #>  [989] \"2018-05-15 14:07:14 UTC\" \"2018-05-15 14:07:29 UTC\" #>  [991] \"2018-05-15 14:07:44 UTC\" \"2018-05-15 14:07:59 UTC\" #>  [993] \"2018-05-15 14:08:14 UTC\" \"2018-05-15 14:08:29 UTC\" #>  [995] \"2018-05-15 14:08:44 UTC\" \"2018-05-15 14:08:59 UTC\" #>  [997] \"2018-05-15 14:09:14 UTC\" \"2018-05-15 14:09:29 UTC\" #>  [999] \"2018-05-15 14:09:44 UTC\" \"2018-05-15 14:09:59 UTC\" #> [1001] \"2018-05-15 14:10:14 UTC\" \"2018-05-15 14:10:29 UTC\" #> [1003] \"2018-05-15 14:10:44 UTC\" \"2018-05-15 14:10:59 UTC\" #> [1005] \"2018-05-15 14:11:14 UTC\" \"2018-05-15 14:11:29 UTC\" #> [1007] \"2018-05-15 14:11:44 UTC\" \"2018-05-15 14:11:59 UTC\" #> [1009] \"2018-05-15 14:12:14 UTC\" \"2018-05-15 14:12:29 UTC\" #> [1011] \"2018-05-15 14:12:44 UTC\" \"2018-05-15 14:12:59 UTC\" #> [1013] \"2018-05-15 14:13:14 UTC\" \"2018-05-15 14:13:29 UTC\" #> [1015] \"2018-05-15 14:13:44 UTC\" \"2018-05-15 14:13:59 UTC\" #> [1017] \"2018-05-15 14:14:14 UTC\" \"2018-05-15 14:14:29 UTC\" #> [1019] \"2018-05-15 14:14:44 UTC\" \"2018-05-15 14:14:59 UTC\" #> [1021] \"2018-05-15 14:15:14 UTC\" \"2018-05-15 14:15:29 UTC\" #> [1023] \"2018-05-15 14:15:44 UTC\" \"2018-05-15 14:15:59 UTC\" #> [1025] \"2018-05-15 14:16:14 UTC\" \"2018-05-15 14:16:29 UTC\" #> [1027] \"2018-05-15 14:16:44 UTC\" \"2018-05-15 14:16:59 UTC\" #> [1029] \"2018-05-15 14:17:14 UTC\" \"2018-05-15 14:17:29 UTC\" #> [1031] \"2018-05-15 14:17:44 UTC\" \"2018-05-15 14:17:59 UTC\" #> [1033] \"2018-05-15 14:18:14 UTC\" \"2018-05-15 14:18:29 UTC\" #> [1035] \"2018-05-15 14:18:44 UTC\" \"2018-05-15 14:18:59 UTC\" #> [1037] \"2018-05-15 14:19:14 UTC\" \"2018-05-15 14:19:29 UTC\" #> [1039] \"2018-05-15 14:19:44 UTC\" \"2018-05-15 14:19:59 UTC\" #> [1041] \"2018-05-15 14:20:14 UTC\" \"2018-05-15 14:20:29 UTC\" #> [1043] \"2018-05-15 14:20:44 UTC\" \"2018-05-15 14:20:59 UTC\" #> [1045] \"2018-05-15 14:21:14 UTC\" \"2018-05-15 14:21:29 UTC\" #> [1047] \"2018-05-15 14:21:44 UTC\" \"2018-05-15 14:21:59 UTC\" #> [1049] \"2018-05-15 14:22:14 UTC\" \"2018-05-15 14:22:29 UTC\" #> [1051] \"2018-05-15 14:22:44 UTC\" \"2018-05-15 14:22:59 UTC\" #> [1053] \"2018-05-15 14:23:14 UTC\" \"2018-05-15 14:23:29 UTC\" #> [1055] \"2018-05-15 14:23:44 UTC\" \"2018-05-15 14:23:59 UTC\" #> [1057] \"2018-05-15 14:24:14 UTC\" \"2018-05-15 14:24:29 UTC\" #> [1059] \"2018-05-15 14:24:44 UTC\" \"2018-05-15 14:24:59 UTC\" #> [1061] \"2018-05-15 14:25:14 UTC\" \"2018-05-15 14:25:29 UTC\" #> [1063] \"2018-05-15 14:25:44 UTC\" \"2018-05-15 14:25:59 UTC\" #> [1065] \"2018-05-15 14:26:14 UTC\" \"2018-05-15 14:26:29 UTC\" #> [1067] \"2018-05-15 14:26:44 UTC\" \"2018-05-15 14:26:59 UTC\" #> [1069] \"2018-05-15 14:27:14 UTC\" \"2018-05-15 14:27:29 UTC\" #> [1071] \"2018-05-15 14:27:44 UTC\" \"2018-05-15 14:27:59 UTC\" #> [1073] \"2018-05-15 14:28:14 UTC\" \"2018-05-15 14:28:29 UTC\" #> [1075] \"2018-05-15 14:28:44 UTC\" \"2018-05-15 14:28:59 UTC\" #> [1077] \"2018-05-15 14:29:14 UTC\" \"2018-05-15 14:29:29 UTC\" #> [1079] \"2018-05-15 14:29:44 UTC\" \"2018-05-15 14:29:59 UTC\" #> [1081] \"2018-05-15 14:30:14 UTC\" \"2018-05-15 14:30:29 UTC\" #> [1083] \"2018-05-15 14:30:44 UTC\" \"2018-05-15 14:30:59 UTC\" #> [1085] \"2018-05-15 14:31:14 UTC\" \"2018-05-15 14:31:29 UTC\" #> [1087] \"2018-05-15 14:31:44 UTC\" \"2018-05-15 14:31:59 UTC\" #> [1089] \"2018-05-15 14:32:14 UTC\" \"2018-05-15 14:32:29 UTC\" #> [1091] \"2018-05-15 14:32:44 UTC\" \"2018-05-15 14:32:59 UTC\" #> [1093] \"2018-05-15 14:33:14 UTC\" \"2018-05-15 14:33:29 UTC\" #> [1095] \"2018-05-15 14:33:44 UTC\" \"2018-05-15 14:33:59 UTC\" #> [1097] \"2018-05-15 14:34:14 UTC\" \"2018-05-15 14:34:29 UTC\" #> [1099] \"2018-05-15 14:34:44 UTC\" \"2018-05-15 14:34:59 UTC\" #> [1101] \"2018-05-15 14:35:14 UTC\" \"2018-05-15 14:35:29 UTC\" #> [1103] \"2018-05-15 14:35:44 UTC\" \"2018-05-15 14:35:59 UTC\" #> [1105] \"2018-05-15 14:36:14 UTC\" \"2018-05-15 14:36:29 UTC\" #> [1107] \"2018-05-15 14:36:44 UTC\" \"2018-05-15 14:36:59 UTC\" #> [1109] \"2018-05-15 14:37:14 UTC\" \"2018-05-15 14:37:29 UTC\" #> [1111] \"2018-05-15 14:37:44 UTC\" \"2018-05-15 14:37:59 UTC\" #> [1113] \"2018-05-15 14:38:14 UTC\" \"2018-05-15 14:38:29 UTC\" #> [1115] \"2018-05-15 14:38:44 UTC\" \"2018-05-15 14:38:59 UTC\" #> [1117] \"2018-05-15 14:39:14 UTC\" \"2018-05-15 14:39:29 UTC\" #> [1119] \"2018-05-15 14:39:44 UTC\" \"2018-05-15 14:39:59 UTC\" #> [1121] \"2018-05-15 14:40:14 UTC\" \"2018-05-15 14:40:29 UTC\" #> [1123] \"2018-05-15 14:40:44 UTC\" \"2018-05-15 14:40:59 UTC\" #> [1125] \"2018-05-15 14:41:14 UTC\" \"2018-05-15 14:41:29 UTC\" #> [1127] \"2018-05-15 14:41:44 UTC\" \"2018-05-15 14:41:59 UTC\" #> [1129] \"2018-05-15 14:42:14 UTC\" \"2018-05-15 14:42:29 UTC\" #> [1131] \"2018-05-15 14:42:44 UTC\" \"2018-05-15 14:42:59 UTC\" #> [1133] \"2018-05-15 14:43:14 UTC\" \"2018-05-15 14:43:29 UTC\" #> [1135] \"2018-05-15 14:43:44 UTC\" \"2018-05-15 14:43:59 UTC\" #> [1137] \"2018-05-15 14:44:14 UTC\" \"2018-05-15 14:44:29 UTC\" #> [1139] \"2018-05-15 14:44:44 UTC\" \"2018-05-15 14:44:59 UTC\" #> [1141] \"2018-05-15 14:45:14 UTC\" \"2018-05-15 14:45:29 UTC\" #> [1143] \"2018-05-15 14:45:44 UTC\" \"2018-05-15 14:45:59 UTC\" #> [1145] \"2018-05-15 14:46:14 UTC\" \"2018-05-15 14:46:29 UTC\" #> [1147] \"2018-05-15 14:46:44 UTC\" \"2018-05-15 14:46:59 UTC\" #> [1149] \"2018-05-15 14:47:14 UTC\" \"2018-05-15 14:47:29 UTC\" #> [1151] \"2018-05-15 14:47:44 UTC\" \"2018-05-15 14:47:59 UTC\" #> [1153] \"2018-05-15 14:48:14 UTC\" \"2018-05-15 14:48:29 UTC\" #> [1155] \"2018-05-15 14:48:44 UTC\" \"2018-05-15 14:48:59 UTC\" #> [1157] \"2018-05-15 14:49:14 UTC\" \"2018-05-15 14:49:29 UTC\" #> [1159] \"2018-05-15 14:49:44 UTC\" \"2018-05-15 14:49:59 UTC\" #> [1161] \"2018-05-15 14:50:14 UTC\" \"2018-05-15 14:50:29 UTC\" #> [1163] \"2018-05-15 14:50:44 UTC\" \"2018-05-15 14:50:59 UTC\" #> [1165] \"2018-05-15 14:51:14 UTC\" \"2018-05-15 14:51:29 UTC\" #> [1167] \"2018-05-15 14:51:44 UTC\" \"2018-05-15 14:51:59 UTC\" #> [1169] \"2018-05-15 14:52:14 UTC\" \"2018-05-15 14:52:29 UTC\" #> [1171] \"2018-05-15 14:52:44 UTC\" \"2018-05-15 14:52:59 UTC\" #> [1173] \"2018-05-15 14:53:14 UTC\" \"2018-05-15 14:53:29 UTC\" #> [1175] \"2018-05-15 14:53:44 UTC\" \"2018-05-15 14:53:59 UTC\" #> [1177] \"2018-05-15 14:54:14 UTC\" \"2018-05-15 14:54:29 UTC\" #> [1179] \"2018-05-15 14:54:44 UTC\" \"2018-05-15 14:54:59 UTC\" #> [1181] \"2018-05-15 14:55:14 UTC\" \"2018-05-15 14:55:29 UTC\" #> [1183] \"2018-05-15 14:55:44 UTC\" \"2018-05-15 14:55:59 UTC\" #> [1185] \"2018-05-15 14:56:14 UTC\" \"2018-05-15 14:56:29 UTC\" #> [1187] \"2018-05-15 14:56:44 UTC\" \"2018-05-15 14:56:59 UTC\" #> [1189] \"2018-05-15 14:57:14 UTC\" \"2018-05-15 14:57:29 UTC\" #> [1191] \"2018-05-15 14:57:44 UTC\" \"2018-05-15 14:57:59 UTC\" #> [1193] \"2018-05-15 14:58:14 UTC\" \"2018-05-15 14:58:29 UTC\" #> [1195] \"2018-05-15 14:58:44 UTC\" \"2018-05-15 14:58:59 UTC\" #> [1197] \"2018-05-15 14:59:14 UTC\" \"2018-05-15 14:59:29 UTC\" #> [1199] \"2018-05-15 14:59:44 UTC\" \"2018-05-15 14:59:59 UTC\" #> [1201] \"2018-05-15 15:00:14 UTC\" \"2018-05-15 15:00:29 UTC\" #> [1203] \"2018-05-15 15:00:44 UTC\" \"2018-05-15 15:00:59 UTC\" #> [1205] \"2018-05-15 15:01:14 UTC\" \"2018-05-15 15:01:29 UTC\" #> [1207] \"2018-05-15 15:01:44 UTC\" \"2018-05-15 15:01:59 UTC\" #> [1209] \"2018-05-15 15:02:14 UTC\" \"2018-05-15 15:02:29 UTC\" #> [1211] \"2018-05-15 15:02:44 UTC\" \"2018-05-15 15:02:59 UTC\" #> [1213] \"2018-05-15 15:03:14 UTC\" \"2018-05-15 15:03:29 UTC\" #> [1215] \"2018-05-15 15:03:44 UTC\" \"2018-05-15 15:03:59 UTC\" #> [1217] \"2018-05-15 15:04:14 UTC\" \"2018-05-15 15:04:29 UTC\" #> [1219] \"2018-05-15 15:04:44 UTC\" \"2018-05-15 15:04:59 UTC\" #> [1221] \"2018-05-15 15:05:14 UTC\" \"2018-05-15 15:05:29 UTC\" #> [1223] \"2018-05-15 15:05:44 UTC\" \"2018-05-15 15:05:59 UTC\" #> [1225] \"2018-05-15 15:06:14 UTC\" \"2018-05-15 15:06:29 UTC\" #> [1227] \"2018-05-15 15:06:44 UTC\" \"2018-05-15 15:06:59 UTC\" #> [1229] \"2018-05-15 15:07:14 UTC\" \"2018-05-15 15:07:29 UTC\" #> [1231] \"2018-05-15 15:07:44 UTC\" \"2018-05-15 15:07:59 UTC\" #> [1233] \"2018-05-15 15:08:14 UTC\" \"2018-05-15 15:08:29 UTC\" #> [1235] \"2018-05-15 15:08:44 UTC\" \"2018-05-15 15:08:59 UTC\" #> [1237] \"2018-05-15 15:09:14 UTC\" \"2018-05-15 15:09:29 UTC\" #> [1239] \"2018-05-15 15:09:44 UTC\" \"2018-05-15 15:09:59 UTC\" #> [1241] \"2018-05-15 15:10:14 UTC\" \"2018-05-15 15:10:29 UTC\" #> [1243] \"2018-05-15 15:10:44 UTC\" \"2018-05-15 15:10:59 UTC\" #> [1245] \"2018-05-15 15:11:14 UTC\" \"2018-05-15 15:11:29 UTC\" #> [1247] \"2018-05-15 15:11:44 UTC\" \"2018-05-15 15:11:59 UTC\" #> [1249] \"2018-05-15 15:12:14 UTC\" \"2018-05-15 15:12:29 UTC\" #> [1251] \"2018-05-15 15:12:44 UTC\" \"2018-05-15 15:12:59 UTC\" #> [1253] \"2018-05-15 15:13:14 UTC\" \"2018-05-15 15:13:29 UTC\" #> [1255] \"2018-05-15 15:13:44 UTC\" \"2018-05-15 15:13:59 UTC\" #> [1257] \"2018-05-15 15:14:14 UTC\" \"2018-05-15 15:14:29 UTC\" #> [1259] \"2018-05-15 15:14:44 UTC\" \"2018-05-15 15:14:59 UTC\" #> [1261] \"2018-05-15 15:15:14 UTC\" \"2018-05-15 15:15:29 UTC\" #> [1263] \"2018-05-15 15:15:44 UTC\" \"2018-05-15 15:15:59 UTC\" #> [1265] \"2018-05-15 15:16:14 UTC\" \"2018-05-15 15:16:29 UTC\" #> [1267] \"2018-05-15 15:16:44 UTC\" \"2018-05-15 15:16:59 UTC\" #> [1269] \"2018-05-15 15:17:14 UTC\" \"2018-05-15 15:17:29 UTC\" #> [1271] \"2018-05-15 15:17:44 UTC\" \"2018-05-15 15:17:59 UTC\" #> [1273] \"2018-05-15 15:18:14 UTC\" \"2018-05-15 15:18:29 UTC\" #> [1275] \"2018-05-15 15:18:44 UTC\" \"2018-05-15 15:18:59 UTC\" #> [1277] \"2018-05-15 15:19:14 UTC\" \"2018-05-15 15:19:29 UTC\" #> [1279] \"2018-05-15 15:19:44 UTC\" \"2018-05-15 15:19:59 UTC\" #> [1281] \"2018-05-15 15:20:14 UTC\" \"2018-05-15 15:20:29 UTC\" #> [1283] \"2018-05-15 15:20:44 UTC\" \"2018-05-15 15:20:59 UTC\" #> [1285] \"2018-05-15 15:21:14 UTC\" \"2018-05-15 15:21:29 UTC\" #> [1287] \"2018-05-15 15:21:44 UTC\" \"2018-05-15 15:21:59 UTC\" #> [1289] \"2018-05-15 15:22:14 UTC\" \"2018-05-15 15:22:29 UTC\" #> [1291] \"2018-05-15 15:22:44 UTC\" \"2018-05-15 15:22:59 UTC\" #> [1293] \"2018-05-15 15:23:14 UTC\" \"2018-05-15 15:23:29 UTC\" #> [1295] \"2018-05-15 15:23:44 UTC\" \"2018-05-15 15:23:59 UTC\" #> [1297] \"2018-05-15 15:24:14 UTC\" \"2018-05-15 15:24:29 UTC\" #> [1299] \"2018-05-15 15:24:44 UTC\" \"2018-05-15 15:24:59 UTC\" #> [1301] \"2018-05-15 15:25:14 UTC\" \"2018-05-15 15:25:29 UTC\" #> [1303] \"2018-05-15 15:25:44 UTC\" \"2018-05-15 15:25:59 UTC\" #> [1305] \"2018-05-15 15:26:14 UTC\" \"2018-05-15 15:26:29 UTC\" #> [1307] \"2018-05-15 15:26:44 UTC\" \"2018-05-15 15:26:59 UTC\" #> [1309] \"2018-05-15 15:27:14 UTC\" \"2018-05-15 15:27:29 UTC\" #> [1311] \"2018-05-15 15:27:44 UTC\" \"2018-05-15 15:27:59 UTC\" #> [1313] \"2018-05-15 15:28:14 UTC\" \"2018-05-15 15:28:29 UTC\" #> [1315] \"2018-05-15 15:28:44 UTC\" \"2018-05-15 15:28:59 UTC\" #> [1317] \"2018-05-15 15:29:14 UTC\" \"2018-05-15 15:29:29 UTC\" #> [1319] \"2018-05-15 15:29:44 UTC\" \"2018-05-15 15:29:59 UTC\" #> [1321] \"2018-05-15 15:30:14 UTC\" \"2018-05-15 15:30:29 UTC\" #> [1323] \"2018-05-15 15:30:44 UTC\" \"2018-05-15 15:30:59 UTC\" #> [1325] \"2018-05-15 15:31:14 UTC\" \"2018-05-15 15:31:29 UTC\" #> [1327] \"2018-05-15 15:31:44 UTC\" \"2018-05-15 15:31:59 UTC\" #> [1329] \"2018-05-15 15:32:14 UTC\" \"2018-05-15 15:32:29 UTC\" #> [1331] \"2018-05-15 15:32:44 UTC\" \"2018-05-15 15:32:59 UTC\" #> [1333] \"2018-05-15 15:33:14 UTC\" \"2018-05-15 15:33:29 UTC\" #> [1335] \"2018-05-15 15:33:44 UTC\" \"2018-05-15 15:33:59 UTC\" #> [1337] \"2018-05-15 15:34:14 UTC\" \"2018-05-15 15:34:29 UTC\" #> [1339] \"2018-05-15 15:34:44 UTC\" \"2018-05-15 15:34:59 UTC\" #> [1341] \"2018-05-15 15:35:14 UTC\" \"2018-05-15 15:35:29 UTC\" #> [1343] \"2018-05-15 15:35:44 UTC\" \"2018-05-15 15:35:59 UTC\" #> [1345] \"2018-05-15 15:36:14 UTC\" \"2018-05-15 15:36:29 UTC\" #> [1347] \"2018-05-15 15:36:44 UTC\" \"2018-05-15 15:36:59 UTC\" #> [1349] \"2018-05-15 15:37:14 UTC\" \"2018-05-15 15:37:29 UTC\" #> [1351] \"2018-05-15 15:37:44 UTC\" \"2018-05-15 15:37:59 UTC\" #> [1353] \"2018-05-15 15:38:14 UTC\" \"2018-05-15 15:38:29 UTC\" #> [1355] \"2018-05-15 15:38:44 UTC\" \"2018-05-15 15:38:59 UTC\" #> [1357] \"2018-05-15 15:39:14 UTC\" \"2018-05-15 15:39:29 UTC\" #> [1359] \"2018-05-15 15:39:44 UTC\" \"2018-05-15 15:39:59 UTC\" #> [1361] \"2018-05-15 15:40:14 UTC\" \"2018-05-15 15:40:29 UTC\" #> [1363] \"2018-05-15 15:40:44 UTC\" \"2018-05-15 15:40:59 UTC\" #> [1365] \"2018-05-15 15:41:14 UTC\" \"2018-05-15 15:41:29 UTC\" #> [1367] \"2018-05-15 15:41:44 UTC\" \"2018-05-15 15:41:59 UTC\" #> [1369] \"2018-05-15 15:42:14 UTC\" \"2018-05-15 15:42:29 UTC\" #> [1371] \"2018-05-15 15:42:44 UTC\" \"2018-05-15 15:42:59 UTC\" #> [1373] \"2018-05-15 15:43:14 UTC\" \"2018-05-15 15:43:29 UTC\" #> [1375] \"2018-05-15 15:43:44 UTC\" \"2018-05-15 15:43:59 UTC\" #> [1377] \"2018-05-15 15:44:14 UTC\" \"2018-05-15 15:44:29 UTC\" #> [1379] \"2018-05-15 15:44:44 UTC\" \"2018-05-15 15:44:59 UTC\" #> [1381] \"2018-05-15 15:45:14 UTC\" \"2018-05-15 15:45:29 UTC\" #> [1383] \"2018-05-15 15:45:44 UTC\" \"2018-05-15 15:45:59 UTC\" #> [1385] \"2018-05-15 15:46:14 UTC\" \"2018-05-15 15:46:29 UTC\" #> [1387] \"2018-05-15 15:46:44 UTC\" \"2018-05-15 15:46:59 UTC\" #> [1389] \"2018-05-15 15:47:14 UTC\" \"2018-05-15 15:47:29 UTC\" #> [1391] \"2018-05-15 15:47:44 UTC\" \"2018-05-15 15:47:59 UTC\" #> [1393] \"2018-05-15 15:48:14 UTC\" \"2018-05-15 15:48:29 UTC\" #> [1395] \"2018-05-15 15:48:44 UTC\" \"2018-05-15 15:48:59 UTC\" #> [1397] \"2018-05-15 15:49:14 UTC\" \"2018-05-15 15:49:29 UTC\" #> [1399] \"2018-05-15 15:49:44 UTC\" \"2018-05-15 15:49:59 UTC\" #> [1401] \"2018-05-15 15:50:14 UTC\" \"2018-05-15 15:50:29 UTC\" #> [1403] \"2018-05-15 15:50:44 UTC\" \"2018-05-15 15:50:59 UTC\" #> [1405] \"2018-05-15 15:51:14 UTC\" \"2018-05-15 15:51:29 UTC\" #> [1407] \"2018-05-15 15:51:44 UTC\" \"2018-05-15 15:51:59 UTC\" #> [1409] \"2018-05-15 15:52:14 UTC\" \"2018-05-15 15:52:29 UTC\" #> [1411] \"2018-05-15 15:52:44 UTC\" \"2018-05-15 15:52:59 UTC\" #> [1413] \"2018-05-15 15:53:14 UTC\" \"2018-05-15 15:53:29 UTC\" #> [1415] \"2018-05-15 15:53:44 UTC\" \"2018-05-15 15:53:59 UTC\" #> [1417] \"2018-05-15 15:54:14 UTC\" \"2018-05-15 15:54:29 UTC\" #> [1419] \"2018-05-15 15:54:44 UTC\" \"2018-05-15 15:54:59 UTC\" #> [1421] \"2018-05-15 15:55:14 UTC\" \"2018-05-15 15:55:29 UTC\" #> [1423] \"2018-05-15 15:55:44 UTC\" \"2018-05-15 15:55:59 UTC\" #> [1425] \"2018-05-15 15:56:14 UTC\" \"2018-05-15 15:56:29 UTC\" #> [1427] \"2018-05-15 15:56:44 UTC\" \"2018-05-15 15:56:59 UTC\" #> [1429] \"2018-05-15 15:57:14 UTC\" \"2018-05-15 15:57:29 UTC\" #> [1431] \"2018-05-15 15:57:44 UTC\" \"2018-05-15 15:57:59 UTC\" #> [1433] \"2018-05-15 15:58:14 UTC\" \"2018-05-15 15:58:29 UTC\" #> [1435] \"2018-05-15 15:58:44 UTC\" \"2018-05-15 15:58:59 UTC\" #> [1437] \"2018-05-15 15:59:14 UTC\" \"2018-05-15 15:59:29 UTC\" #> [1439] \"2018-05-15 15:59:44 UTC\" \"2018-05-15 15:59:59 UTC\" #> [1441] \"2018-05-15 16:00:14 UTC\" \"2018-05-15 16:00:29 UTC\" #> [1443] \"2018-05-15 16:00:44 UTC\" \"2018-05-15 16:00:59 UTC\" #> [1445] \"2018-05-15 16:01:14 UTC\" \"2018-05-15 16:01:29 UTC\" #> [1447] \"2018-05-15 16:01:44 UTC\" \"2018-05-15 16:01:59 UTC\" #> [1449] \"2018-05-15 16:02:14 UTC\" \"2018-05-15 16:02:29 UTC\" #> [1451] \"2018-05-15 16:02:44 UTC\" \"2018-05-15 16:02:59 UTC\" #> [1453] \"2018-05-15 16:03:14 UTC\" \"2018-05-15 16:03:29 UTC\" #> [1455] \"2018-05-15 16:03:44 UTC\" \"2018-05-15 16:03:59 UTC\" #> [1457] \"2018-05-15 16:04:14 UTC\" \"2018-05-15 16:04:29 UTC\" #> [1459] \"2018-05-15 16:04:44 UTC\" \"2018-05-15 16:04:59 UTC\" #> [1461] \"2018-05-15 16:05:14 UTC\" \"2018-05-15 16:05:29 UTC\" #> [1463] \"2018-05-15 16:05:44 UTC\" \"2018-05-15 16:05:59 UTC\" #> [1465] \"2018-05-15 16:06:14 UTC\" \"2018-05-15 16:06:29 UTC\" #> [1467] \"2018-05-15 16:06:44 UTC\" \"2018-05-15 16:06:59 UTC\" #> [1469] \"2018-05-15 16:07:14 UTC\" \"2018-05-15 16:07:29 UTC\" #> [1471] \"2018-05-15 16:07:44 UTC\" \"2018-05-15 16:07:59 UTC\" #> [1473] \"2018-05-15 16:08:14 UTC\" \"2018-05-15 16:08:29 UTC\" #> [1475] \"2018-05-15 16:08:44 UTC\" \"2018-05-15 16:08:59 UTC\" #> [1477] \"2018-05-15 16:09:14 UTC\" \"2018-05-15 16:09:29 UTC\" #> [1479] \"2018-05-15 16:09:44 UTC\" \"2018-05-15 16:09:59 UTC\" #> [1481] \"2018-05-15 16:10:14 UTC\" \"2018-05-15 16:10:29 UTC\" #> [1483] \"2018-05-15 16:10:44 UTC\" \"2018-05-15 16:10:59 UTC\" #> [1485] \"2018-05-15 16:11:14 UTC\" \"2018-05-15 16:11:29 UTC\" #> [1487] \"2018-05-15 16:11:44 UTC\" \"2018-05-15 16:11:59 UTC\" #> [1489] \"2018-05-15 16:12:14 UTC\" \"2018-05-15 16:12:29 UTC\" #> [1491] \"2018-05-15 16:12:44 UTC\" \"2018-05-15 16:12:59 UTC\" #> [1493] \"2018-05-15 16:13:14 UTC\" \"2018-05-15 16:13:29 UTC\" #> [1495] \"2018-05-15 16:13:44 UTC\" \"2018-05-15 16:13:59 UTC\" #> [1497] \"2018-05-15 16:14:14 UTC\" \"2018-05-15 16:14:29 UTC\" #> [1499] \"2018-05-15 16:14:44 UTC\" \"2018-05-15 16:14:59 UTC\" #> [1501] \"2018-05-15 16:15:14 UTC\" \"2018-05-15 16:15:29 UTC\" #> [1503] \"2018-05-15 16:15:44 UTC\" \"2018-05-15 16:15:59 UTC\" #> [1505] \"2018-05-15 16:16:14 UTC\" \"2018-05-15 16:16:29 UTC\" #> [1507] \"2018-05-15 16:16:44 UTC\" \"2018-05-15 16:16:59 UTC\" #> [1509] \"2018-05-15 16:17:14 UTC\" \"2018-05-15 16:17:29 UTC\" #> [1511] \"2018-05-15 16:17:44 UTC\" \"2018-05-15 16:17:59 UTC\" #> [1513] \"2018-05-15 16:18:14 UTC\" \"2018-05-15 16:18:29 UTC\" #> [1515] \"2018-05-15 16:18:44 UTC\" \"2018-05-15 16:18:59 UTC\" #> [1517] \"2018-05-15 16:19:14 UTC\" \"2018-05-15 16:19:29 UTC\" #> [1519] \"2018-05-15 16:19:44 UTC\" \"2018-05-15 16:19:59 UTC\" #> [1521] \"2018-05-15 16:20:14 UTC\" \"2018-05-15 16:20:29 UTC\" #> [1523] \"2018-05-15 16:20:44 UTC\" \"2018-05-15 16:20:59 UTC\" #> [1525] \"2018-05-15 16:21:14 UTC\" \"2018-05-15 16:21:29 UTC\" #> [1527] \"2018-05-15 16:21:44 UTC\" \"2018-05-15 16:21:59 UTC\" #> [1529] \"2018-05-15 16:22:14 UTC\" \"2018-05-15 16:22:29 UTC\" #> [1531] \"2018-05-15 16:22:44 UTC\" \"2018-05-15 16:22:59 UTC\" #> [1533] \"2018-05-15 16:23:14 UTC\" \"2018-05-15 16:23:29 UTC\" #> [1535] \"2018-05-15 16:23:44 UTC\" \"2018-05-15 16:23:59 UTC\" #> [1537] \"2018-05-15 16:24:14 UTC\" \"2018-05-15 16:24:29 UTC\" #> [1539] \"2018-05-15 16:24:44 UTC\" \"2018-05-15 16:24:59 UTC\" #> [1541] \"2018-05-15 16:25:14 UTC\" \"2018-05-15 16:25:29 UTC\" #> [1543] \"2018-05-15 16:25:44 UTC\" \"2018-05-15 16:25:59 UTC\" #> [1545] \"2018-05-15 16:26:14 UTC\" \"2018-05-15 16:26:29 UTC\" #> [1547] \"2018-05-15 16:26:44 UTC\" \"2018-05-15 16:26:59 UTC\" #> [1549] \"2018-05-15 16:27:14 UTC\" \"2018-05-15 16:27:29 UTC\" #> [1551] \"2018-05-15 16:27:44 UTC\" \"2018-05-15 16:27:59 UTC\" #> [1553] \"2018-05-15 16:28:14 UTC\" \"2018-05-15 16:28:29 UTC\" #> [1555] \"2018-05-15 16:28:44 UTC\" \"2018-05-15 16:28:59 UTC\" #> [1557] \"2018-05-15 16:29:14 UTC\" \"2018-05-15 16:29:29 UTC\" #> [1559] \"2018-05-15 16:29:44 UTC\" \"2018-05-15 16:29:59 UTC\" #> [1561] \"2018-05-15 16:30:14 UTC\" \"2018-05-15 16:30:29 UTC\" #> [1563] \"2018-05-15 16:30:44 UTC\" \"2018-05-15 16:30:59 UTC\" #> [1565] \"2018-05-15 16:31:14 UTC\" \"2018-05-15 16:31:29 UTC\" #> [1567] \"2018-05-15 16:31:44 UTC\" \"2018-05-15 16:31:59 UTC\" #> [1569] \"2018-05-15 16:32:14 UTC\" \"2018-05-15 16:32:29 UTC\" #> [1571] \"2018-05-15 16:32:44 UTC\" \"2018-05-15 16:32:59 UTC\" #> [1573] \"2018-05-15 16:33:14 UTC\" \"2018-05-15 16:33:29 UTC\" #> [1575] \"2018-05-15 16:33:44 UTC\" \"2018-05-15 16:33:59 UTC\" #> [1577] \"2018-05-15 16:34:14 UTC\" \"2018-05-15 16:34:29 UTC\" #> [1579] \"2018-05-15 16:34:44 UTC\" \"2018-05-15 16:34:59 UTC\" #> [1581] \"2018-05-15 16:35:14 UTC\" \"2018-05-15 16:35:29 UTC\" #> [1583] \"2018-05-15 16:35:44 UTC\" \"2018-05-15 16:35:59 UTC\" #> [1585] \"2018-05-15 16:36:14 UTC\" \"2018-05-15 16:36:29 UTC\" #> [1587] \"2018-05-15 16:36:44 UTC\" \"2018-05-15 16:36:59 UTC\" #> [1589] \"2018-05-15 16:37:14 UTC\" \"2018-05-15 16:37:29 UTC\" #> [1591] \"2018-05-15 16:37:44 UTC\" \"2018-05-15 16:37:59 UTC\" #> [1593] \"2018-05-15 16:38:14 UTC\" \"2018-05-15 16:38:29 UTC\" #> [1595] \"2018-05-15 16:38:44 UTC\" \"2018-05-15 16:38:59 UTC\" #> [1597] \"2018-05-15 16:39:14 UTC\" \"2018-05-15 16:39:29 UTC\" #> [1599] \"2018-05-15 16:39:44 UTC\" \"2018-05-15 16:39:59 UTC\" #> [1601] \"2018-05-15 16:40:14 UTC\" \"2018-05-15 16:40:29 UTC\" #> [1603] \"2018-05-15 16:40:44 UTC\" \"2018-05-15 16:40:59 UTC\" #> [1605] \"2018-05-15 16:41:14 UTC\" \"2018-05-15 16:41:29 UTC\" #> [1607] \"2018-05-15 16:41:44 UTC\" \"2018-05-15 16:41:59 UTC\" #> [1609] \"2018-05-15 16:42:14 UTC\" \"2018-05-15 16:42:29 UTC\" #> [1611] \"2018-05-15 16:42:44 UTC\" \"2018-05-15 16:42:59 UTC\" #> [1613] \"2018-05-15 16:43:14 UTC\" \"2018-05-15 16:43:29 UTC\" #> [1615] \"2018-05-15 16:43:44 UTC\" \"2018-05-15 16:43:59 UTC\" #> [1617] \"2018-05-15 16:44:14 UTC\" \"2018-05-15 16:44:29 UTC\" #> [1619] \"2018-05-15 16:44:44 UTC\" \"2018-05-15 16:44:59 UTC\" #> [1621] \"2018-05-15 16:45:14 UTC\" \"2018-05-15 16:45:29 UTC\" #> [1623] \"2018-05-15 16:45:44 UTC\" \"2018-05-15 16:45:59 UTC\" #> [1625] \"2018-05-15 16:46:14 UTC\" \"2018-05-15 16:46:29 UTC\" #> [1627] \"2018-05-15 16:46:44 UTC\" \"2018-05-15 16:46:59 UTC\" #> [1629] \"2018-05-15 16:47:14 UTC\" \"2018-05-15 16:47:29 UTC\" #> [1631] \"2018-05-15 16:47:44 UTC\" \"2018-05-15 16:47:59 UTC\" #> [1633] \"2018-05-15 16:48:14 UTC\" \"2018-05-15 16:48:29 UTC\" #> [1635] \"2018-05-15 16:48:44 UTC\" \"2018-05-15 16:48:59 UTC\" #> [1637] \"2018-05-15 16:49:14 UTC\" \"2018-05-15 16:49:29 UTC\" #> [1639] \"2018-05-15 16:49:44 UTC\" \"2018-05-15 16:49:59 UTC\" #> [1641] \"2018-05-15 16:50:14 UTC\" \"2018-05-15 16:50:29 UTC\" #> [1643] \"2018-05-15 16:50:44 UTC\" \"2018-05-15 16:50:59 UTC\" #> [1645] \"2018-05-15 16:51:14 UTC\" \"2018-05-15 16:51:29 UTC\" #> [1647] \"2018-05-15 16:51:44 UTC\" \"2018-05-15 16:51:59 UTC\" #> [1649] \"2018-05-15 16:52:14 UTC\" \"2018-05-15 16:52:29 UTC\" #> [1651] \"2018-05-15 16:52:44 UTC\" \"2018-05-15 16:52:59 UTC\" #> [1653] \"2018-05-15 16:53:14 UTC\" \"2018-05-15 16:53:29 UTC\" #> [1655] \"2018-05-15 16:53:44 UTC\" \"2018-05-15 16:53:59 UTC\" #> [1657] \"2018-05-15 16:54:14 UTC\" \"2018-05-15 16:54:29 UTC\" #> [1659] \"2018-05-15 16:54:44 UTC\" \"2018-05-15 16:54:59 UTC\" #> [1661] \"2018-05-15 16:55:14 UTC\" \"2018-05-15 16:55:29 UTC\" #> [1663] \"2018-05-15 16:55:44 UTC\" \"2018-05-15 16:55:59 UTC\" #> [1665] \"2018-05-15 16:56:14 UTC\" \"2018-05-15 16:56:29 UTC\" #> [1667] \"2018-05-15 16:56:44 UTC\" \"2018-05-15 16:56:59 UTC\" #> [1669] \"2018-05-15 16:57:14 UTC\" \"2018-05-15 16:57:29 UTC\" #> [1671] \"2018-05-15 16:57:44 UTC\" \"2018-05-15 16:57:59 UTC\" #> [1673] \"2018-05-15 16:58:14 UTC\" \"2018-05-15 16:58:29 UTC\" #> [1675] \"2018-05-15 16:58:44 UTC\" \"2018-05-15 16:58:59 UTC\" #> [1677] \"2018-05-15 16:59:14 UTC\" \"2018-05-15 16:59:29 UTC\" #> [1679] \"2018-05-15 16:59:44 UTC\" \"2018-05-15 16:59:59 UTC\" #> [1681] \"2018-05-15 17:00:14 UTC\" \"2018-05-15 17:00:29 UTC\" #> [1683] \"2018-05-15 17:00:44 UTC\" \"2018-05-15 17:00:59 UTC\" #> [1685] \"2018-05-15 17:01:14 UTC\" \"2018-05-15 17:01:29 UTC\" #> [1687] \"2018-05-15 17:01:44 UTC\" \"2018-05-15 17:01:59 UTC\" #> [1689] \"2018-05-15 17:02:14 UTC\" \"2018-05-15 17:02:29 UTC\" #> [1691] \"2018-05-15 17:02:44 UTC\" \"2018-05-15 17:02:59 UTC\" #> [1693] \"2018-05-15 17:03:14 UTC\" \"2018-05-15 17:03:29 UTC\" #> [1695] \"2018-05-15 17:03:44 UTC\" \"2018-05-15 17:03:59 UTC\" #> [1697] \"2018-05-15 17:04:14 UTC\" \"2018-05-15 17:04:29 UTC\" #> [1699] \"2018-05-15 17:04:44 UTC\" \"2018-05-15 17:04:59 UTC\" #> [1701] \"2018-05-15 17:05:14 UTC\" \"2018-05-15 17:05:29 UTC\" #> [1703] \"2018-05-15 17:05:44 UTC\" \"2018-05-15 17:05:59 UTC\" #> [1705] \"2018-05-15 17:06:14 UTC\" \"2018-05-15 17:06:29 UTC\" #> [1707] \"2018-05-15 17:06:44 UTC\" \"2018-05-15 17:06:59 UTC\" #> [1709] \"2018-05-15 17:07:14 UTC\" \"2018-05-15 17:07:29 UTC\" #> [1711] \"2018-05-15 17:07:44 UTC\" \"2018-05-15 17:07:59 UTC\" #> [1713] \"2018-05-15 17:08:14 UTC\" \"2018-05-15 17:08:29 UTC\" #> [1715] \"2018-05-15 17:08:44 UTC\" \"2018-05-15 17:08:59 UTC\" #> [1717] \"2018-05-15 17:09:14 UTC\" \"2018-05-15 17:09:29 UTC\" #> [1719] \"2018-05-15 17:09:44 UTC\" \"2018-05-15 17:09:59 UTC\" #> [1721] \"2018-05-15 17:10:14 UTC\" \"2018-05-15 17:10:29 UTC\" #> [1723] \"2018-05-15 17:10:44 UTC\" \"2018-05-15 17:10:59 UTC\" #> [1725] \"2018-05-15 17:11:14 UTC\" \"2018-05-15 17:11:29 UTC\" #> [1727] \"2018-05-15 17:11:44 UTC\" \"2018-05-15 17:11:59 UTC\" #> [1729] \"2018-05-15 17:12:14 UTC\" \"2018-05-15 17:12:29 UTC\" #> [1731] \"2018-05-15 17:12:44 UTC\" \"2018-05-15 17:12:59 UTC\" #> [1733] \"2018-05-15 17:13:14 UTC\" \"2018-05-15 17:13:29 UTC\" #> [1735] \"2018-05-15 17:13:44 UTC\" \"2018-05-15 17:13:59 UTC\" #> [1737] \"2018-05-15 17:14:14 UTC\" \"2018-05-15 17:14:29 UTC\" #> [1739] \"2018-05-15 17:14:44 UTC\" \"2018-05-15 17:14:59 UTC\" #> [1741] \"2018-05-15 17:15:14 UTC\" \"2018-05-15 17:15:29 UTC\" #> [1743] \"2018-05-15 17:15:44 UTC\" \"2018-05-15 17:15:59 UTC\" #> [1745] \"2018-05-15 17:16:14 UTC\" \"2018-05-15 17:16:29 UTC\" #> [1747] \"2018-05-15 17:16:44 UTC\" \"2018-05-15 17:16:59 UTC\" #> [1749] \"2018-05-15 17:17:14 UTC\" \"2018-05-15 17:17:29 UTC\" #> [1751] \"2018-05-15 17:17:44 UTC\" \"2018-05-15 17:17:59 UTC\" #> [1753] \"2018-05-15 17:18:14 UTC\" \"2018-05-15 17:18:29 UTC\" #> [1755] \"2018-05-15 17:18:44 UTC\" \"2018-05-15 17:18:59 UTC\" #> [1757] \"2018-05-15 17:19:14 UTC\" \"2018-05-15 17:19:29 UTC\" #> [1759] \"2018-05-15 17:19:44 UTC\" \"2018-05-15 17:19:59 UTC\" #> [1761] \"2018-05-15 17:20:14 UTC\" \"2018-05-15 17:20:29 UTC\" #> [1763] \"2018-05-15 17:20:44 UTC\" \"2018-05-15 17:20:59 UTC\" #> [1765] \"2018-05-15 17:21:14 UTC\" \"2018-05-15 17:21:29 UTC\" #> [1767] \"2018-05-15 17:21:44 UTC\" \"2018-05-15 17:21:59 UTC\" #> [1769] \"2018-05-15 17:22:14 UTC\" \"2018-05-15 17:22:29 UTC\" #> [1771] \"2018-05-15 17:22:44 UTC\" \"2018-05-15 17:22:59 UTC\" #> [1773] \"2018-05-15 17:23:14 UTC\" \"2018-05-15 17:23:29 UTC\" #> [1775] \"2018-05-15 17:23:44 UTC\" \"2018-05-15 17:23:59 UTC\" #> [1777] \"2018-05-15 17:24:14 UTC\" \"2018-05-15 17:24:29 UTC\" #> [1779] \"2018-05-15 17:24:44 UTC\" \"2018-05-15 17:24:59 UTC\" #> [1781] \"2018-05-15 17:25:14 UTC\" \"2018-05-15 17:25:29 UTC\" #> [1783] \"2018-05-15 17:25:44 UTC\" \"2018-05-15 17:25:59 UTC\" #> [1785] \"2018-05-15 17:26:14 UTC\" \"2018-05-15 17:26:29 UTC\" #> [1787] \"2018-05-15 17:26:44 UTC\" \"2018-05-15 17:26:59 UTC\" #> [1789] \"2018-05-15 17:27:14 UTC\" \"2018-05-15 17:27:29 UTC\" #> [1791] \"2018-05-15 17:27:44 UTC\" \"2018-05-15 17:27:59 UTC\" #> [1793] \"2018-05-15 17:28:14 UTC\" \"2018-05-15 17:28:29 UTC\" #> [1795] \"2018-05-15 17:28:44 UTC\" \"2018-05-15 17:28:59 UTC\" #> [1797] \"2018-05-15 17:29:14 UTC\" \"2018-05-15 17:29:29 UTC\" #> [1799] \"2018-05-15 17:29:44 UTC\" \"2018-05-15 17:29:59 UTC\" #> [1801] \"2018-05-15 17:30:14 UTC\" \"2018-05-15 17:30:29 UTC\" #> [1803] \"2018-05-15 17:30:44 UTC\" \"2018-05-15 17:30:59 UTC\" #> [1805] \"2018-05-15 17:31:14 UTC\" \"2018-05-15 17:31:29 UTC\" #> [1807] \"2018-05-15 17:31:44 UTC\" \"2018-05-15 17:31:59 UTC\" #> [1809] \"2018-05-15 17:32:14 UTC\" \"2018-05-15 17:32:29 UTC\" #> [1811] \"2018-05-15 17:32:44 UTC\" \"2018-05-15 17:32:59 UTC\" #> [1813] \"2018-05-15 17:33:14 UTC\" \"2018-05-15 17:33:29 UTC\" #> [1815] \"2018-05-15 17:33:44 UTC\" \"2018-05-15 17:33:59 UTC\" #> [1817] \"2018-05-15 17:34:14 UTC\" \"2018-05-15 17:34:29 UTC\" #> [1819] \"2018-05-15 17:34:44 UTC\" \"2018-05-15 17:34:59 UTC\" #> [1821] \"2018-05-15 17:35:14 UTC\" \"2018-05-15 17:35:29 UTC\" #> [1823] \"2018-05-15 17:35:44 UTC\" \"2018-05-15 17:35:59 UTC\" #> [1825] \"2018-05-15 17:36:14 UTC\" \"2018-05-15 17:36:29 UTC\" #> [1827] \"2018-05-15 17:36:44 UTC\" \"2018-05-15 17:36:59 UTC\" #> [1829] \"2018-05-15 17:37:14 UTC\" \"2018-05-15 17:37:29 UTC\" #> [1831] \"2018-05-15 17:37:44 UTC\" \"2018-05-15 17:37:59 UTC\" #> [1833] \"2018-05-15 17:38:14 UTC\" \"2018-05-15 17:38:29 UTC\" #> [1835] \"2018-05-15 17:38:44 UTC\" \"2018-05-15 17:38:59 UTC\" #> [1837] \"2018-05-15 17:39:14 UTC\" \"2018-05-15 17:39:29 UTC\" #> [1839] \"2018-05-15 17:39:44 UTC\" \"2018-05-15 17:39:59 UTC\" #> [1841] \"2018-05-15 17:40:14 UTC\" \"2018-05-15 17:40:29 UTC\" #> [1843] \"2018-05-15 17:40:44 UTC\" \"2018-05-15 17:40:59 UTC\" #> [1845] \"2018-05-15 17:41:14 UTC\" \"2018-05-15 17:41:29 UTC\" #> [1847] \"2018-05-15 17:41:44 UTC\" \"2018-05-15 17:41:59 UTC\" #> [1849] \"2018-05-15 17:42:14 UTC\" \"2018-05-15 17:42:29 UTC\" #> [1851] \"2018-05-15 17:42:44 UTC\" \"2018-05-15 17:42:59 UTC\" #> [1853] \"2018-05-15 17:43:14 UTC\" \"2018-05-15 17:43:29 UTC\" #> [1855] \"2018-05-15 17:43:44 UTC\" \"2018-05-15 17:43:59 UTC\" #> [1857] \"2018-05-15 17:44:14 UTC\" \"2018-05-15 17:44:29 UTC\" #> [1859] \"2018-05-15 17:44:44 UTC\" \"2018-05-15 17:44:59 UTC\" #> [1861] \"2018-05-15 17:45:14 UTC\" \"2018-05-15 17:45:29 UTC\" #> [1863] \"2018-05-15 17:45:44 UTC\" \"2018-05-15 17:45:59 UTC\" #> [1865] \"2018-05-15 17:46:14 UTC\" \"2018-05-15 17:46:29 UTC\" #> [1867] \"2018-05-15 17:46:44 UTC\" \"2018-05-15 17:46:59 UTC\" #> [1869] \"2018-05-15 17:47:14 UTC\" \"2018-05-15 17:47:29 UTC\" #> [1871] \"2018-05-15 17:47:44 UTC\" \"2018-05-15 17:47:59 UTC\" #> [1873] \"2018-05-15 17:48:14 UTC\" \"2018-05-15 17:48:29 UTC\" #> [1875] \"2018-05-15 17:48:44 UTC\" \"2018-05-15 17:48:59 UTC\" #> [1877] \"2018-05-15 17:49:14 UTC\" \"2018-05-15 17:49:29 UTC\" #> [1879] \"2018-05-15 17:49:44 UTC\" \"2018-05-15 17:49:59 UTC\" #> [1881] \"2018-05-15 17:50:14 UTC\" \"2018-05-15 17:50:29 UTC\" #> [1883] \"2018-05-15 17:50:44 UTC\" \"2018-05-15 17:50:59 UTC\" #> [1885] \"2018-05-15 17:51:14 UTC\" \"2018-05-15 17:51:29 UTC\" #> [1887] \"2018-05-15 17:51:44 UTC\" \"2018-05-15 17:51:59 UTC\" #> [1889] \"2018-05-15 17:52:14 UTC\" \"2018-05-15 17:52:29 UTC\" #> [1891] \"2018-05-15 17:52:44 UTC\" \"2018-05-15 17:52:59 UTC\" #> [1893] \"2018-05-15 17:53:14 UTC\" \"2018-05-15 17:53:29 UTC\" #> [1895] \"2018-05-15 17:53:44 UTC\" \"2018-05-15 17:53:59 UTC\" #> [1897] \"2018-05-15 17:54:14 UTC\" \"2018-05-15 17:54:29 UTC\" #> [1899] \"2018-05-15 17:54:44 UTC\" \"2018-05-15 17:54:59 UTC\" #> [1901] \"2018-05-15 17:55:14 UTC\" \"2018-05-15 17:55:29 UTC\" #> [1903] \"2018-05-15 17:55:44 UTC\" \"2018-05-15 17:55:59 UTC\" #> [1905] \"2018-05-15 17:56:14 UTC\" \"2018-05-15 17:56:29 UTC\" #> [1907] \"2018-05-15 17:56:44 UTC\" \"2018-05-15 17:56:59 UTC\" #> [1909] \"2018-05-15 17:57:14 UTC\" \"2018-05-15 17:57:29 UTC\" #> [1911] \"2018-05-15 17:57:44 UTC\" \"2018-05-15 17:57:59 UTC\" #> [1913] \"2018-05-15 17:58:14 UTC\" \"2018-05-15 17:58:29 UTC\" #> [1915] \"2018-05-15 17:58:44 UTC\" \"2018-05-15 17:58:59 UTC\" #> [1917] \"2018-05-15 17:59:14 UTC\" \"2018-05-15 17:59:29 UTC\" #> [1919] \"2018-05-15 17:59:44 UTC\" \"2018-05-15 17:59:59 UTC\" #> [1921] \"2018-05-15 18:00:14 UTC\" \"2018-05-15 18:00:29 UTC\" #> [1923] \"2018-05-15 18:00:44 UTC\" \"2018-05-15 18:00:59 UTC\" #> [1925] \"2018-05-15 18:01:14 UTC\" \"2018-05-15 18:01:29 UTC\" #> [1927] \"2018-05-15 18:01:44 UTC\" \"2018-05-15 18:01:59 UTC\" #> [1929] \"2018-05-15 18:02:14 UTC\" \"2018-05-15 18:02:29 UTC\" #> [1931] \"2018-05-15 18:02:44 UTC\" \"2018-05-15 18:02:59 UTC\" #> [1933] \"2018-05-15 18:03:14 UTC\" \"2018-05-15 18:03:29 UTC\" #> [1935] \"2018-05-15 18:03:44 UTC\" \"2018-05-15 18:03:59 UTC\" #> [1937] \"2018-05-15 18:04:14 UTC\" \"2018-05-15 18:04:29 UTC\" #> [1939] \"2018-05-15 18:04:44 UTC\" \"2018-05-15 18:04:59 UTC\" #> [1941] \"2018-05-15 18:05:14 UTC\" \"2018-05-15 18:05:29 UTC\" #> [1943] \"2018-05-15 18:05:44 UTC\" \"2018-05-15 18:05:59 UTC\" #> [1945] \"2018-05-15 18:06:14 UTC\" \"2018-05-15 18:06:29 UTC\" #> [1947] \"2018-05-15 18:06:44 UTC\" \"2018-05-15 18:06:59 UTC\" #> [1949] \"2018-05-15 18:07:14 UTC\" \"2018-05-15 18:07:29 UTC\" #> [1951] \"2018-05-15 18:07:44 UTC\" \"2018-05-15 18:07:59 UTC\" #> [1953] \"2018-05-15 18:08:14 UTC\" \"2018-05-15 18:08:29 UTC\" #> [1955] \"2018-05-15 18:08:44 UTC\" \"2018-05-15 18:08:59 UTC\" #> [1957] \"2018-05-15 18:09:14 UTC\" \"2018-05-15 18:09:29 UTC\" #> [1959] \"2018-05-15 18:09:44 UTC\" \"2018-05-15 18:09:59 UTC\" #> [1961] \"2018-05-15 18:10:14 UTC\" \"2018-05-15 18:10:29 UTC\" #> [1963] \"2018-05-15 18:10:44 UTC\" \"2018-05-15 18:10:59 UTC\" #> [1965] \"2018-05-15 18:11:14 UTC\" \"2018-05-15 18:11:29 UTC\" #> [1967] \"2018-05-15 18:11:44 UTC\" \"2018-05-15 18:11:59 UTC\" #> [1969] \"2018-05-15 18:12:14 UTC\" \"2018-05-15 18:12:29 UTC\" #> [1971] \"2018-05-15 18:12:44 UTC\" \"2018-05-15 18:12:59 UTC\" #> [1973] \"2018-05-15 18:13:14 UTC\" \"2018-05-15 18:13:29 UTC\" #> [1975] \"2018-05-15 18:13:44 UTC\" \"2018-05-15 18:13:59 UTC\" #> [1977] \"2018-05-15 18:14:14 UTC\" \"2018-05-15 18:14:29 UTC\" #> [1979] \"2018-05-15 18:14:44 UTC\" \"2018-05-15 18:14:59 UTC\" #> [1981] \"2018-05-15 18:15:14 UTC\" \"2018-05-15 18:15:29 UTC\" #> [1983] \"2018-05-15 18:15:44 UTC\" \"2018-05-15 18:15:59 UTC\" #> [1985] \"2018-05-15 18:16:14 UTC\" \"2018-05-15 18:16:29 UTC\" #> [1987] \"2018-05-15 18:16:44 UTC\" \"2018-05-15 18:16:59 UTC\" #> [1989] \"2018-05-15 18:17:14 UTC\" \"2018-05-15 18:17:29 UTC\" #> [1991] \"2018-05-15 18:17:44 UTC\" \"2018-05-15 18:17:59 UTC\" #> [1993] \"2018-05-15 18:18:14 UTC\" \"2018-05-15 18:18:29 UTC\" #> [1995] \"2018-05-15 18:18:44 UTC\" \"2018-05-15 18:18:59 UTC\" #> [1997] \"2018-05-15 18:19:14 UTC\" \"2018-05-15 18:19:29 UTC\" #> [1999] \"2018-05-15 18:19:44 UTC\" \"2018-05-15 18:19:59 UTC\" #> [2001] \"2018-05-15 18:20:14 UTC\" \"2018-05-15 18:20:29 UTC\" #> [2003] \"2018-05-15 18:20:44 UTC\" \"2018-05-15 18:20:59 UTC\" #> [2005] \"2018-05-15 18:21:14 UTC\" \"2018-05-15 18:21:29 UTC\" #> [2007] \"2018-05-15 18:21:44 UTC\" \"2018-05-15 18:21:59 UTC\" #> [2009] \"2018-05-15 18:22:14 UTC\" \"2018-05-15 18:22:29 UTC\" #> [2011] \"2018-05-15 18:22:44 UTC\" \"2018-05-15 18:22:59 UTC\" #> [2013] \"2018-05-15 18:23:14 UTC\" \"2018-05-15 18:23:29 UTC\" #> [2015] \"2018-05-15 18:23:44 UTC\" \"2018-05-15 18:23:59 UTC\" #> [2017] \"2018-05-15 18:24:14 UTC\" \"2018-05-15 18:24:29 UTC\" #> [2019] \"2018-05-15 18:24:44 UTC\" \"2018-05-15 18:24:59 UTC\" #> [2021] \"2018-05-15 18:25:14 UTC\" \"2018-05-15 18:25:29 UTC\" #> [2023] \"2018-05-15 18:25:44 UTC\" \"2018-05-15 18:25:59 UTC\" #> [2025] \"2018-05-15 18:26:14 UTC\" \"2018-05-15 18:26:29 UTC\" #> [2027] \"2018-05-15 18:26:44 UTC\" \"2018-05-15 18:26:59 UTC\" #> [2029] \"2018-05-15 18:27:14 UTC\" \"2018-05-15 18:27:29 UTC\" #> [2031] \"2018-05-15 18:27:44 UTC\" \"2018-05-15 18:27:59 UTC\" #> [2033] \"2018-05-15 18:28:14 UTC\" \"2018-05-15 18:28:29 UTC\" #> [2035] \"2018-05-15 18:28:44 UTC\" \"2018-05-15 18:28:59 UTC\" #> [2037] \"2018-05-15 18:29:14 UTC\" \"2018-05-15 18:29:29 UTC\" #> [2039] \"2018-05-15 18:29:44 UTC\" \"2018-05-15 18:29:59 UTC\" #> [2041] \"2018-05-15 18:30:14 UTC\" \"2018-05-15 18:30:29 UTC\" #> [2043] \"2018-05-15 18:30:44 UTC\" \"2018-05-15 18:30:59 UTC\" #> [2045] \"2018-05-15 18:31:14 UTC\" \"2018-05-15 18:31:29 UTC\" #> [2047] \"2018-05-15 18:31:44 UTC\" \"2018-05-15 18:31:59 UTC\" #> [2049] \"2018-05-15 18:32:14 UTC\" \"2018-05-15 18:32:29 UTC\" #> [2051] \"2018-05-15 18:32:44 UTC\" \"2018-05-15 18:32:59 UTC\" #> [2053] \"2018-05-15 18:33:14 UTC\" \"2018-05-15 18:33:29 UTC\" #> [2055] \"2018-05-15 18:33:44 UTC\" \"2018-05-15 18:33:59 UTC\" #> [2057] \"2018-05-15 18:34:14 UTC\" \"2018-05-15 18:34:29 UTC\" #> [2059] \"2018-05-15 18:34:44 UTC\" \"2018-05-15 18:34:59 UTC\" #> [2061] \"2018-05-15 18:35:14 UTC\" \"2018-05-15 18:35:29 UTC\" #> [2063] \"2018-05-15 18:35:44 UTC\" \"2018-05-15 18:35:59 UTC\" #> [2065] \"2018-05-15 18:36:14 UTC\" \"2018-05-15 18:36:29 UTC\" #> [2067] \"2018-05-15 18:36:44 UTC\" \"2018-05-15 18:36:59 UTC\" #> [2069] \"2018-05-15 18:37:14 UTC\" \"2018-05-15 18:37:29 UTC\" #> [2071] \"2018-05-15 18:37:44 UTC\" \"2018-05-15 18:37:59 UTC\" #> [2073] \"2018-05-15 18:38:14 UTC\" \"2018-05-15 18:38:29 UTC\" #> [2075] \"2018-05-15 18:38:44 UTC\" \"2018-05-15 18:38:59 UTC\" #> [2077] \"2018-05-15 18:39:14 UTC\" \"2018-05-15 18:39:29 UTC\" #> [2079] \"2018-05-15 18:39:44 UTC\" \"2018-05-15 18:39:59 UTC\" #> [2081] \"2018-05-15 18:40:14 UTC\" \"2018-05-15 18:40:29 UTC\" #> [2083] \"2018-05-15 18:40:44 UTC\" \"2018-05-15 18:40:59 UTC\" #> [2085] \"2018-05-15 18:41:14 UTC\" \"2018-05-15 18:41:29 UTC\" #> [2087] \"2018-05-15 18:41:44 UTC\" \"2018-05-15 18:41:59 UTC\" #> [2089] \"2018-05-15 18:42:14 UTC\" \"2018-05-15 18:42:29 UTC\" #> [2091] \"2018-05-15 18:42:44 UTC\" \"2018-05-15 18:42:59 UTC\" #> [2093] \"2018-05-15 18:43:14 UTC\" \"2018-05-15 18:43:29 UTC\" #> [2095] \"2018-05-15 18:43:44 UTC\" \"2018-05-15 18:43:59 UTC\" #> [2097] \"2018-05-15 18:44:14 UTC\" \"2018-05-15 18:44:29 UTC\" #> [2099] \"2018-05-15 18:44:44 UTC\" \"2018-05-15 18:44:59 UTC\" #> [2101] \"2018-05-15 18:45:14 UTC\" \"2018-05-15 18:45:29 UTC\" #> [2103] \"2018-05-15 18:45:44 UTC\" \"2018-05-15 18:45:59 UTC\" #> [2105] \"2018-05-15 18:46:14 UTC\" \"2018-05-15 18:46:29 UTC\" #> [2107] \"2018-05-15 18:46:44 UTC\" \"2018-05-15 18:46:59 UTC\" #> [2109] \"2018-05-15 18:47:14 UTC\" \"2018-05-15 18:47:29 UTC\" #> [2111] \"2018-05-15 18:47:44 UTC\" \"2018-05-15 18:47:59 UTC\" #> [2113] \"2018-05-15 18:48:14 UTC\" \"2018-05-15 18:48:29 UTC\" #> [2115] \"2018-05-15 18:48:44 UTC\" \"2018-05-15 18:48:59 UTC\" #> [2117] \"2018-05-15 18:49:14 UTC\" \"2018-05-15 18:49:29 UTC\" #> [2119] \"2018-05-15 18:49:44 UTC\" \"2018-05-15 18:49:59 UTC\" #> [2121] \"2018-05-15 18:50:14 UTC\" \"2018-05-15 18:50:29 UTC\" #> [2123] \"2018-05-15 18:50:44 UTC\" \"2018-05-15 18:50:59 UTC\" #> [2125] \"2018-05-15 18:51:14 UTC\" \"2018-05-15 18:51:29 UTC\" #> [2127] \"2018-05-15 18:51:44 UTC\" \"2018-05-15 18:51:59 UTC\" #> [2129] \"2018-05-15 18:52:14 UTC\" \"2018-05-15 18:52:29 UTC\" #> [2131] \"2018-05-15 18:52:44 UTC\" \"2018-05-15 18:52:59 UTC\" #> [2133] \"2018-05-15 18:53:14 UTC\" \"2018-05-15 18:53:29 UTC\" #> [2135] \"2018-05-15 18:53:44 UTC\" \"2018-05-15 18:53:59 UTC\" #> [2137] \"2018-05-15 18:54:14 UTC\" \"2018-05-15 18:54:29 UTC\" #> [2139] \"2018-05-15 18:54:44 UTC\" \"2018-05-15 18:54:59 UTC\" #> [2141] \"2018-05-15 18:55:14 UTC\" \"2018-05-15 18:55:29 UTC\" #> [2143] \"2018-05-15 18:55:44 UTC\" \"2018-05-15 18:55:59 UTC\" #> [2145] \"2018-05-15 18:56:14 UTC\" \"2018-05-15 18:56:29 UTC\" #> [2147] \"2018-05-15 18:56:44 UTC\" \"2018-05-15 18:56:59 UTC\" #> [2149] \"2018-05-15 18:57:14 UTC\" \"2018-05-15 18:57:29 UTC\" #> [2151] \"2018-05-15 18:57:44 UTC\" \"2018-05-15 18:57:59 UTC\" #> [2153] \"2018-05-15 18:58:14 UTC\" \"2018-05-15 18:58:29 UTC\" #> [2155] \"2018-05-15 18:58:44 UTC\" \"2018-05-15 18:58:59 UTC\" #> [2157] \"2018-05-15 18:59:14 UTC\" \"2018-05-15 18:59:29 UTC\" #> [2159] \"2018-05-15 18:59:44 UTC\" \"2018-05-15 18:59:59 UTC\" #> [2161] \"2018-05-15 19:00:14 UTC\" \"2018-05-15 19:00:29 UTC\" #> [2163] \"2018-05-15 19:00:44 UTC\" \"2018-05-15 19:00:59 UTC\" #> [2165] \"2018-05-15 19:01:14 UTC\" \"2018-05-15 19:01:29 UTC\" #> [2167] \"2018-05-15 19:01:44 UTC\" \"2018-05-15 19:01:59 UTC\" #> [2169] \"2018-05-15 19:02:14 UTC\" \"2018-05-15 19:02:29 UTC\" #> [2171] \"2018-05-15 19:02:44 UTC\" \"2018-05-15 19:02:59 UTC\" #> [2173] \"2018-05-15 19:03:14 UTC\" \"2018-05-15 19:03:29 UTC\" #> [2175] \"2018-05-15 19:03:44 UTC\" \"2018-05-15 19:03:59 UTC\" #> [2177] \"2018-05-15 19:04:14 UTC\" \"2018-05-15 19:04:29 UTC\" #> [2179] \"2018-05-15 19:04:44 UTC\" \"2018-05-15 19:04:59 UTC\" #> [2181] \"2018-05-15 19:05:14 UTC\" \"2018-05-15 19:05:29 UTC\" #> [2183] \"2018-05-15 19:05:44 UTC\" \"2018-05-15 19:05:59 UTC\" #> [2185] \"2018-05-15 19:06:14 UTC\" \"2018-05-15 19:06:29 UTC\" #> [2187] \"2018-05-15 19:06:44 UTC\" \"2018-05-15 19:06:59 UTC\" #> [2189] \"2018-05-15 19:07:14 UTC\" \"2018-05-15 19:07:29 UTC\" #> [2191] \"2018-05-15 19:07:44 UTC\" \"2018-05-15 19:07:59 UTC\" #> [2193] \"2018-05-15 19:08:14 UTC\" \"2018-05-15 19:08:29 UTC\" #> [2195] \"2018-05-15 19:08:44 UTC\" \"2018-05-15 19:08:59 UTC\" #> [2197] \"2018-05-15 19:09:14 UTC\" \"2018-05-15 19:09:29 UTC\" #> [2199] \"2018-05-15 19:09:44 UTC\" \"2018-05-15 19:09:59 UTC\" #> [2201] \"2018-05-15 19:10:14 UTC\" \"2018-05-15 19:10:29 UTC\" #> [2203] \"2018-05-15 19:10:44 UTC\" \"2018-05-15 19:10:59 UTC\" #> [2205] \"2018-05-15 19:11:14 UTC\" \"2018-05-15 19:11:29 UTC\" #> [2207] \"2018-05-15 19:11:44 UTC\" \"2018-05-15 19:11:59 UTC\" #> [2209] \"2018-05-15 19:12:14 UTC\" \"2018-05-15 19:12:29 UTC\" #> [2211] \"2018-05-15 19:12:44 UTC\" \"2018-05-15 19:12:59 UTC\" #> [2213] \"2018-05-15 19:13:14 UTC\" \"2018-05-15 19:13:29 UTC\" #> [2215] \"2018-05-15 19:13:44 UTC\" \"2018-05-15 19:13:59 UTC\" #> [2217] \"2018-05-15 19:14:14 UTC\" \"2018-05-15 19:14:29 UTC\" #> [2219] \"2018-05-15 19:14:44 UTC\" \"2018-05-15 19:14:59 UTC\" #> [2221] \"2018-05-15 19:15:14 UTC\" \"2018-05-15 19:15:29 UTC\" #> [2223] \"2018-05-15 19:15:44 UTC\" \"2018-05-15 19:15:59 UTC\" #> [2225] \"2018-05-15 19:16:14 UTC\" \"2018-05-15 19:16:29 UTC\" #> [2227] \"2018-05-15 19:16:44 UTC\" \"2018-05-15 19:16:59 UTC\" #> [2229] \"2018-05-15 19:17:14 UTC\" \"2018-05-15 19:17:29 UTC\" #> [2231] \"2018-05-15 19:17:44 UTC\" \"2018-05-15 19:17:59 UTC\" #> [2233] \"2018-05-15 19:18:14 UTC\" \"2018-05-15 19:18:29 UTC\" #> [2235] \"2018-05-15 19:18:44 UTC\" \"2018-05-15 19:18:59 UTC\" #> [2237] \"2018-05-15 19:19:14 UTC\" \"2018-05-15 19:19:29 UTC\" #> [2239] \"2018-05-15 19:19:44 UTC\" \"2018-05-15 19:19:59 UTC\" #> [2241] \"2018-05-15 19:20:14 UTC\" \"2018-05-15 19:20:29 UTC\" #> [2243] \"2018-05-15 19:20:44 UTC\" \"2018-05-15 19:20:59 UTC\" #> [2245] \"2018-05-15 19:21:14 UTC\" \"2018-05-15 19:21:29 UTC\" #> [2247] \"2018-05-15 19:21:44 UTC\" \"2018-05-15 19:21:59 UTC\" #> [2249] \"2018-05-15 19:22:14 UTC\" \"2018-05-15 19:22:29 UTC\" #> [2251] \"2018-05-15 19:22:44 UTC\" \"2018-05-15 19:22:59 UTC\" #> [2253] \"2018-05-15 19:23:14 UTC\" \"2018-05-15 19:23:29 UTC\" #> [2255] \"2018-05-15 19:23:44 UTC\" \"2018-05-15 19:23:59 UTC\" #> [2257] \"2018-05-15 19:24:14 UTC\" \"2018-05-15 19:24:29 UTC\" #> [2259] \"2018-05-15 19:24:44 UTC\" \"2018-05-15 19:24:59 UTC\" #> [2261] \"2018-05-15 19:25:14 UTC\" \"2018-05-15 19:25:29 UTC\" #> [2263] \"2018-05-15 19:25:44 UTC\" \"2018-05-15 19:25:59 UTC\" #> [2265] \"2018-05-15 19:26:14 UTC\" \"2018-05-15 19:26:29 UTC\" #> [2267] \"2018-05-15 19:26:44 UTC\" \"2018-05-15 19:26:59 UTC\" #> [2269] \"2018-05-15 19:27:14 UTC\" \"2018-05-15 19:27:29 UTC\" #> [2271] \"2018-05-15 19:27:44 UTC\" \"2018-05-15 19:27:59 UTC\" #> [2273] \"2018-05-15 19:28:14 UTC\" \"2018-05-15 19:28:29 UTC\" #> [2275] \"2018-05-15 19:28:44 UTC\" \"2018-05-15 19:28:59 UTC\" #> [2277] \"2018-05-15 19:29:14 UTC\" \"2018-05-15 19:29:29 UTC\" #> [2279] \"2018-05-15 19:29:44 UTC\" \"2018-05-15 19:29:59 UTC\" #> [2281] \"2018-05-15 19:30:14 UTC\" \"2018-05-15 19:30:29 UTC\" #> [2283] \"2018-05-15 19:30:44 UTC\" \"2018-05-15 19:30:59 UTC\" #> [2285] \"2018-05-15 19:31:14 UTC\" \"2018-05-15 19:31:29 UTC\" #> [2287] \"2018-05-15 19:31:44 UTC\" \"2018-05-15 19:31:59 UTC\" #> [2289] \"2018-05-15 19:32:14 UTC\" \"2018-05-15 19:32:29 UTC\" #> [2291] \"2018-05-15 19:32:44 UTC\" \"2018-05-15 19:32:59 UTC\" #> [2293] \"2018-05-15 19:33:14 UTC\" \"2018-05-15 19:33:29 UTC\" #> [2295] \"2018-05-15 19:33:44 UTC\" \"2018-05-15 19:33:59 UTC\" #> [2297] \"2018-05-15 19:34:14 UTC\" \"2018-05-15 19:34:29 UTC\" #> [2299] \"2018-05-15 19:34:44 UTC\""},{"path":"https://movevis.org/reference/animate_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"Animate frames — animate_frames","title":"Animate frames — animate_frames","text":"animate_frames creates animation moveVis frames computed frames_spatial, frames_graph join_frames.","code":""},{"path":"https://movevis.org/reference/animate_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animate frames — animate_frames","text":"","code":"animate_frames(   frames,   out_file,   fps = 25,   width = 700,   height = 700,   res = 100,   end_pause = 0,   display = TRUE,   overwrite = FALSE,   verbose = TRUE,   ... )"},{"path":"https://movevis.org/reference/animate_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Animate frames — animate_frames","text":"frames object class moveVis created frames_spatial. out_file character, output file path, e.g. \"/dir//file.mov\". file extension must correspond file format known available renderers running system. Use suggest_formats get vector suggested known file formats. fps numeric, number frames displayed per second. Default 2. width numeric, width output animation pixels. height numeric, height output animation pixels. res numeric, resolution output animation ppi. end_pause numeric, defining many seconds last frame animation hold add pause end animation. Default 0 seconds add pause. display logical, whether animation displayed rendering . overwrite logical, wether overwrite existing file, out_file already present. verbose logical, TRUE, messages progress information displayed console (default). ... additional arguments passed render function.","code":""},{"path":"https://movevis.org/reference/animate_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Animate frames — animate_frames","text":"None default image/video viewer displaying animation","code":""},{"path":"https://movevis.org/reference/animate_frames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Animate frames — animate_frames","text":"appropriate render function selected depending file extension out_file: .gif files, gifski::save_gif used, (video) format, av::av_capture_graphics used.","code":""},{"path":[]},{"path":"https://movevis.org/reference/animate_frames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Animate frames — animate_frames","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/animate_frames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animate frames — animate_frames","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"m\", \"basemap_data\") #> Warning: data set ‘m’ not found #> Warning: data set ‘basemap_data’ not found # align movement m <- align_move(m, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: object 'm' not found  # create spatial frames with frames_spatial: r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                          fade_raster = TRUE)  # customize frames <- add_colourscale(frames, type = \"gradient\",                           colours = c(\"orange\", \"white\", \"darkgreen\"), legend_title = \"NDVI\") frames <- add_northarrow(frames, position = \"bottomleft\") frames <- add_scalebar(frames, colour = \"white\", position = \"bottomright\")  frames <- add_progress(frames) frames <- add_timestamps(frames, m, type = \"label\")  # check available formats suggest_formats()  # animate frames as GIF animate_frames(frames, out_file = tempfile(fileext = \".gif\"))  # animate frames as mov animate_frames(frames, out_file = tempfile(fileext = \".gif\")) } # }"},{"path":"https://movevis.org/reference/basemap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example NDVI data — basemap_data","title":"Example NDVI data — basemap_data","text":"dataset SpatRasterDataset, representing simulated NDVI images covering Lake Constance area, well invented dates times simulate acquisition times.","code":""},{"path":"https://movevis.org/reference/basemap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example NDVI data — basemap_data","text":"","code":"example_data(file = \"basemap_data.rds\")"},{"path":"https://movevis.org/reference/basemap_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example NDVI data — basemap_data","text":"SpatRasterDataset, consisting NDVI layers acquisition times POSIXct objects.","code":""},{"path":"https://movevis.org/reference/basemap_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example NDVI data — basemap_data","text":"Simulated based MODIS (MOD13Q1 NDVI)","code":""},{"path":"https://movevis.org/reference/basemap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example NDVI data — basemap_data","text":"file character, file name example dataset.","code":""},{"path":"https://movevis.org/reference/basemap_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example NDVI data — basemap_data","text":"object used moveVis examples unit tests. Use readRDS(example_data()) retrieve SpatRasterDataset. Times can retrieved using terra::time(readRDS(example_data()))","code":""},{"path":"https://movevis.org/reference/basemap_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Example NDVI data — basemap_data","text":"data contained used testing moveVis suitable used analysis interpretation.","code":""},{"path":"https://movevis.org/reference/c.html","id":null,"dir":"Reference","previous_headings":"","what":"Combining moveVis frames — c.moveVis","title":"Combining moveVis frames — c.moveVis","text":"Method combining multiple moveVis frames objects.","code":""},{"path":"https://movevis.org/reference/c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combining moveVis frames — c.moveVis","text":"","code":"# S3 method for class 'moveVis' c(...)"},{"path":"https://movevis.org/reference/c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combining moveVis frames — c.moveVis","text":"... two objects class moveVis.","code":""},{"path":"https://movevis.org/reference/c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combining moveVis frames — c.moveVis","text":"list moveVis frames objects.","code":""},{"path":"https://movevis.org/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated","title":"Deprecated functions — deprecated","text":"Several functions deprecated development cycles moveVis.","code":""},{"path":"https://movevis.org/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated","text":"","code":"subset_move(...)  df2move(...)  animate_move(...)  animate_raster(...)  animate_stats(...)  get_formats(...)  get_libraries(...)"},{"path":"https://movevis.org/reference/deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions — deprecated","text":"... deprecated arguments.","code":""},{"path":"https://movevis.org/reference/deprecated.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Deprecated functions — deprecated","text":"install older versions moveVis, see https://github.com/16EAGLE/moveVis/releases/ visit CRAN archive.","code":""},{"path":[]},{"path":"https://movevis.org/reference/frames_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create frames of movement-environment interaction graphs for animation — frames_graph","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"frames_graph creates list ggplot2 graphs displaying movement-environment interaction. object represents single frame. frame can viewed modified individually. returned list frames can animated using animate_frames.","code":""},{"path":"https://movevis.org/reference/frames_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"","code":"frames_graph(   m,   r,   r_type = \"gradient\",   fade_raster = FALSE,   crop_raster = TRUE,   return_data = FALSE,   graph_type = \"flow\",   path_size = 1,   path_colours = NA,   path_legend = TRUE,   path_legend_title = \"Names\",   val_min = NULL,   val_max = NULL,   val_by = 0.1,   ...,   verbose = T )"},{"path":"https://movevis.org/reference/frames_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"m move2 object uniform time scale time lag returned align_move. Can contain column named colour control path colours (see details ). r terra object, either SpatRaster (mono-temporal) SpatRasterDataset (multi-temporal). case latter, times `r` must defined 'POSIXct' (see time details ). r_type character, either \"gradient\" \"discrete\". Ignored, r contains three bands, treated RGB. fade_raster logical, TRUE, r interpolated time. FALSE, r elements assigned frames closest equivalent times r. crop_raster logical, whether crop rasters r frame extents plotting . return_data logical, TRUE, instead list frames, data.frame containing values extracted r_list per individual, location time returned. data.frame can used create multi- mono-temporal ggplot2 movement-environemnt interaction graphs. graph_type character, defines type multi-temporal graph drawn frames. Currently supported graphs : \"flow\", time flow graph frame time x axis values visited cell x y axis per individual track \"hist\", cumulative histogram cell values x axis time-cumulative counts visits y axis per individual track. path_size numeric, size path. path_colours character, vector colours. Must length number individual tracks m refers order tracks m. undefined (NA) m contains column named colour, colours provided within m used (see details). Othwersie, colours selected standard rainbow palette per individual track. path_legend logical, wether add path legend m . Legend tracks colours ordered tracks' temporal apperances, order m. path_legend_title character, path legend title. Default \"Names\". val_min numeric, minimum value value axis. undefined, minimum collected automatically. val_max numeric, maximum value value axis. undefined, maximum collected automatically. val_by numeric, increment value axis sequence. Default 0.1. graph_type = \"discrete\", value integer 1 greater. ... additional arguments, currently unused. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/frames_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"object class moveVis. return_data TRUE, data.frame returned (see return_data).","code":""},{"path":"https://movevis.org/reference/frames_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"later side--side join spatial frames created using frames_spatial frames created frames_graph animation, equal inputs must used function calls arguments m, r_list, r_times fade_raster. argument path_colours defined (set NA), path colours can defined adding character column named colour m, containing colour code name per row (e.g. \"red\". way, example, column colour rows belonging individual can set \"green\", column colour rows belonging individual B can set \"red\". Colours also arranged change time behavioral segments, geographic locations, age, environmental health parameters etc. column name colour m missing, colours selected automatically. Call colours() see available colours R.","code":""},{"path":[]},{"path":"https://movevis.org/reference/frames_graph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/frames_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create frames of movement-environment interaction graphs for animation — frames_graph","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’ library(ggplot2)  data(\"move_data\", \"basemap_data\") #> Warning: data set ‘basemap_data’ not found # align movement m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  if (FALSE) { # \\dontrun{ # use the same inputs to create a non-spatial graph, e.g. a flow graph: frames.gr <- frames_graph(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                           fade_raster = TRUE, graph_type = \"flow\") # take a look frames.gr[[100]]  # make a histogram graph: frames.gr <- frames_graph(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                           fade_raster = TRUE, graph_type = \"hist\") # change the value interval: frames.gr <- frames_graph(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                           fade_raster = TRUE, graph_type = \"hist\", val_by = 0.01)                            frames.gr[[100]] # manipulate the labels, since now they are very dense: # just replace the current scale frames.gr <- add_gg(frames.gr, expr(scale_x_continuous(breaks=seq(0,1,0.1),                                     labels=seq(0,1,0.1), expand = c(0,0)))) frames.gr[[100]]  # the same can be done for discrete data, histogram will then be shown as bin plots  # to make your own graphs, use frames_graph to return data instead of frames frames.gr <- frames_graph(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                         fade_raster = TRUE, return_data = TRUE)  # then simply animate the frames using animate_frames  # see all add_ functions on how to customize your frames created with frames_spatial # or frames_graph  # see ?animate_frames on how to animate frames } # }"},{"path":"https://movevis.org/reference/frames_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create frames of spatial movement maps for animation — frames_spatial","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"frames_spatial creates frames movement map/raster data. custom raster data provided, basemap pulled map tile service using basemaps package. Frames returned object class moveVis can subsetted, viewed (see render_frame), modified (see add_gg associated functions ) animated (see animate_frames).","code":""},{"path":"https://movevis.org/reference/frames_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"","code":"frames_spatial(   m,   r = NULL,   r_type = \"gradient\",   fade_raster = FALSE,   crop_raster = TRUE,   map_service = \"osm\",   map_type = \"streets\",   map_res = 1,   map_token = NULL,   map_dir = NULL,   margin_factor = 1.1,   equidistant = NULL,   ext = NULL,   crs = if (is.null(r)) st_crs(3857) else st_crs(terra::crs(r)),   path_size = 3,   path_end = \"round\",   path_join = \"round\",   path_mitre = 10,   path_arrow = NULL,   path_colours = NA,   path_alpha = 1,   path_fade = FALSE,   path_legend = TRUE,   path_legend_title = \"Names\",   tail_length = 19,   tail_size = 1,   tail_colour = \"white\",   trace_show = FALSE,   trace_size = tail_size,   trace_colour = \"white\",   cross_dateline = FALSE,   ...,   verbose = TRUE )"},{"path":"https://movevis.org/reference/frames_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"m move2 object uniform time scale time lag returned align_move. Can contain column named colour control path colours (see details ). r terra object, either SpatRaster (mono-temporal) SpatRasterDataset (multi-temporal). case latter, times `r` must defined 'POSIXct' (see time details ). r_type character, either \"gradient\" \"discrete\". Ignored, r contains three bands, treated RGB. fade_raster logical, TRUE, r interpolated time. FALSE, r elements assigned frames closest equivalent times r. crop_raster logical, whether crop rasters r frame extents plotting . map_service character, map service, e.g. \"osm\". Use get_maptypes list available map services types.. map_type character, map type, e.g. \"streets\". Use get_maptypes available map services types. map_res numeric, resolution base map range 0 1. map_token character, mapbox authentification token mapbox basemaps. Register https://www.mapbox.com/ get mapbox token. Mapbox free charge registration 50.000 map requests per month. Ignored, map_service = \"osm\". map_dir character, directory downloaded basemap tiles can stored. default, temporary directory used. use moveVis often area recommended set argument directory persistent throughout sessions (e.g. user folder), baesmap tiles already downloaded moveVis requested . margin_factor numeric, factor relative extent m frame extent increased around movement area. Ignored, ext set. equidistant logical, whether make map extent equidistant (squared) y x axis measuring equal distances . Especially polar regions globe might necessaray set equidistant FALSE avoid strong stretches. default (equidistant = NULL), equidistant set automatically FALSE, ext set, otherwise TRUE. Read details. ext sf bbox CRS m, optional. set, frames cropped extent. set, extent computed m, optionally margin set margin_factor. crs sf crs object. projection used visualzing movement map data. Defaults st_crs(3857) (Web Mercator), unless r defined. case, st_crs(r) used. path_size numeric, size path. path_end character, either \"round\", \"butt\" \"square\", indicating path end style. path_join character, either \"round\", \"mitre\" \"bevel\", indicating path join style. path_mitre numeric, path mitre limit (number greater 1). path_arrow arrow, path arrow specification, created grid::arrow(). path_colours character, vector colours. Must length number individual tracks m refers order tracks m. undefined (NA) m contains column named colour, colours provided within m used (see details). Othwersie, colours selected standard rainbow palette per individual track. path_alpha numeric, defines alpha (transparency) path. Value 0 1. Default 1. path_fade logical, whether paths faded towards last frame . Useful, trace_show = TRUE want hold last frame using end_pause animate_frames. path_legend logical, wether add path legend m . Legend tracks colours ordered tracks' temporal apperances, order m. path_legend_title character, path legend title. Default \"Names\". tail_length numeric, length tail per movement path. tail_size numeric, size last tail element. Default 1. tail_colour character, colour last tail element, path colour faded. Default \"white\". trace_show logical, whether show trace complete path . trace_size numeric, size trace. Default tail_size. trace_colour character, colour trace. Default \"white\". recommended define colours trace_colour  tail_colour enforce uninterrupted colour transition form tail trace. cross_dateline logical, whether tracks crossing dateline (longitude 180/-180) . TRUE, frames expanded towards side dateline smaller space. Applies CRS m projected (geographical, lon/lat). FALSE (default), frames clipped minimum maximum longitudes tracks cross. ... Additional arguments customizing frame background: alpha, numeric, background transparency (0-1). maxpixels, maximum number pixels plotted per frame. Defaults 500000. Reduce decrease detail increase rendering speeds. macColorValue, numeric, relevant RGB backgrounds (.e. r_type = \"RGB\" default base map used). Maximum colour value (e.g. 255). Defaults maximum raster value. verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/frames_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"frames object class moveVis.","code":""},{"path":"https://movevis.org/reference/frames_spatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"argument path_colours defined (set NA), path colours can defined adding character column named colour m, containing colour code name per row (e.g. \"red\". way, example, column colour rows belonging individual can set \"green\", column colour rows belonging individual B can set \"red\". Colours also arranged change time behavioral segments, geographic locations, age, environmental health parameters etc. column name colour m missing, colours selected automatically. Call colours() see available colours R. Basemap colour scales can changed/added using add_colourscale using ggplot2 commands (see examples). continous scales, use r_type = \"gradient\". discrete scales, use r_type = \"discrete\". argument equidistant set, map extent calculated (thus enlarged one axis direction) represent equal surface distances x y axis.","code":""},{"path":"https://movevis.org/reference/frames_spatial.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"use map services \"osm_thunderforest\" \"mapbox\" require registration obtain API token/key can supplied map_token. Register https://www.thunderforest.com/ /https://www.mapbox.com/ get token. projection m treated target projection. Default basemaps accessed map service reprojected projection m. Thus, depending projection m, may happen map labels distorted. get undistorted map labels, reproject m web mercator projection (default projection basemaps): spTransform(m, crs(\"+init=epsg:3857\"))","code":""},{"path":[]},{"path":"https://movevis.org/reference/frames_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/frames_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create frames of spatial movement maps for animation — frames_spatial","text":"","code":"library(moveVis) library(move2) library(terra)  # Example using multi-temporal raster data as basemap data(\"move_data\")  # align movement m <- align_move(move_data, res = units::set_units(4, \"min\")) #> Temporal resolution of 4 [min] is used to align trajectories.  # get available map types get_maptypes() #> $osm #> [1] \"streets\"     \"streets_de\"  \"topographic\" #>  #> $osm_stamen #> [1] \"toner\"      \"toner_bg\"   \"terrain\"    \"terrain_bg\" \"watercolor\" #>  #> $osm_stadia #> [1] \"alidade_smooth\"      \"alidade_smooth_dark\" \"outdoors\"            #> [4] \"osm_bright\"          #>  #> $osm_thunderforest #>  [1] \"cycle\"          \"transport\"      \"landscape\"      \"outdoors\"       #>  [5] \"transport_dark\" \"spinal\"         \"pioneer\"        \"mobile_atlas\"   #>  [9] \"neighbourhood\"  \"atlas\"          #>  #> $carto #>  [1] \"light\"                \"light_no_labels\"      \"light_only_labels\"    #>  [4] \"dark\"                 \"dark_no_labels\"       \"dark_only_labels\"     #>  [7] \"voyager\"              \"voyager_no_labels\"    \"voyager_only_labels\"  #> [10] \"voyager_labels_under\" #>  #> $mapbox #> [1] \"streets\"   \"outdoors\"  \"light\"     \"dark\"      \"satellite\" \"hybrid\"    #> [7] \"terrain\"   #>  #> $esri #>  [1] \"natgeo_world_map\"                      #>  [2] \"usa_topo_maps\"                         #>  [3] \"world_imagery\"                         #>  [4] \"world_physical_map\"                    #>  [5] \"world_shaded_relief\"                   #>  [6] \"world_street_map\"                      #>  [7] \"world_terrain_base\"                    #>  [8] \"world_topo_map\"                        #>  [9] \"world_dark_gray_base\"                  #> [10] \"world_dark_gray_reference\"             #> [11] \"world_light_gray_base\"                 #> [12] \"world_light_gray_reference\"            #> [13] \"world_hillshade_dark\"                  #> [14] \"world_hillshade\"                       #> [15] \"world_ocean_base\"                      #> [16] \"world_ocean_reference\"                 #> [17] \"antarctic_imagery\"                     #> [18] \"arctic_imagery\"                        #> [19] \"arctic_ocean_base\"                     #> [20] \"arctic_ocean_reference\"                #> [21] \"world_boundaries_and_places_alternate\" #> [22] \"world_boundaries_and_places\"           #> [23] \"world_reference_overlay\"               #> [24] \"world_transportation\"                  #> [25] \"delorme_world_base_map\"                #> [26] \"world_navigation_charts\"               #>  #> $maptiler #>  [1] \"aquarelle\" \"backdrop\"  \"basic\"     \"bright\"    \"dataviz\"   \"landscape\" #>  [7] \"ocean\"     \"outdoor\"   \"satellite\" \"streets\"   \"toner\"     \"topo\"      #> [13] \"winter\"    #>   # with osm topographic base map if (FALSE) { # \\dontrun{ frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\",   alpha = 0.5 ) # take a look at one of the frames, e.g. the 100th frames[[100]]  frames <- frames %>%    add_northarrow(position = \"bottomleft\") %>%    add_scalebar(colour = \"black\", position = \"bottomright\") %>%    add_progress() %>%    add_timestamps(type = \"label\")    frames[[100]]  # animate frames as GIF out_file <- tempfile(fileext = \".gif\") animate_frames(frames, out_file = out_file) browseURL(out_file) # view animation  # use a larger margin around extent frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5,   margin_factor = 1.8 ) frames[[100]] # take a look  # use a extent object as your AOI ext <- sf::st_bbox(move_data) ext[[\"xmin\"]] <- ext[[\"xmin\"]] - (ext[[\"xmin\"]]*0.03) ext[[\"xmax\"]] <- ext[[\"xmax\"]] + (ext[[\"xmax\"]]*0.03)  frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5,   ext = ext ) frames[[100]]  # alter path appearance (make it longer and bigger) frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5,   path_size = 4, tail_length = 29 ) frames[[100]]  # adjust path colours manually frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5,   path_colours = c(\"black\", \"blue\", \"purple\") ) frames[[100]]  m$colour <- plyr::mapvalues(   as.character(mt_track_id(m)),    unique(mt_track_id(m)), c(\"orange\", \"purple\", \"darkgreen\") )  frames <- frames_spatial(   m, map_service = \"osm\", map_type = \"topographic\", alpha = 0.5 ) frames[[100]]  } # } # create frames from custom (multi-temporal) basemaps r <- readRDS(example_data(file = \"basemap_data.rds\"))  # timestamps of each raster are stored in the SpatRasterDataset: time(r) #> [[1]] #> [1] \"2018-05-15 07:00:00 UTC\" #>  #> [[2]] #> [1] \"2018-05-15 08:20:23 UTC\" #>  #> [[3]] #> [1] \"2018-05-15 09:44:48 UTC\" #>  #> [[4]] #> [1] \"2018-05-15 11:09:12 UTC\" #>  #> [[5]] #> [1] \"2018-05-15 12:33:37 UTC\" #>  #> [[6]] #> [1] \"2018-05-15 13:54:01 UTC\" #>  #> [[7]] #> [1] \"2018-05-15 15:18:25 UTC\" #>  #> [[8]] #> [1] \"2018-05-15 16:42:50 UTC\" #>  #> [[9]] #> [1] \"2018-05-15 18:07:15 UTC\" #>  #> [[10]] #> [1] \"2018-05-15 19:31:39 UTC\" #>   # create frames frames <- frames_spatial(   m, r = r, r_type = \"gradient\",    fade_raster = TRUE ) #> Processing input data... #> Approximated animation duration: ≈ 7.52s at 25 fps using 188 frames #> CRS (geodetic): 'WGS 84' #> Assigning raster maps to frames...  # customize frames <- frames %>%    add_colourscale(     type = \"gradient\", colours = c(\"orange\", \"white\", \"darkgreen\"),     legend_title = \"NDVI\") %>%    add_northarrow(position = \"bottomleft\") %>%    add_scalebar(colour = \"white\", position = \"bottomright\") %>%    add_progress() %>%    add_timestamps(type = \"label\")    # render a single frame frames[[100]]   # check available animation file formats suggest_formats() #> [1] \"gif\"  \"mov\"  \"mp4\"  \"flv\"  \"avi\"  \"mpeg\" \"3gp\"  \"ogg\"   if (FALSE) { # \\dontrun{ # animate frames as GIF out_file <- tempfile(fileext = \".gif\") animate_frames(frames, out_file = out_file) browseURL(out_file) # view animation  # animate frames as mov out_file <- tempfile(fileext = \".mov\") animate_frames(frames, out_file = out_file) browseURL(out_file) # view animation } # }"},{"path":"https://movevis.org/reference/get_frametimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get frame times from frames — get_frametimes","title":"Get frame times from frames — get_frametimes","text":"function extracts timestamps associated frame moveVis object created using frames_spatial frames_graph returns vector.","code":""},{"path":"https://movevis.org/reference/get_frametimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get frame times from frames — get_frametimes","text":"","code":"get_frametimes(frames)"},{"path":"https://movevis.org/reference/get_frametimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get frame times from frames — get_frametimes","text":"frames object class moveVis created frames_spatial.","code":""},{"path":"https://movevis.org/reference/get_frametimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get frame times from frames — get_frametimes","text":"POSIXct vector timestamps representing time associated frame.","code":""},{"path":[]},{"path":"https://movevis.org/reference/get_frametimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get frame times from frames — get_frametimes","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’  data(\"move_data\") # align movement m <- align_move(move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  if (FALSE) { # \\dontrun{ frames <- frames_spatial(m, map_service = \"osm\", map_type = \"watercolor\") frames.ts <- get_frametimes(frames) print(frames.ts) } # }"},{"path":"https://movevis.org/reference/head.html","id":null,"dir":"Reference","previous_headings":"","what":"Return first or last frames of an moveVis frames object — tail.moveVis","title":"Return first or last frames of an moveVis frames object — tail.moveVis","text":"Method returning n last first frames moveVis frames objects.","code":""},{"path":"https://movevis.org/reference/head.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return first or last frames of an moveVis frames object — tail.moveVis","text":"","code":"# S3 method for class 'moveVis' tail(x, n = 6L, ...)  # S3 method for class 'moveVis' head(x, n = 6L, ...)"},{"path":"https://movevis.org/reference/head.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return first or last frames of an moveVis frames object — tail.moveVis","text":"x object class moveVis. n integer length length(x). ... arguments passed methods.","code":""},{"path":"https://movevis.org/reference/head.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return first or last frames of an moveVis frames object — tail.moveVis","text":"moveVis frames object.","code":""},{"path":"https://movevis.org/reference/join_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"Join multiple frames side-by-side — join_frames","title":"Join multiple frames side-by-side — join_frames","text":"function joins two moveVis frames equal lengths side--side single plot per frame using wrap_plots. useful want side--side combine spatial frames returned frames_spatial graph frames returned frames_graph.","code":""},{"path":"https://movevis.org/reference/join_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join multiple frames side-by-side — join_frames","text":"","code":"join_frames(   frames_list,   guides = \"collect\",   design = NULL,   render_all_legends = FALSE,   ...,   frames_lists = NULL,   verbose = T )"},{"path":"https://movevis.org/reference/join_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join multiple frames side-by-side — join_frames","text":"frames_list list, list two moveVis frame objects want combine onw. Must equal lengths. Frames passed wrap_plots combined frame--frame. guides character, controls treat scales/legends frames. See wrap_plots details. Defaults 'collect'. design character, controls frames arranged. See wrap_plots details. default, frames joined sidy--side horizontally. render_all_legends logical, whether legends preserved (TRUE) legend first frames object rendered (FALSE, default). ... arguments, specifying appearance joined ggplot2 objects, passed wrap_plots. See wrap_plots options. frames_lists deprecated verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/join_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join multiple frames side-by-side — join_frames","text":"frames object class moveVis.","code":""},{"path":[]},{"path":"https://movevis.org/reference/join_frames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join multiple frames side-by-side — join_frames","text":"","code":"if (FALSE) { # \\dontrun{ library(moveVis) library(move)  data(\"move_data\", \"basemap_data\") # align movement m <- align_move(move_data, res = 4, unit = \"mins\")  # create spatial frames and graph frames: r_list <- basemap_data[[1]] r_times <- basemap_data[[2]]  frames.sp <- frames_spatial(m, r_list = r_list, r_times = r_times, r_type = \"gradient\",                             fade_raster = TRUE) frames.sp <- add_colourscale(frames.sp, type = \"gradient\",                              colours = c(\"orange\", \"white\", \"darkgreen\"), legend_title = \"NDVI\") frames.flow <- frames_graph(m, r_list, r_times, path_legend = FALSE, graph_type = \"flow\") frames.hist <- frames_graph(m, r_list, r_times, path_legend = FALSE, graph_type = \"hist\")  # check lengths (must be equal) sapply(list(frames.sp, frames.flow, frames.hist), length)  # Let's join the graph frames vertically frames.join.gr <- join_frames(list(frames.flow, frames.hist), ncol = 1, nrow = 2) frames.join.gr[[100]]  # Now, let's join the joined graph frames with the spatial frames horizontally # in 2:1 ration and align all axis frames.join <- join_frames(list(frames.sp, frames.join.gr),                            ncol = 2, nrow = 1, rel_widths = c(2, 1), axis = \"tb\") frames.join[[100]] # in a standard graphics device, this looks a bit unproportional # however when setting the correct width, height and resolution of a graphic device, # it will come out well aligend.  # Do so for example with animate_move() with width = 900, dheight = 500 and res = 90 animate_frames(frames.join, out_file = tempfile(fileext = \".gif\"), fps = 25,                 width = 900, height = 500, res = 90, display = TRUE, overwrite = TRUE) } # }"},{"path":"https://movevis.org/reference/length.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of moveVis frames — length.moveVis","title":"Length of moveVis frames — length.moveVis","text":"Method get length moveVis frames, .e. number frames.","code":""},{"path":"https://movevis.org/reference/length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of moveVis frames — length.moveVis","text":"","code":"# S3 method for class 'moveVis' length(x)"},{"path":"https://movevis.org/reference/length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of moveVis frames — length.moveVis","text":"x object class moveVis.","code":""},{"path":"https://movevis.org/reference/length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of moveVis frames — length.moveVis","text":"Numeric","code":""},{"path":"https://movevis.org/reference/moveVis-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools to visualize movement data in R — moveVis-package","title":"Tools to visualize movement data in R — moveVis-package","text":"moveVis provides tools visualize movement data (e.g. GPS tracking) temporal changes environmental data (e.g. remote sensing) creating video animations. moveVis package closely connected move2 package builds ggplot2 grammar graphics.","code":""},{"path":"https://movevis.org/reference/moveVis-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tools to visualize movement data in R — moveVis-package","text":"package includes following functions, sorted order applied create animation movement data: align_move aligns single multi-individual movement data uniform time scale uniform temporal resolution needed creating animation . Use function prepare movement data animation depending temporal resolution suits data. get_maptypes returns character vector available map types can used frames_spatial. moveVis supports OpenStreetMaps Mapbox basemap imergay. Alternatively, can provide custom imagery frames_spatial. frames_spatial creates frames movement map/raster data. Frames returned object class moveVis can subsetted, viewed (see render_frame), modified (see add_gg associated functions ) animated (see animate_frames). frames_graph creates frames ggplot2 graphs displaying movement-environment interaction. object represents single frame. frame can viewed modified individually. returnedframes can animated using animate_frames. add_gg adds ggplot2 functions (e.g. add layers points, polygons, lines, change scales etc.) animation frames created frames_spatial frames_graph. Instead creating ggplot2 functions, can use one moveVis add_ functions: add_labels adds character labels title axis labels animation frames created frames_spatial frames_graph. add_scalebar adds scalebar animation frames created frames_spatial frames_graph. add_northarrow adds north arrow animation frames created frames_spatial frames_graph. add_progress adds progress bar animation frames created frames_spatial frames_graph. add_timestamps adds timestamps animation frames created frames_spatial frames_graph. add_text adds static dynamically changing text animation frames created frames_spatial frames_graph. add_colourscale adjusts colour scales animation frames created frames_spatial custom map imagery. join_frames side--side joins ggplot2 objects two frames lists equal lengths single list ggplot2 objects per frame using wrap_plots. useful want side--side combine spatial frames returned frames_spatial graph frames returned frames_graph. get_frametimes extracts timestamps associated frame moveVis object created using frames_spatial frames_graph returns vector. render_frame renders individual frame. yields result individual frame extracted using default subsetting [[]]. suggest_formats returns selection suggested file formats can used out_file animate_frames system. animate_frames creates animation list frames computed frames_spatial frames_graph. view_spatial displays movement tracks interactive mapview leaflet map. use_multicore enables multi-core usage computational expensive processing steps. use_disk enables usage disk space creating frames, can prevent memory overload creating frames large animations. majority functions can used forward pipe operator %>%, re-exported moveVis.","code":""},{"path":[]},{"path":"https://movevis.org/reference/moveVis-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tools to visualize movement data in R — moveVis-package","text":"Jakob Schwalb-Willmann. Maintainer: Jakob Schwalb-Willmann, moveVis@schwalb-willmann.de","code":""},{"path":"https://movevis.org/reference/move_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example simulated movement tracks — move_data","title":"Example simulated movement tracks — move_data","text":"dataset contains move2 object, representing coordinates acquisition times three simulated movement tracks, covering location nearby Lake Constance, Germany. Individual names made demonstration purposes.","code":""},{"path":"https://movevis.org/reference/move_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example simulated movement tracks — move_data","text":"","code":"data(move_data)"},{"path":"https://movevis.org/reference/move_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example simulated movement tracks — move_data","text":"move2 object, used move2 package.","code":""},{"path":"https://movevis.org/reference/move_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example simulated movement tracks — move_data","text":"object used moveVis examples unit tests.","code":""},{"path":"https://movevis.org/reference/move_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Example simulated movement tracks — move_data","text":"data contained used testing moveVis suitable used analysis interpretation.","code":""},{"path":"https://movevis.org/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print moveVis frames — print.moveVis","title":"Print moveVis frames — print.moveVis","text":"Method printing moveVis frames. Prints show basic information object, including number frames, extent .","code":""},{"path":"https://movevis.org/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print moveVis frames — print.moveVis","text":"","code":"# S3 method for class 'moveVis' print(x, ...)"},{"path":"https://movevis.org/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print moveVis frames — print.moveVis","text":"x object class moveVis. ... arguments passed methods.","code":""},{"path":"https://movevis.org/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print moveVis frames — print.moveVis","text":"Invisible, used side effect.","code":""},{"path":"https://movevis.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. basemaps flush_cache, get_maptypes magrittr %>%","code":""},{"path":"https://movevis.org/reference/render_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Render an individual frame — [[.moveVis","title":"Render an individual frame — [[.moveVis","text":"function renders individual frame. yields result individual frame extracted using default subsetting [[]].","code":""},{"path":"https://movevis.org/reference/render_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render an individual frame — [[.moveVis","text":"","code":"# S3 method for class 'moveVis' x[[i, ...]]  render_frame(frames, i = length(frames))"},{"path":"https://movevis.org/reference/render_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render an individual frame — [[.moveVis","text":"x frames object class moveVis. numeric, index number frame rendered. ... additional arguments, currently used. frames frames object class moveVis.","code":""},{"path":"https://movevis.org/reference/render_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render an individual frame — [[.moveVis","text":"","code":"library(moveVis) library(move) #> Error in library(move): there is no package called ‘move’ data(\"move_data\") data(\"basemap_data\") #> Warning: data set ‘basemap_data’ not found  r_list <- basemap_data[[1]] #> Error: object 'basemap_data' not found r_times <- basemap_data[[2]] #> Error: object 'basemap_data' not found  # align m <- align_move(m = move_data, res = 4, unit = \"mins\") #> Warning: Argument 'unit' is deprecated. See ?moveVis::align_move for details. #> Error: Argument 'res' must either be a 'units' object or one of c('min', 'max', 'mean', 'median').  # create frames frames <- frames_spatial(m, r_list = r_list, r_times = r_times, fade_raster = TRUE) #> Error: object 'r_list' not found  # viewing frames calling this function: render_frame(frames) # displays the last frame  #> Error: object 'frames' not found render_frame(frames, i = 100) # displays frame 100  #> Error: object 'frames' not found  if (FALSE) { # \\dontrun{ # alternatively, you can simply use `[[` to do this: frames[[100]] # displays frame 100  } # }"},{"path":"https://movevis.org/reference/rev.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse moveVis frames — rev.moveVis","title":"Reverse moveVis frames — rev.moveVis","text":"Method reversing order frames moveVis frames object.","code":""},{"path":"https://movevis.org/reference/rev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse moveVis frames — rev.moveVis","text":"","code":"# S3 method for class 'moveVis' rev(x)"},{"path":"https://movevis.org/reference/rev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse moveVis frames — rev.moveVis","text":"x object class moveVis.","code":""},{"path":"https://movevis.org/reference/rev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse moveVis frames — rev.moveVis","text":"moveVis frames object.","code":""},{"path":"https://movevis.org/reference/settings.html","id":null,"dir":"Reference","previous_headings":"","what":"moveVis settings — settings","title":"moveVis settings — settings","text":"functions control session-wide settings can increase processing speeds.","code":""},{"path":"https://movevis.org/reference/settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"moveVis settings — settings","text":"","code":"use_multicore(n_cores = NULL, verbose = TRUE)  use_disk(   frames_to_disk = TRUE,   dir_frames = paste0(tempdir(), \"/moveVis\"),   n_memory_frames = NULL,   verbose = TRUE )"},{"path":"https://movevis.org/reference/settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"moveVis settings — settings","text":"n_cores numeric, optional, number cores used. defined, number cores detected automatically (n-1 cores used n number cores available). verbose logical, TRUE, messages progress information displayed console (default). frames_to_disk logical, whether use disk space creating frames . TRUE, frames written dir_frames, clearing memory. dir_frames character, directory save frame frames creating. n_memory_frames numeric, maximum number frames allowed hold memory. number defines many frames memory cleared writing frames memory disk.","code":""},{"path":"https://movevis.org/reference/settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"moveVis settings — settings","text":"None. functions used side effects.","code":""},{"path":"https://movevis.org/reference/settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"moveVis settings — settings","text":"use_multicore enables multi-core usage moveVis setting maximum number cores used. can strongly increase speed creating frames. use_disk enables usage disk space creating frames. can prevent memory overload creating frames large animations. tasks, moveVis able use multiple cores increase computational times parallelization. default, multi-core usage disabled. function saves number cores moveVis use global option \"moveVis.n_cores\" can printed using getOption(\"moveVis.n_cores\"). much memory needed create frames depends frame resolution (number pixels) number frames. Depending much memory available can make sense allow disk usage set maximum number frames hold memory fill available memory completely. moveVis uses parallel package parallelization.","code":""},{"path":"https://movevis.org/reference/settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"moveVis settings — settings","text":"","code":"# enable multi-core usage automatically use_multicore() #> Number of cores set to be used by moveVis: 3 out of 4  # define number of cores manually use_multicore(n_cores = 2) #> Number of cores set to be used by moveVis: 2 out of 4  # allow disk use with default directory # and maxiumum of 50 frames in memory use_disk(frames_to_disk = TRUE, n_memory_frames = 50) #> Disk usage for creating frames enabled. #> Directory: '/tmp/Rtmpgl1Zwy/moveVis' #> Maximum number of frames which will be hold in memory: 50"},{"path":"https://movevis.org/reference/suggest_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest known file formats — suggest_formats","title":"Suggest known file formats — suggest_formats","text":"function returns selection suggested file formats can used out_file animate_frames system.","code":""},{"path":"https://movevis.org/reference/suggest_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest known file formats — suggest_formats","text":"","code":"suggest_formats(   suggested = c(\"gif\", \"mov\", \"mp4\", \"flv\", \"avi\", \"mpeg\", \"3gp\", \"ogg\") )"},{"path":"https://movevis.org/reference/suggest_formats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest known file formats — suggest_formats","text":"suggested character, vector suggested file formats checked known available renderers running system. default, c(\"gif\", \"mov\", \"mp4\", \"flv\", \"avi\", \"mpeg\", \"3gp\", \"ogg\").","code":""},{"path":"https://movevis.org/reference/suggest_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest known file formats — suggest_formats","text":"subset suggested, containing file formats known renderers running system.","code":""},{"path":[]},{"path":"https://movevis.org/reference/suggest_formats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggest known file formats — suggest_formats","text":"","code":"# find out which formats are available suggest_formats() #> [1] \"gif\"  \"mov\"  \"mp4\"  \"flv\"  \"avi\"  \"mpeg\" \"3gp\"  \"ogg\"   # check for a particular format not listed in \"suggested\" that you want to use, e.g. m4v suggest_formats(\"m4v\") #> [1] \"m4v\" # if \"m4v\" is returned, you can use this format with animate_frames"},{"path":"https://movevis.org/reference/view_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"View movements on an interactive map — view_spatial","title":"View movements on an interactive map — view_spatial","text":"view_spatial simple wrapper displays movement tracks interactive mapview leaflet map.","code":""},{"path":"https://movevis.org/reference/view_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View movements on an interactive map — view_spatial","text":"","code":"view_spatial(   m,   render_as = \"mapview\",   time_labels = TRUE,   stroke = TRUE,   path_colours = NA,   path_legend = TRUE,   path_legend_title = \"Names\",   verbose = TRUE )"},{"path":"https://movevis.org/reference/view_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View movements on an interactive map — view_spatial","text":"m move2 object. Can contain column named colour control path colours (see details). render_as character, either 'mapview' return mapview map 'leaflet' return leaflet map. time_labels logical, whether display timestamps track fix hovering mouse cursor. stroke logical, whether draw stroke around circles. path_colours character, vector colours. Must length number individual tracks m refers order tracks m. undefined (NA) m contains column named colour, colours provided within m used (see details). Othwersie, colours selected standard rainbow palette per individual track. path_legend logical, wether add path legend m . Legend tracks colours ordered tracks' temporal apperances, order m. path_legend_title character, path legend title. Default \"Names\". verbose logical, TRUE, messages progress information displayed console (default).","code":""},{"path":"https://movevis.org/reference/view_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View movements on an interactive map — view_spatial","text":"interactive mapview leaflet map.","code":""},{"path":"https://movevis.org/reference/view_spatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View movements on an interactive map — view_spatial","text":"argument path_colours defined (set NA), path colours can defined adding character column named colour m, containing colour code name per row (e.g. \"red\". way, example, column colour rows belonging individual can set \"green\", column colour rows belonging individual B can set \"red\". Colours also arranged change time behavioral segments, geographic locations, age, environmental health parameters etc. column name colour m missing, colours selected automatically. Call colours() see available colours R.","code":""},{"path":[]},{"path":"https://movevis.org/reference/view_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"View movements on an interactive map — view_spatial","text":"Jakob Schwalb-Willmann","code":""},{"path":"https://movevis.org/reference/view_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View movements on an interactive map — view_spatial","text":"","code":"if (FALSE) { # \\dontrun{ library(moveVis) library(move)  data(\"move_data\")  # return a mapview map (mapview must be installed) view_spatial(move_data)  # return a leaflet map (leaflet must be installed) view_spatial(move_data, render_as = \"leaflet\")  # turn off time labels and legend view_spatial(move_data, time_labels = FALSE, path_legend = FALSE)  } # }"},{"path":"https://movevis.org/reference/whitestork_data.html","id":null,"dir":"Reference","previous_headings":"","what":"White Stork LifeTrack tracks — whitestork_data","title":"White Stork LifeTrack tracks — whitestork_data","text":"dataset contains data.frame object, representing coordinates acquisition times 15 White Storks, migrating Lake Constance, SW Germany, Africa.","code":""},{"path":"https://movevis.org/reference/whitestork_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"White Stork LifeTrack tracks — whitestork_data","text":"","code":"data(whitestork_data)"},{"path":"https://movevis.org/reference/whitestork_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"White Stork LifeTrack tracks — whitestork_data","text":"df data.frame object m moveStack object object class move2 (inherits sf, data.frame) 155173 rows 3 columns.","code":""},{"path":"https://movevis.org/reference/whitestork_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"White Stork LifeTrack tracks — whitestork_data","text":"objects used moveVis examples included demonstrational purposes. dataset represents subset LifeTrack White Stork dataset Cheng et al. (2019) Fiedler et al. (2019), available Creative Commons license \"CC0 1.0 Universal Public Domain Dedication\" Movebank (doi:10.5441/001/1.ck04mn78/1).","code":""},{"path":"https://movevis.org/reference/whitestork_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"White Stork LifeTrack tracks — whitestork_data","text":"Cheng Y, Fiedler W, Wikelski M, Flack (2019) \"Closer--home\" strategy benefits juvenile survival long-distance migratory bird. Ecology Evolution. doi:10.1002/ece3.5395 Fiedler W, Flack , Schäfle W, Keeves B, Quetting M, Eid B, Schmid H, Wikelski M (2019) Data : Study \"LifeTrack White Stork SW Germany\" (2013-2019). Movebank Data Repository. doi:10.5441/001/1.ck04mn78","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-100","dir":"Changelog","previous_headings":"","what":"moveVis 1.0.0","title":"moveVis 1.0.0","text":"Updating moveVis support move2 representing trajectory data terra representing raster data. Changes: Argument res align_move now expects units object representing target time resolution (see ?moveVis::align_move). frames_spatial now expects terra SpatRasterDataset multi-temporal raster data via r argument. See ?moveVis::frames_spatial details. Deprecations: Arguments r_list r_times frames_spatial deprecated. Use argument r instead supply terra SpatRasterDataset bundle multiple multi-layered rasters time series. See ?moveVis::frames_spatial details.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0106","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.6","title":"moveVis 0.10.6","text":"New S3 class methods represent frames, lazy plotting, improvements. New features: Frames now represented new native moveVis S3 class outputted frames_*() functions frames_spatial(). class comes native printing indexing methods. Frames can easily subsetted ([), plotted ([[) checked length (length()). default print method displays summary created frames. native moveVis class, frames now rendered lazy plotted hold memory. data duplication reduced minimum, change reduces memory use frames_spatial(). functions work new class. change mostly effects things work hood alter user interface. added documentation search using DocSearch web page Argument digit align_move() deprecated, since digits now calculated automatically. Multiple improvements align_move(), including printing detected resolution data aligned. Added path_colours frames_graph() able colour paths equal paths frames_spatial() Added basemaps dependency downloading caching basemaps, removed native basemap retrieval plotting functions Added trace_size argument frames_spatial() manually control trace size instead use size tail_size, e.g. cases tail used (.e. tail_length=0) Deprecations: Argument m add_timestamps() deprecated since new moveVis class contains necessary data obtain frame times. Thus, needed anymore therefore ignored still used. Bug fixes: Bug caused align_move() break unspecific error message least one trajectory m covered time range shorter requested temporal resolution. function now warns user temporal resolution selected applied least one trajectory excludes trajectory/trajectories question returned object. Bug caused frames_spatial() interrupt error trying interpolate r_list fade_raster=T Fixed bug adding margin user ext frames_spatial() Fixed bug paths crossing end grid (aka dateline) cross_dateline=TRUE frames_spatial() Fixing bug causing path displayed tail_length=0 (now correctly showing points without tails)","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0105","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.5","title":"moveVis 0.10.5","text":"CRAN release: 2020-03-28 Revised distance calculations & handling dateline crossings. Released CRAN: 2020-03-28 New features: Argument cross_dateline frames_spatial() indicate unprojected tracks lon/lat cross dateline. Instead clipping frames longitudes -180 180, moveVis extends frames connects tracks across dateline. Distance calculations now based lwgeom Refined base map plotting (see additional arguments ... frames_spatial() available options) Added NA handling base maps (e.g. rasterized labels) Dropped dependencies Bug fixes: Minor errors warnings caused reverse dependency changes package sf","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0104-1","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.4-1","title":"moveVis 0.10.4-1","text":"CRAN release: 2020-02-13 Bug patch. Released CRAN: 2020-02-12 Bug fixes: Major bug introduced version 0.10.4 caused memory overload slow processing speeds using frames_spatial()","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0104","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.4","title":"moveVis 0.10.4","text":"CRAN release: 2020-02-07 Publication, added parallelization, new memory settings bug fixes. Released CRAN: 2020-02-07 Peer-reviewed publication: open-access paper accompanying moveVis R package peer-reviewed published ‘Methods Ecology Evolution’ (see https://doi.org/10.1111/2041-210X.13374). Reference: Schwalb-Willmann, J.; Remelgado, R.; Safi, K.; Wegmann, M. (2020). moveVis: Animating movement trajectories synchronicity static temporally dynamic environmental data R. Methods Ecology Evolution. 2020; 11: 664–669. https://doi.org/10.1111/2041-210X.13374. Citation: Please use citation(\"moveVis\") cite moveVis, e.g. use publications presentations. New features: Many computationally expensive moveVis tasks can now parallelized, multi-core support moveVis implemented (see use_multicore()) Added new example data set whitestork_data, representing coordinates acquisition times 15 White Storks migrating Lake Constance, Germany, Africa. New functions: use_multicore() lets turn multi-core support moveVis increase computational time parallelization. use_disk() enables usage disk space creating frames. can prevent memory overload creating frames large animations. Bug fixes: Bug caused gap traces paths.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0103","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.3","title":"moveVis 0.10.3","text":"CRAN release: 2019-10-06 Bug fixes. Released CRAN: 2019-10-06. New features: Argument ext frames_spatial() now clips tracks ext ext smaller extent m. Argument units add_scalebar() switch km miles Bug fixes: Bug caused scale bar distance calculated add_scalebar() 0 smaller-scale extents. Distance rounding now iterated digit solve . Bug frames_spatial() resulted wrong plot extents extent smaller extent m provided using argument ‘ext’. case, movement tracks now clipped small extents move outside visible frame instead altering frame extent. Bug causes traces cover paths trace_show = TRUE. Traces now always displayed behind paths.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0102","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.2","title":"moveVis 0.10.2","text":"CRAN release: 2019-04-30 Adding small practical features. Released CRAN: 2019-04-30. New features: Argument path_alpha frames_spatial() defining path transparency. Argument tail_colour frames_spatial() makes now possible define colour last tail element, path colour faded. Default “white”. Argument trace_show frames_spatial() displaying trace complete path (instead vanishes tail). Argument trace_colour frames_spatial() defining colour trace. Argument na.colour add_colourscale() defining colouring NA values. Argument na.show add_colourscale() show hide NA values discrete background rasters. Argument end_pause animate_frames() hold last frame, adding pause user-defined duration end animation. Argument path_fade frames_spatial() define whether paths faded towards last frame . Useful combination trace_show = T using end_pause animate_frames(). moveVis now stores timestamps represented frame attribute time ggplot frame. Frame times can now accessed using get_frametimes(). add_timestamps() can now extract timestamps directly frames, makes defining m optional. New functions: get_frametimes() lets extract timestamps associated frame list frames created using frames_spatial frames_graph. improvements: add_colourscale() now calculates scale legend frame-wide fixed limits, colours defined named vector, e.g. c(\"-1\" = \"red\", \"0\" = \"blue\", \"1\" = \"green\"). moveVis now displays approximated duration animation console, creating frames rendering frames.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0101","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.1","title":"moveVis 0.10.1","text":"CRAN release: 2019-04-11 Bug fixes. Released CRAN: 2019-04-11. Bug fixes: Bug prevented use equal colours multiple individuals Bug prevented use multiple colours per individual, e.g. colouring behavioral segments/change points Bug caused error using fade_raster = T frames_spatial() due unequal vector lengths returned internal interpolation function (issue #45) Bug caused false time assignments error, fade_raster = F /r_times contained time elements outside time range covered timestamps m.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-0100","dir":"Changelog","previous_headings":"","what":"moveVis 0.10.0","title":"moveVis 0.10.0","text":"CRAN release: 2019-03-20 moveVis rewrite introducing new logic new functions. Released CRAN: 2019-03-20 New features: movement data preparation, frames creation, layout/appearance editing animation now seperated, allowing customize steps individually. ggplot2 syntax can now added every single frame, allowing customize almost everything can customized using ggplot2 make customization easier, variety add_ functions wrapping pre-defined ggplot2 functions included. example, add_gg offers dynamic overplotting, e.g. polygons points change time track colours can now provided colour column movement data, allowing segmentation coulouring colouring based logic, defined beforhand map elements can positioned freely individual map-elements can created ggplot2 functions animation fixed-size squared standard extent: ext argument frames_spatial() can define user-defined area interest (AOI), scales frame extent specific area new base map feature based Miles McBains slippymath package. moveVis supports Mapbox (free, registration needed). OpenStreetMap Carto (free) base map services. See manual frames_spatial() details. frames_spatial() now takes argument equidistant define whether map stretched equidistant (squared) extent (x y axis representing distance) (projection-native ratio). frames_spatial() now uses coord_sf display projections (see details section frames_spatial()). New functions: align_move(), get_maptypes(), frames_spatial(), frames_graph(), add_gg(), add_labels(), add_scalebar(), add_northarrow(), add_progress(), add_timestamps(), add_text(), add_colourscale(), join_frames(), suggest_formats(), animate_frames(): see README description individual functions details. subset_move(): subset movement data particular time span df2move(): simple wrapper converts data.frames move moveStack objects view_spatial(): view movement data interactive map using mapview leaflet Deprecated functions: animate_move(), animate_raster(), animate_stats(), get_formats(), get_libraries(): functions replaced new logic new functions.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-099","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.9","title":"moveVis 0.9.9","text":"CRAN release: 2018-12-03 Reorganizing standard basemap usage moveVis. Released CRAN: 2018-11-23 New features: Static basemaps defined map_type now retrieved either OpenStreetMaps thematic imagery Microsoft Bing Maps satellite/hybrid imagery. usage OpenStreetMaps free. intensive use Bing Maps basemap options, please provide Bing Maps API key api_key argument, registering Microsoft : https://msdn.microsoft.com/en-us/library/ff428642.aspx. Google Maps services implemented future update restricted usage using API key. New baemaps options via map_type: “satellite” (default), “hybrid”, “roadmap”, “roadmap_dark”, “roadmap_bw”, “roadmap_watercolor”. New argument map_zoom animate_move: Increase decrease degree detail static basemap. New argument map_crop animate_move: Define, static basemap cropped extent m wider extent optimal resolution used. Bug fixes: Major bug causing moveVis break available static basemap option due changes Google Maps API policies.","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-098","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.8","title":"moveVis 0.9.8","text":"CRAN release: 2018-09-14 Updating unit tests CRAN checks. Released CRAN: 2018-09-14 Bug fixes: Bug causing unit tests fail machines different external tools available added SystemRequirements field DESCRIPTION","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-097","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.7","title":"moveVis 0.9.7","text":"CRAN release: 2018-09-10 Windows library detection bugs fixed. Released CRAN: 2018-09-07 New features: time_pos_x time_pos_x allow specify location timestamp display time_size allows specify font size timestamp display added unit tests Bug fixes: Bug causing moveVis properly detect installed extern libraries can called command line Bug causing moveVis use conv_dir contains Windows path tool extern library","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-096","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.6","title":"moveVis 0.9.6","text":"CRAN release: 2017-11-03 video support, automatic time harmonization, bug fixes. Released CRAN: 2017-11-01 New functions: get_libraries() – handles extern libraries needed video formats. Just run get information need install. Replaces get_imconvert(), can still called code compatibility reasons get_formats() – outputs file formats can used moveVis depending libraries installed system. New features: moveVis supports now multiple video formats addition GIF, linked video library (either FFmpeg libav) animate_move() now detects temporal resolution uniformity timestamps automatically determine, interpolation needs applied calculate uniform frame times per frame tick animate_move() now calculates displays final animation duration derived total number output frames fps prior generating frame, user can already approximate size output animation . added “frames_tres” animate_move() change temporal resolution linear interpolation added “frames_pixres” animate_move() adjust frame ppi added “paths_na.hold” animate_move() defining deal data gaps (hold hold last path location) added “time_bar_col” animate_move() changing colouring time bar top border map added “out_format” animate_move() defining output file format added “indi_names” animate_move() defining individual names vector manually added “scalebar_dist” animate_move() defining scalebar length manually added “overwrite” animate_move() regulate output file writing behaviour Improvements: now possible use ‘layer’ argument specify one (static) raster object without specifying ‘layer_dt’, needed, several raster objects handed list. situations, movement data extent bigger cropped layer extent: works now situations, stat animation lines cut , resolved now recoding multiple processing steps increase processing speed stability increased error handler several errors likely occure several bug fixes Contributors: AniMove 2017 participants","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-095","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.5","title":"moveVis 0.9.5","text":"CRAN release: 2017-08-21 adding frames_layout, static_data etc., improvements workflow. Released CRAN: 2017-08-20 New features: RGB stats support added animate_stats() animate_move() added animate_move() argument “time_scale” enable time scale added animate_move() argument “frame_layout” user friendly, complex layouting output GIF specifiying plot locations added animate_move() argument “layer_stretch” added animate_move() expert arguments “conv_cmd” “conv_frames” Improvements: several major bug fixes major animate_raster() bug fixes, reenabling use RGB rasterStack inputs stats legend now locatable using frame_layout fixed bug get_imconvert() caused issues finding convert.exe Windows machines, ImageMagick preinstalled Contributors: Bart Kranstauber","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-094","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.4","title":"moveVis 0.9.4","text":"CRAN release: 2017-06-29 adding animate_stats() stats arguments animate_move(). Released CRAN: 2017-06-28 New features: animate_stats() – Enables creation statistic plot animations visualizing possible relationships movement paths basemap. Define individual plot designs based ggplot2 syntax. stats arguments animate_move(): Enables statistic plot animations side--side spatial plot animation animate_move. Use animate_stats() arguments animate_move(). extent_factor argument animate_move(): Increase distance spatial extents movement paths basemap. Improvements: Several minor bug fixes","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-093","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.3","title":"moveVis 0.9.3","text":"fixing major bug. Released CRAN: 2017-06-28 Improvements: Fixed major bug causing unavoidable error creating animations animate_move() using user defined basemaps (Error message: ‘Error eval(expr, envir, enclos) : Object ’frame_l’ found’)","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-092","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.2","title":"moveVis 0.9.2","text":"adding frame_width frame_height arguments. Released CRAN: 2017-06-28 New features: Added two new arguments animate_move() function changing output frame resolution Bug report contributors: * vestlink () github","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-091","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.1","title":"moveVis 0.9.1","text":"CRAN release: 2017-05-23 fixing important bug; adding animate_raster(). Released CRAN: 2017-05-23 New features: Added moveStack support: animate_move() now takes also moveStack objects addition list objects animate_raster() – animating just basemaps/animate_move(), without movement data Improvements: Bug fix: Function now takes movebank.org data –> static code line preventing read-movement coordinates, now solved. Several major minor bug fixes Bug report contributors: bart1 () github Patrick Scherler","code":""},{"path":"https://movevis.org/news/index.html","id":"movevis-090","dir":"Changelog","previous_headings":"","what":"moveVis 0.9.0","title":"moveVis 0.9.0","text":"initial release. Released CRAN: 2017-04-28 Initial features: animate_move() get_imconvert() Initial example data sets: data(move_data)  document provide broad overview changes applied moveVis R package. warranty completeness, since minor changes might included. improvement feature descriptions bundled per release version. document currently maintained Jakob Schwalb-Willmann.","code":""}]
